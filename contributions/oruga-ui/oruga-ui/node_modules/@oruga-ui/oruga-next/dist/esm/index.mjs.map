{"version":3,"file":"index.mjs","sources":["../../src/index.ts"],"sourcesContent":["import type { App, Plugin } from \"vue\";\nimport type { OrugaOptions } from \"./types\";\n\nimport * as plugins from \"./components/plugins\";\n\nimport { ConfigProgrammatic, ConfigPlugin } from \"./utils/config\";\nimport { registerPlugin, registerComponentProgrammatic } from \"./utils/plugins\";\n\n// export all types\nexport * from \"./types\";\nexport * from \"./components/types\";\n\n// export all vue components\nexport * from \"./components\";\n// export all components as vue plugin\nexport * from \"./components/plugins\";\n\n// export programmatic components\nexport { LoadingProgrammatic } from \"./components/loading\";\nexport { ModalProgrammatic } from \"./components/modal\";\nexport { NotificationProgrammatic } from \"./components/notification\";\nexport { ConfigProgrammatic } from \"./utils/config\";\n// export programmatic plugins\nexport { ConfigPlugin } from \"./utils/config\";\n\n// export programmatic composable\nexport { useOruga } from \"./utils/programmatic\";\n\n// default export main oruga vue plugin\nconst plugin: Plugin = {\n    install(app: App, options: OrugaOptions = {}) {\n        // enable programmatic config registering\n        app.use(ConfigPlugin, options);\n\n        // add components\n        for (const componentKey in plugins) {\n            registerPlugin(app, plugins[componentKey]);\n        }\n\n        // add programmatic config component\n        registerComponentProgrammatic(app, \"config\", ConfigProgrammatic);\n    },\n};\n\nexport { plugin as Oruga };\nexport default plugin;\n\ndeclare module \"./index\" {\n    interface OrugaProgrammatic {\n        config: typeof ConfigProgrammatic;\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,MAAM,SAAiB;AAAA,EACnB,QAAQ,KAAU,UAAwB,IAAI;AAEtC,QAAA,IAAI,cAAc,OAAO;AAG7B,eAAW,gBAAgB,SAAS;AACjB,qBAAA,KAAK,QAAQ,YAAY,CAAC;AAAA,IAC7C;AAG8B,kCAAA,KAAK,UAAU,kBAAkB;AAAA,EACnE;AACJ;"}