{"version":3,"file":"oruga.js","sources":["../src/utils/helpers.ts","../src/utils/programmatic.ts","../src/utils/plugins.ts","../src/utils/config.ts","../src/utils/icons.ts","../src/composables/unrefElement.ts","../src/composables/defineClasses.ts","../src/composables/usePropValue.ts","../src/composables/useEventListener.ts","../src/utils/ssr.ts","../src/composables/useMatchMedia.ts","../src/components/field/FieldBody.vue","../src/components/field/Field.vue","../src/components/field/useFieldShare.ts","../src/composables/useInputHandler.ts","../src/composables/useDebounce.ts","../src/composables/useParentProvider.ts","../src/composables/useProgrammatic.ts","../src/composables/useClickOutside.ts","../src/composables/useScrollingParent.ts","../src/components/icon/Icon.vue","../src/components/input/Input.vue","../src/components/utils/PositionWrapper.vue","../src/directives/trapFocus.ts","../src/components/dropdown/Dropdown.vue","../src/components/dropdown/DropdownItem.vue","../src/components/autocomplete/Autocomplete.vue","../src/components/autocomplete/index.ts","../src/components/button/Button.vue","../src/components/button/index.ts","../src/components/carousel/Carousel.vue","../src/components/carousel/CarouselItem.vue","../src/components/carousel/index.ts","../src/components/checkbox/Checkbox.vue","../src/components/checkbox/index.ts","../src/components/collapse/Collapse.vue","../src/components/collapse/index.ts","../src/components/select/Select.vue","../src/components/utils/PickerWrapper.vue","../src/components/datepicker/utils.ts","../src/components/datepicker/useDatepickerMixins.ts","../src/components/datepicker/DatepickerTableRow.vue","../src/components/datepicker/DatepickerTable.vue","../src/components/datepicker/DatepickerMonth.vue","../src/components/datepicker/Datepicker.vue","../src/components/datepicker/index.ts","../src/components/timepicker/useTimepickerMixins.ts","../src/components/timepicker/Timepicker.vue","../src/components/datetimepicker/Datetimepicker.vue","../src/components/datetimepicker/index.ts","../src/components/dropdown/index.ts","../src/components/field/index.ts","../src/components/icon/index.ts","../src/components/input/index.ts","../src/components/loading/Loading.vue","../src/utils/InstanceRegistry.ts","../src/components/loading/LoadingProgrammatic.ts","../src/components/loading/index.ts","../src/components/menu/Menu.vue","../src/components/menu/MenuItem.vue","../src/components/menu/index.ts","../src/components/modal/Modal.vue","../src/components/modal/ModalProgrammatic.ts","../src/components/modal/index.ts","../src/components/notification/Notification.vue","../src/components/notification/NotificationNotice.vue","../src/components/notification/NotificationProgrammatic.ts","../src/components/notification/index.ts","../src/components/pagination/PaginationButton.vue","../src/components/pagination/Pagination.vue","../src/components/pagination/index.ts","../src/components/radio/Radio.vue","../src/components/radio/index.ts","../src/components/select/index.ts","../src/components/skeleton/Skeleton.vue","../src/components/skeleton/index.ts","../src/components/sidebar/Sidebar.vue","../src/components/sidebar/SidebarProgrammatic.ts","../src/components/sidebar/index.ts","../src/components/tooltip/Tooltip.vue","../src/components/slider/SliderThumb.vue","../src/components/slider/SliderTick.vue","../src/components/slider/Slider.vue","../src/components/slider/index.ts","../src/components/steps/Steps.vue","../src/components/steps/StepItem.vue","../src/components/steps/index.ts","../src/components/switch/Switch.vue","../src/components/switch/index.ts","../src/components/utils/SlotComponent.ts","../src/components/table/TableMobileSort.vue","../src/components/table/TableColumn.vue","../src/components/table/TablePagination.vue","../src/components/table/Table.vue","../src/components/table/index.ts","../src/components/tabs/Tabs.vue","../src/components/tabs/TabItem.vue","../src/components/tabs/index.ts","../src/components/taginput/Taginput.vue","../src/components/taginput/index.ts","../src/components/timepicker/index.ts","../src/components/tooltip/index.ts","../src/components/upload/Upload.vue","../src/components/upload/index.ts","../src/index.ts"],"sourcesContent":["/**\n * Generates a random string\n */\nexport const uuid = (): string => Math.random().toString(36).substring(2, 15);\n\n/**\n * +/- function to native math sign\n */\nfunction signPoly(value: number): number {\n    if (value < 0) return -1;\n    return value > 0 ? 1 : 0;\n}\nexport const sign = Math.sign || signPoly;\n\n/**\n * Native modulo bug with negative numbers\n * @param n\n * @param mod\n * @returns {number}\n */\nexport const mod = (n: number, mod: number): number => ((n % mod) + mod) % mod;\n\n/**\n * Asserts a value is beetween min and max\n * @param val\n * @param min\n * @param max\n * @returns {number}\n */\nexport function bound(val: number, min: number, max: number): number {\n    return Math.max(min, Math.min(max, val));\n}\n\nexport const isObject = <T>(obj: T): boolean =>\n    obj && typeof obj === \"object\" && !Array.isArray(obj);\n\nexport const isDefined = <T>(d: T): boolean => d !== null && d !== undefined;\n\nexport const blankIfUndefined = (value: string): string =>\n    typeof value !== \"undefined\" && value !== null ? value : \"\";\n\nexport const defaultIfUndefined = <T>(\n    value: T | undefined,\n    defaultValue: T,\n): T => (typeof value !== \"undefined\" && value !== null ? value : defaultValue);\n\nexport const toCssDimension = (width: string | number): string | number =>\n    !isDefined(width) ? null : isNaN(width as number) ? width : width + \"px\";\n\n/**\n * Extension of indexOf method by equality function if specified\n */\nexport function indexOf<T>(\n    array: T[],\n    obj: T,\n    fn: (value: T, array: T[]) => boolean,\n): number {\n    if (!array) return -1;\n    if (!fn || typeof fn !== \"function\") return array.indexOf(obj);\n    return array.findIndex((value, index, arr) => fn(value, arr));\n}\n\n/**\n * Deeply check if two values are equal\n */\nexport function isEqual(valueA: unknown, valueB: unknown): boolean {\n    // Check if only one value is empty.\n    if ((!valueA && !!valueB) || (!!valueA && !valueB)) return false;\n\n    // If both objects are identical, return true.\n    if (valueA === valueB) return true;\n\n    // Check if both values are objecs.\n    if (isObject(valueA) && isObject(valueB)) {\n        // Get the keys of both objects.\n        const keys1 = Object.keys(valueA);\n        const keys2 = Object.keys(valueB);\n\n        // Check if the number of keys is the same.\n        if (keys1.length !== keys2.length) return false;\n\n        // Iterate through the keys and compare their values recursively.\n        for (const key of keys1) {\n            const val1 = valueA[key];\n            const val2 = valueB[key];\n            const areObjects = isObject(val1) && isObject(val2);\n            if (\n                (areObjects && !isEqual(val1, val2)) ||\n                (!areObjects && val1 !== val2)\n            )\n                return false;\n        }\n        // If all checks pass, the objects are deep equal.\n        return true;\n    }\n\n    // Check if both values are arrays.\n    if (Array.isArray(valueA) && Array.isArray(valueB)) {\n        // Check if the number of keys is the same.\n        if (valueA.length !== valueB.length) return false;\n        // Check if each value of the array is the same.\n        if (!valueA.every((val, index) => val === valueB[index])) return false;\n        // If all checks pass, the arrays are deep equal.\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Clone an obj with Object.assign\n */\nexport function clone<T extends object>(obj: T): T {\n    return Object.assign({}, obj);\n}\n\n/**\n * Merge function to replace Object.assign with deep merging possibility\n */\nexport function merge(target: any, source: any, deep = false): any {\n    if (!isObject(target) || !isObject(source)) return source;\n    if (!deep) return Object.assign(target, source);\n    else return mergeDeep(target, source);\n}\n\n/**\n * Performs a deep merge of `source` into `target`.\n * Mutates `target` only but not its objects and arrays.\n *\n * @author inspired by [jhildenbiddle](https://stackoverflow.com/a/48218209).\n */\nexport function mergeDeep(target: any, source: any): any {\n    if (!isObject(target) || !isObject(source)) return source;\n\n    Object.getOwnPropertyNames(source).forEach((key) => {\n        const targetValue = target[key];\n        const sourceValue = source[key];\n\n        if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n            target[key] = targetValue.concat(sourceValue);\n        } else if (isObject(targetValue) && isObject(sourceValue)) {\n            target[key] = mergeDeep(\n                Object.assign({}, targetValue),\n                sourceValue,\n            );\n        } else {\n            target[key] = sourceValue;\n        }\n    });\n\n    return target;\n}\n\n/**\n * Get a value of an object property/path even if it's nested\n */\nexport function getValueByPath<T = any>(\n    obj: Record<string, any>,\n    path: string,\n    defaultValue?: T,\n): T {\n    const value = path\n        .split(\".\")\n        .reduce(\n            (o, i) => (typeof o !== \"undefined\" ? o[i] : undefined),\n            obj,\n        ) as T;\n    return typeof value !== \"undefined\" ? value : defaultValue;\n}\n\n/**\n * Set a value of an object property/path even if it's nested\n */\nexport function setValueByPath<T = any>(\n    obj: Record<string, any>,\n    path: string,\n    value: T,\n): void {\n    const p = path.split(\".\");\n    if (p.length === 1) {\n        obj[path] = value;\n        return;\n    }\n    const field = p[0];\n    if (typeof obj[field] === \"undefined\") obj[field] = {};\n    return setValueByPath(obj[field], p.slice(1).join(\".\"), value);\n}\n\nexport function removeElement(el: Element): void {\n    if (typeof el.remove !== \"undefined\") {\n        el.remove();\n    } else if (typeof el.parentNode !== \"undefined\" && el.parentNode !== null) {\n        el.parentNode.removeChild(el);\n    }\n}\n\nexport function createAbsoluteElement(el: Element): HTMLDivElement {\n    const root = document.createElement(\"div\");\n    root.style.position = \"absolute\";\n    root.style.left = \"0px\";\n    root.style.top = \"0px\";\n    const wrapper = document.createElement(\"div\");\n    root.appendChild(wrapper);\n    wrapper.appendChild(el);\n    document.body.appendChild(root);\n    return root;\n}\n\n/**\n * Escape regex characters\n * http://stackoverflow.com/a/6969486\n */\nexport function escapeRegExpChars(value: string): string {\n    if (!value) return value;\n    // eslint-disable-next-line no-useless-escape\n    return value.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Remove accents/diacritics in a string in JavaScript\n * https://stackoverflow.com/a/37511463\n */\nexport function removeDiacriticsFromString(value: string): string {\n    if (!value) return value;\n    return value.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n}\n\n/**\n * Mobile detection\n * https://www.abeautifulsite.net/detecting-mobile-devices-with-javascript\n */\nexport const isMobileAgent = {\n    Android: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/Android/i),\n    BlackBerry: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/BlackBerry/i),\n    iOS: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/iPhone|iPad|iPod/i),\n    Opera: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/Opera Mini/i),\n    Windows: (): boolean =>\n        typeof window !== \"undefined\" &&\n        !!window.navigator.userAgent.match(/IEMobile/i),\n    any: (): boolean =>\n        isMobileAgent.Android() ||\n        isMobileAgent.BlackBerry() ||\n        isMobileAgent.iOS() ||\n        isMobileAgent.Opera() ||\n        isMobileAgent.Windows(),\n};\n","import { ref } from \"vue\";\nimport type { OrugaProgrammatic } from \"@/types\";\n\n/** Oruga object for programmatic components */\nconst oruga = ref<OrugaProgrammatic>({} as OrugaProgrammatic);\n\n/** Add components to the oruga object */\nexport function addProgrammatic(property: string, component: object): void {\n    oruga.value[property] = component;\n}\n\n/** Composable for internal and external usage of programmatic components*/\nexport function useOruga(): OrugaProgrammatic {\n    return oruga.value;\n}\n","import type { App, Component, Plugin } from \"vue\";\nimport { useOruga, addProgrammatic } from \"./programmatic\";\n\nexport let VueInstance: App;\n\n/** set the global vue instance */\nexport const setVueInstance = (Vue: App): void => {\n    VueInstance = Vue;\n};\n\n/** register a plugin to the vue app instance */\nexport const registerPlugin = (app: App, plugin: Plugin): void => {\n    app.use(plugin);\n};\n\n/** register a component to the vue app instance */\nexport const registerComponent = (app: App, component: Component): void => {\n    app.component(component.name, component);\n};\n\n/** register a global programmatic component to the oruga object */\nexport const registerComponentProgrammatic = (\n    app: App,\n    property: string,\n    component: Component,\n): void => {\n    // set global vue instance\n    setVueInstance(app);\n    // use composable for unified access to programmatic oruga object\n    const oruga = useOruga();\n    // add component (manipulates the programmatic oruga object)\n    addProgrammatic(property, component);\n\n    // add provide and $oruga (only needed once)\n    if (!(app._context.provides && app._context.provides.oruga))\n        app.provide(\"oruga\", oruga);\n    if (!app.config.globalProperties.$oruga)\n        app.config.globalProperties.$oruga = oruga;\n};\n","import { ref, toRaw, type App } from \"vue\";\nimport { getValueByPath, merge, clone, setValueByPath } from \"./helpers\";\nimport { setVueInstance } from \"./plugins\";\nimport type { OrugaOptions } from \"@/types\";\n\nconst globalOptions = ref<OrugaOptions>({\n    iconPack: \"mdi\",\n    useHtml5Validation: true,\n    statusIcon: true,\n    transformClasses: undefined,\n});\n\nexport const setOptions = (options: OrugaOptions): void => {\n    globalOptions.value = options;\n};\n\nexport const getOptions = (): OrugaOptions => {\n    return clone(toRaw(globalOptions.value));\n};\n\nexport const getOption = <T>(path: string, defaultValue?: T): T => {\n    return getValueByPath(globalOptions.value, path, defaultValue);\n};\n\nexport const setOption = <T>(path: string, defaultValue: T): void => {\n    setValueByPath(globalOptions.value, path, defaultValue);\n};\n\nexport const ConfigProgrammatic = {\n    getOption,\n    getOptions,\n    setOption,\n    setOptions(options: OrugaOptions): void {\n        setOptions(merge(getOptions(), options, true));\n    },\n};\n\nexport const ConfigPlugin = {\n    install(app: App, options?: OrugaOptions): void {\n        // set global vue instance\n        setVueInstance(app);\n        // set options\n        setOptions(merge(getOptions(), options, true));\n    },\n};\n","import { getOption } from \"./config\";\nimport { merge } from \"./helpers\";\n\nexport type IconConfig = {\n    sizes?: { default: string; [key: string]: string };\n    iconPrefix?: string;\n    internalIcons?: Record<string, string>;\n};\n\nconst mdiIcons = {\n    sizes: {\n        default: \"mdi-24px\",\n        small: null,\n        medium: \"mdi-36px\",\n        large: \"mdi-48px\",\n    },\n    iconPrefix: \"mdi-\",\n};\n\nconst faIcons = () => {\n    const iconComponent = getOption(\"iconComponent\");\n    const faIconPrefix = iconComponent ? \"\" : \"fa-\";\n    return {\n        sizes: {\n            default: null,\n            small: null,\n            medium: \"lg\",\n            large: \"2xl\",\n        },\n        iconPrefix: faIconPrefix,\n        internalIcons: {\n            check: \"check\",\n            information: \"info-circle\",\n            alert: \"exclamation-triangle\",\n            \"alert-circle\": \"exclamation-circle\",\n            \"arrow-up\": \"arrow-up\",\n            \"chevron-right\": \"angle-right\",\n            \"chevron-left\": \"angle-left\",\n            \"chevron-down\": \"angle-down\",\n            \"chevron-up\": \"angle-up\",\n            eye: \"eye\",\n            \"eye-off\": \"eye-slash\",\n            \"caret-down\": \"caret-down\",\n            \"caret-up\": \"caret-up\",\n            \"close-circle\": \"times-circle\",\n            close: \"times\",\n            loading: \"circle-notch\",\n        },\n    };\n};\n\nconst getIcons = (): Record<string, IconConfig> => {\n    let icons: Record<string, IconConfig> = {\n        mdi: mdiIcons,\n        fa: faIcons(),\n        fas: faIcons(),\n        far: faIcons(),\n        fad: faIcons(),\n        fab: faIcons(),\n        fal: faIcons(),\n    };\n\n    const customIconPacks =\n        getOption<Record<string, IconConfig>>(\"customIconPacks\");\n    if (customIconPacks) icons = merge(icons, customIconPacks, true);\n\n    return icons;\n};\n\nexport default getIcons;\n","import {\n    toValue,\n    type ComponentPublicInstance,\n    type MaybeRefOrGetter,\n    type MaybeRef,\n    type Component,\n} from \"vue\";\n\nexport type MaybeElement =\n    | Element\n    | Document\n    | Window\n    | HTMLElement\n    | SVGElement\n    | Component\n    | ComponentPublicInstance\n    | undefined\n    | null;\n\nexport type UnRefElementReturn<T extends MaybeElement = MaybeElement> =\n    T extends ComponentPublicInstance\n        ? Exclude<MaybeElement, ComponentPublicInstance>\n        : T extends Component\n          ? HTMLElement\n          : T | undefined;\n\n/**\n * Get the dom element of a ref of element or Vue component instance\n *\n * @param elRef\n */\nexport function unrefElement<T extends MaybeElement>(\n    elRef: MaybeRefOrGetter<T> | MaybeRef<T>,\n): UnRefElementReturn<T> {\n    const plain = toValue(elRef);\n    return (plain as ComponentPublicInstance)?.$el ?? plain;\n}\n","import {\n    ref,\n    watch,\n    isRef,\n    toValue,\n    getCurrentInstance,\n    effectScope,\n    onScopeDispose,\n    getCurrentScope,\n    type MaybeRefOrGetter,\n    type Ref,\n    type ComponentInternalInstance,\n} from \"vue\";\n\nimport { getOptions } from \"@/utils/config\";\nimport { isDefined, blankIfUndefined, getValueByPath } from \"@/utils/helpers\";\n\nimport type {\n    ClassBind,\n    ClassDefinition,\n    ComponentProps,\n    TransformFunction,\n} from \"@/types\";\n\n// named tuple as prop definition\ntype ComputedClass = readonly [\n    className: string,\n    defaultClass: string,\n    suffix?: MaybeRefOrGetter<string>,\n    apply?: MaybeRefOrGetter<boolean>,\n];\n\n/** Helperfunction to get all active classes from a class binding list */\nexport const getActiveClasses = (classes: ClassBind[]): string[] => {\n    if (!classes) return [];\n    return classes.flatMap((bind) =>\n        Object.keys(bind).filter((key) => key && bind[key]),\n    );\n};\n\n/**\n * Calculate dynamic classes based on class definitions\n */\nexport function defineClasses(\n    ...classDefinitions: ComputedClass[]\n): Ref<ClassBind[]> {\n    // getting a hold of the internal instance of the component in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"defineClasses must be called within a component setup function.\",\n        );\n\n    // create an effect scope object to capture reactive effects\n    const scope = effectScope();\n\n    // reactive classes container\n    const classes = ref<ClassBind[]>([]);\n\n    classes.value = classDefinitions.map((defintion, index) => {\n        const className = defintion[0];\n        const defaultClass = defintion[1];\n        const suffix = defintion[2];\n        const apply = defintion[3];\n\n        function getClassBind(): ClassBind {\n            // compute class based on definition parameter\n            const computedClass = computeClass(\n                vm,\n                className,\n                defaultClass,\n                toValue(suffix),\n            );\n\n            // if apply is not defined or true\n            const applied = !isDefined(apply) || toValue(apply);\n\n            // return class bind property\n            return { [computedClass]: applied };\n        }\n\n        // if suffix is defined, watch suffix changed and recalculate class\n        if (isDefined(suffix) && isRef(suffix)) {\n            scope.run(() => {\n                watch(\n                    () => toValue(suffix),\n                    (value, oldValue) => {\n                        // only recompute when value has really changed\n                        if (value === oldValue) return;\n                        // recompute the class bind property\n                        const classBind = getClassBind();\n                        // update class binding property by class index\n                        classes.value[index] = classBind;\n                    },\n                );\n            });\n        }\n\n        // if apply is defined, watch apply changed and update apply state (no need of recalculation here)\n        if (isDefined(apply) && isRef(apply)) {\n            scope.run(() => {\n                watch(\n                    () => toValue(apply),\n                    (applied, oldValue) => {\n                        // only change apply when value has really changed\n                        if (applied === oldValue) return;\n\n                        // get class binding property by class index\n                        const classBind = classes.value[index];\n\n                        // update the apply class binding state\n                        Object.keys(classBind).forEach(\n                            (key) => (classBind[key] = applied),\n                        );\n\n                        // update the class binding property by class index\n                        classes.value[index] = classBind;\n                    },\n                );\n            });\n        }\n\n        // return computed class based on parameter\n        return getClassBind();\n    });\n\n    // check if there is a current active effect scope\n    if (getCurrentScope())\n        // Registers a dispose callback on the current active effect scope.\n        // The callback will be invoked when the associated effect scope is stopped.\n        onScopeDispose(() => {\n            // stop all effects when appropriate\n            if (scope) scope.stop();\n        });\n\n    // return reactive classes\n    return classes;\n}\n\n/**\n * Compute a class by a field name\n */\nfunction computeClass(\n    vm: ComponentInternalInstance,\n    field: string,\n    defaultValue?: string,\n    suffix = \"\",\n): string {\n    // get component props\n    const props = vm.props;\n\n    const configField = vm.proxy?.$options.configField;\n    if (!configField)\n        throw new Error(\"component must define the 'configField' option.\");\n\n    // get component instance override property\n    const config = props.override === true ? {} : getOptions();\n\n    // get global config override property\n    const globalOverride =\n        props.override || getValueByPath(config, \"override\", false);\n    // get component config override property\n    const localOverride = getValueByPath(\n        config,\n        `${configField}.override`,\n        globalOverride,\n    );\n    // get field specific config override property\n    const overrideClass = getValueByPath(\n        config,\n        `${configField}.${field}.override`,\n        localOverride,\n    );\n\n    // get global tranform class\n    const globalTransformClasses = getValueByPath<TransformFunction>(\n        config,\n        \"transformClasses\",\n        undefined,\n    );\n    // get field specific tranform class\n    const localTransformClasses = getValueByPath<TransformFunction>(\n        config,\n        `${configField}.transformClasses`,\n        undefined,\n    );\n\n    // get config class definition\n    let globalClass =\n        getValueByPath<ClassDefinition>(\n            config,\n            `${configField}.${field}.class`,\n            \"\",\n        ) ||\n        getValueByPath<ClassDefinition>(config, `${configField}.${field}`, \"\");\n    // get instance class override\n    let currentClass = getValueByPath<ClassDefinition>(props, field, \"\");\n\n    // procsess instance class\n    if (Array.isArray(currentClass)) {\n        currentClass = currentClass.join(\" \");\n    }\n    if (typeof currentClass === \"function\") {\n        const props = getProps(vm);\n        currentClass = currentClass(suffix, props);\n    } else {\n        currentClass = suffixProcessor(currentClass as string, suffix);\n    }\n\n    // process confic class\n    if (Array.isArray(globalClass)) {\n        globalClass = globalClass.join(\" \");\n    }\n    if (typeof globalClass === \"function\") {\n        const props = getProps(vm);\n        globalClass = globalClass(suffix, props);\n    } else {\n        globalClass = suffixProcessor(globalClass as string, suffix);\n    }\n\n    // process default value\n    if (defaultValue.includes(\"{*}\")) {\n        defaultValue = defaultValue.replace(\n            /\\{\\*\\}/g,\n            blankIfUndefined(suffix),\n        );\n    } else {\n        defaultValue = defaultValue + blankIfUndefined(suffix);\n    }\n\n    // if override is false add default value\n    // add global config classes\n    // add instance classes\n    let appliedClasses = (\n        `${!overrideClass ? defaultValue : \"\"} ` +\n        `${blankIfUndefined(globalClass)} ` +\n        `${blankIfUndefined(currentClass)}`\n    )\n        .trim()\n        .replace(/\\s\\s+/g, \" \");\n\n    // apply component local transformclass if available\n    if (localTransformClasses) {\n        appliedClasses = localTransformClasses(appliedClasses);\n    }\n    // else apply global transformclass if available\n    else if (globalTransformClasses) {\n        appliedClasses = globalTransformClasses(appliedClasses);\n    }\n\n    return appliedClasses;\n}\n\nfunction suffixProcessor(input: string, suffix: string): string {\n    return blankIfUndefined(input)\n        .split(\" \")\n        .filter((cls) => cls.length > 0)\n        .map((cls) => cls + blankIfUndefined(suffix))\n        .join(\" \");\n}\n\nconst getProps = (vm: ComponentInternalInstance): ComponentProps => {\n    let props = vm.proxy.$props;\n\n    // get all props which ends with \"Props\", these are compressed parent props\n    // append these parent props as root level prop\n    Object.keys(props)\n        .filter((key) => key.endsWith(\"Props\"))\n        .forEach((key) => (props = { ...props, ...props[key] }));\n\n    // TODO: revert object escape\n    return { props };\n};\n","import {\n    computed,\n    ref,\n    watch,\n    nextTick,\n    type ExtractPropTypes,\n    type WritableComputedRef,\n    type Ref,\n    type UnwrapRef,\n    type ComponentObjectPropsOptions,\n} from \"vue\";\n\n/**\n * Adaption of {@link https://vueuse.org/core/useVModel/} options.\n */\nexport interface PropBindingOptions<Passive extends boolean = false> {\n    /**\n     * When passive is set to `true`, it will use `watch` to sync with props and ref.\n     * Instead of relying on the `v-model` or `.sync` to work.\n     *\n     * @default false\n     */\n    passive?: Passive;\n    /**\n     * When eventName is set, it's value will be used to overwrite the emit event name.\n     *\n     * @default undefined\n     */\n    eventName?: string;\n    /**\n     * Attempting to check for changes of properties in a deeply nested object or array.\n     * Apply only when `passive` option is set to `true`\n     *\n     * @default false\n     */\n    deep?: boolean;\n}\n\nexport function usePropBinding<T>(\n    name: string,\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions<any>>>,\n    emit: (event: any, value: T) => void,\n    options?: PropBindingOptions<false>,\n): WritableComputedRef<T>;\n\nexport function usePropBinding<T>(\n    name: string,\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions<any>>>,\n    emit: (event: any, value: T) => void,\n    options?: PropBindingOptions<true>,\n): Ref<UnwrapRef<T>>;\n\n/**\n * Use two-way model binding in script setup syntax.\n * Adaption of {@link https://vueuse.org/core/useVModel/}.\n * @param name Property name\n * @param props Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>\n * @param emit EmitFn\n * @param options Extened usage options\n * @returns Ref<T>\n */\nexport function usePropBinding<T, Passive extends boolean>(\n    name: string,\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions<any>>>,\n    emit: (event: any, value: T) => void,\n    options?: PropBindingOptions<Passive>,\n): Ref<UnwrapRef<T>> | WritableComputedRef<T> {\n    const event = options?.eventName || `update:${name!.toString()}`;\n\n    if (options?.passive) {\n        const proxy = ref<T>(props[name!]);\n        let isUpdating = false;\n\n        watch(\n            () => props[name!],\n            (value) => {\n                if (!isUpdating) {\n                    isUpdating = true;\n                    proxy.value = value;\n                    nextTick(() => (isUpdating = false));\n                }\n            },\n        );\n\n        watch(\n            proxy,\n            (value) => {\n                if ((!isUpdating && value !== props[name!]) || options.deep)\n                    emit(event, value as T);\n            },\n            { deep: options.deep },\n        );\n\n        return proxy;\n    } else {\n        return computed<T>({\n            get() {\n                return props[name!] as T;\n            },\n            set(value) {\n                emit(event, value);\n            },\n        });\n    }\n}\n\nexport function useVModelBinding<T>(\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>,\n    emit: {\n        /** on input focus event */\n        (e: \"update:modelValue\", value: T): void;\n    },\n    options?: PropBindingOptions<false>,\n): WritableComputedRef<T>;\n\nexport function useVModelBinding<T>(\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>,\n    emit: {\n        /** on input focus event */\n        (e: \"update:modelValue\", value: T): void;\n    },\n    options?: PropBindingOptions<true>,\n): Ref<UnwrapRef<T>>;\n\n/**\n * Use two-way binded modelValue property in script setup syntax.\n * Adaption of {@link https://vueuse.org/core/useVModel/}.\n * @param props Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>\n * @param emit EmitFn\n * @param options Extened usage options\n * @returns Ref<T>\n */\nexport function useVModelBinding<T, Options extends PropBindingOptions>(\n    props: Readonly<ExtractPropTypes<ComponentObjectPropsOptions>>,\n    emit: {\n        /** on input focus event */\n        (e: \"update:modelValue\", value: T): void;\n    },\n    options?: Options,\n): WritableComputedRef<T> | Ref<UnwrapRef<T>> {\n    return usePropBinding(\"modelValue\", props, emit, options);\n}\n","import { onBeforeUnmount, onMounted, type MaybeRefOrGetter } from \"vue\";\nimport { isObject } from \"@/utils/helpers\";\nimport { unrefElement } from \"./unrefElement\";\n\ntype EventTarget = Element | Document | Window;\ntype EventListenerOptions = AddEventListenerOptions & {\n    /** Register event listener immediate or on mounted hook. */\n    immediate?: boolean;\n};\n\n/**\n * Register DOM events using addEventListener on mounted, and removeEventListener automatically on unmounted.\n * Adaption of {@link  https://vueuse.org/core/useEventListener}\n *\n * @param event event name\n * @param listener event listener function\n * @param el default docuemnt\n * @return stop function\n */\nexport function useEventListener(\n    event: string,\n    listener: (evt?: any) => any,\n    el: MaybeRefOrGetter<EventTarget> = document,\n    options?: EventListenerOptions,\n): () => void {\n    let cleanup: () => void;\n\n    const register = (): void => {\n        if (!el) return;\n\n        const target = unrefElement(el);\n        // create a clone of options, to avoid it being changed reactively on removal\n        const optionsClone = isObject(options) ? { ...options } : options;\n        target.addEventListener(event, listener, optionsClone);\n        cleanup = (): void =>\n            target.removeEventListener(event, listener, optionsClone);\n    };\n\n    const stop = (): void => {\n        if (typeof cleanup === \"function\") cleanup();\n    };\n\n    if (options?.immediate) register();\n    else {\n        onMounted(() => register());\n        onBeforeUnmount(() => stop());\n    }\n\n    return stop;\n}\n","// Polyfills for SSR\n\nexport const isClient = typeof window !== \"undefined\";\nexport const isSSR = typeof window === \"undefined\";\n\nexport const HTMLElement = isSSR ? Object : window.HTMLElement;\nexport const HTMLInputElement = isSSR ? Object : window.HTMLInputElement;\nexport const File = isSSR ? Object : window.File;\n","import { getCurrentInstance, ref } from \"vue\";\nimport { getOption } from \"@/utils/config\";\nimport { useEventListener } from \"./useEventListener\";\nimport { isClient } from \"@/utils/ssr\";\n\n/**\n * Checks if the match media is mobile.\n * @param mobileBreakpoint px breakpoint\n */\nexport function useMatchMedia(mobileBreakpoint?: string) {\n    const isMobile = ref(false);\n    const mediaQuery = ref();\n\n    // getting a hold of the internal instance in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"useMatchMedia must be called within a component setup function.\",\n        );\n    // get component props\n    const props = vm.props;\n\n    const configField = vm.proxy?.$options.configField;\n    if (!configField)\n        throw new Error(\"component must define the 'configField' option.\");\n\n    // get mobileBreakpoint width value\n    let width = props.mobileBreakpoint;\n    if (!width) {\n        const defaultWidth = getOption(\n            `mobileBreakpoint`,\n            mobileBreakpoint || \"1023px\",\n        );\n\n        width = getOption(`${configField}.mobileBreakpoint`, defaultWidth);\n    }\n\n    // define match media query ref\n    mediaQuery.value = isClient\n        ? window.matchMedia(`(max-width: ${width})`)\n        : undefined;\n\n    if (mediaQuery.value) {\n        isMobile.value = mediaQuery.value.matches;\n        useEventListener(\"change\", onMatchMedia, mediaQuery.value);\n    } else {\n        isMobile.value = false;\n    }\n\n    function onMatchMedia(event: any): void {\n        isMobile.value = event.matches;\n    }\n\n    return { isMobile };\n}\n","<script lang=\"ts\">\nimport {\n    defineComponent,\n    h,\n    resolveComponent,\n    Comment,\n    Text,\n    useSlots,\n    type PropType,\n} from \"vue\";\n\nimport { injectField } from \"./useFieldShare\";\n\nimport type { ClassBind } from \"@/types\";\n\nexport default defineComponent({\n    name: \"OFieldBody\",\n    configField: \"field\",\n    props: {\n        classes: {\n            type: Array as PropType<ClassBind[]>,\n            default: undefined,\n        },\n    },\n    setup(props) {\n        // inject parent field component if used inside one\n        const { parentField } = injectField();\n\n        const slots = useSlots();\n\n        return () => {\n            let first = true;\n            const slot = slots.default();\n            const children =\n                slot.length === 1 && Array.isArray(slot[0].children)\n                    ? slot[0].children\n                    : slot;\n            return h(\n                \"div\",\n                { class: props.classes },\n                children.map((element: any) => {\n                    let message;\n                    if (element.type === Comment || element.type === Text) {\n                        return element;\n                    }\n                    if (first) {\n                        message = parentField.value.fieldMessage;\n                        first = false;\n                    }\n                    return h(\n                        resolveComponent(\"OField\"),\n                        {\n                            variant: parentField.value.fieldVariant,\n                            message,\n                        },\n                        () => [element],\n                    );\n                }),\n            );\n        };\n    },\n});\n</script>\n","<script setup lang=\"ts\">\nimport { computed, ref, useSlots, watch, type PropType } from \"vue\";\n\nimport OFieldBody from \"./FieldBody.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses, useMatchMedia } from \"@/composables\";\n\nimport { injectField, provideField } from \"../field/useFieldShare\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Fields are used to add functionality to controls and to attach/group components and elements together\n * @displayName Field\n * @style _field.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OField\",\n    configField: \"field\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /**\n     * Color of the field and help message, also adds a matching icon.\n     * Used by Input, Select and Autocomplete.\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: { type: String, default: undefined },\n    /** Field label */\n    label: { type: String, default: undefined },\n    /**\n     * Vertical size of input\n     * @values small, medium, large\n     */\n    labelSize: {\n        type: String,\n        default: () => getOption(\"field.labelsize\"),\n    },\n    /** Same as native for set on the label */\n    labelFor: { type: String, default: undefined },\n    /** Help message text */\n    message: { type: String, default: undefined },\n    /**\n     * Direct child components/elements of Field will be grouped horizontally\n     * (see which ones at the top of the page).\n     */\n    grouped: { type: Boolean, default: false },\n    /** Allow controls to fill up multiple lines, making it responsive */\n    groupMultiline: { type: Boolean, default: false },\n    /** Group label and control on the same line for horizontal forms */\n    horizontal: { type: Boolean, default: false },\n    /** Field automatically attach controls together */\n    addons: { type: Boolean, default: true },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"field.mobileBreakpoint\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class to align label and control in horizontal forms */\n    horizontalClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when fields are grouped together */\n    groupedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when fields fill up multiple lines */\n    groupMultilineClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for field label */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for field label size */\n    labelSizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for field label when horizontal */\n    labelHorizontalClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for field body */\n    bodyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** \"Class for field body when horizontal */\n    bodyHorizontalClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for components automatically attached together when inside a field */\n    addonsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the field message */\n    messageClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the message field variant */\n    variantMessageClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the label field variant */\n    variantLabelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of file component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the focused field */\n    focusedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the filled field */\n    filledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\n/** Set internal variant when prop change. */\nconst fieldVariant = ref(props.variant);\nwatch(\n    () => props.variant,\n    (v) => (fieldVariant.value = v),\n);\n\n/** Set internal message when prop change. */\nconst fieldMessage = ref(props.message);\nwatch(\n    () => props.message,\n    (v) => (fieldMessage.value = v),\n);\n\n/** this can be set from outside to update the focus state. */\nconst isFocused = ref(false);\n/** this can be set from outside to update the filled state. */\nconst isFilled = ref(false);\n\n// inject parent field component if used inside one\nconst { parentField } = injectField();\n\n/** Set parent message if we use Field in Field. */\nwatch(\n    () => fieldMessage.value,\n    (value) => {\n        if (parentField?.value?.hasInnerField) {\n            if (!parentField.value.fieldVariant)\n                parentField.value.setVariant(fieldVariant.value);\n            if (!parentField.value.fieldMessage)\n                parentField.value.setMessage(value);\n        }\n    },\n);\n\nconst slots = useSlots();\n\nconst hasLabel = computed(() => props.label || !!slots.label);\n\nconst hasMessage = computed(\n    () =>\n        !!(!parentField?.value?.hasInnerField && fieldMessage.value) ||\n        !!slots.message,\n);\n\nconst hasInnerField = computed(\n    () => props.grouped || props.groupMultiline || hasAddons(),\n);\n\nfunction hasAddons(): boolean {\n    if (!props.addons || props.horizontal) return false;\n\n    let renderedNode = 0;\n    // [Vue warn]: Slot \"default\" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.\n    const slot = slots.default();\n    if (slot) {\n        const children =\n            slot.length === 1 && Array.isArray(slot[0].children)\n                ? slot[0].children\n                : slot;\n        renderedNode = children.filter((n) => !!n).length;\n    }\n    return renderedNode > 1 && props.addons && !props.horizontal;\n}\n\n// --- Field Dependency Injection Feature ---\n\nconst rootRef = ref();\n\nfunction setFocus(value: boolean): void {\n    isFocused.value = value;\n}\nfunction setFilled(value: boolean): void {\n    isFilled.value = value;\n}\nfunction setVariant(value: string): void {\n    fieldVariant.value = value;\n}\nfunction setMessage(value: string): void {\n    fieldMessage.value = value;\n}\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed(() => ({\n    $el: rootRef.value,\n    props,\n    hasInnerField: hasInnerField.value,\n    hasMessage: hasMessage.value,\n    fieldVariant: fieldVariant.value,\n    fieldMessage: fieldMessage.value,\n    setFocus,\n    setFilled,\n    setVariant,\n    setMessage,\n}));\n\n// Provide field component data via dependency injection.\nprovideField(provideData);\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-field\"],\n    [\n        \"horizontalClass\",\n        \"o-field--horizontal\",\n        null,\n        computed(() => !!props.horizontal),\n    ],\n    [\"mobileClass\", \"o-field--mobile\", null, isMobile],\n    [\"focusedClass\", \"o-field--focused\", null, isFocused],\n    [\"filledClass\", \"o-field--filled\", null, isFilled],\n);\n\nconst messageClasses = defineClasses(\n    [\"messageClass\", \"o-field__message\"],\n    [\n        \"variantMessageClass\",\n        \"o-field__message-\",\n        fieldVariant,\n        computed(() => !!fieldVariant.value),\n    ],\n);\n\nconst labelClasses = defineClasses(\n    [\"labelClass\", \"o-field__label\"],\n    [\n        \"labelSizeClass\",\n        \"o-field__label-\",\n        computed(() => props.labelSize),\n        computed(() => !!props.labelSize),\n    ],\n    [\n        \"variantLabelClass\",\n        \"o-field__label-\",\n        fieldVariant,\n        computed(() => !!fieldVariant.value),\n    ],\n);\n\nconst labelHorizontalClasses = defineClasses([\n    \"labelHorizontalClass\",\n    \"o-field__horizontal-label\",\n]);\n\nconst bodyClasses = defineClasses([\"bodyClass\", \"o-field__body\"]);\n\nconst bodyHorizontalClasses = defineClasses([\n    \"bodyHorizontalClass\",\n    \"o-field__horizontal-body\",\n]);\n\nconst innerFieldClasses = defineClasses(\n    [\"rootClass\", \"o-field\"],\n    [\n        \"groupMultilineClass\",\n        \"o-field--grouped-multiline\",\n        null,\n        computed(() => props.groupMultiline),\n    ],\n\n    [\"groupedClass\", \"o-field--grouped\", null, computed(() => props.grouped)],\n    [\n        \"addonsClass\",\n        \"o-field--addons\",\n        null,\n        computed(() => !props.grouped && hasAddons()),\n    ],\n);\n</script>\n\n<template>\n    <div ref=\"rootRef\" data-oruga=\"field\" :class=\"rootClasses\">\n        <div v-if=\"horizontal\" :class=\"labelHorizontalClasses\">\n            <label v-if=\"hasLabel\" :for=\"labelFor\" :class=\"labelClasses\">\n                <!--\n                    @slot Override the label\n                -->\n                <slot name=\"label\">{{ label }}</slot>\n            </label>\n        </div>\n        <template v-else>\n            <label v-if=\"hasLabel\" :for=\"labelFor\" :class=\"labelClasses\">\n                <!--\n                    @slot Override the label\n                -->\n                <slot name=\"label\">{{ label }}</slot>\n            </label>\n        </template>\n\n        <o-field-body v-if=\"horizontal\" :classes=\"bodyHorizontalClasses\">\n            <!--\n                @slot Default content\n            -->\n            <slot />\n        </o-field-body>\n\n        <div v-else-if=\"hasInnerField\" :class=\"bodyClasses\">\n            <div :class=\"innerFieldClasses\">\n                <!--\n                   @slot Default content\n                -->\n                <slot />\n            </div>\n        </div>\n\n        <template v-else>\n            <!--\n                @slot Default content\n            -->\n            <slot />\n        </template>\n\n        <p v-if=\"hasMessage && !horizontal\" :class=\"messageClasses\">\n            <!--\n                @slot Override the message\n            -->\n            <slot name=\"message\"> {{ fieldMessage }} </slot>\n        </p>\n    </div>\n</template>\n","import { computed, inject, provide, type ComputedRef } from \"vue\";\n\nimport Field from \"./Field.vue\";\nimport { getOption } from \"@/utils/config\";\n\nexport type FieldProps = InstanceType<typeof Field>[\"$props\"];\n\ntype FieldData = {\n    $el: Element;\n    props: FieldProps;\n    hasInnerField: boolean;\n    hasMessage: boolean;\n    fieldVariant: string;\n    fieldMessage: string;\n    setFocus: (value: boolean) => void;\n    setFilled: (value: boolean) => void;\n    setVariant: (value: string) => void;\n    setMessage: (value: string) => void;\n};\n\n/** provide/inject key */\nconst $field = Symbol();\n\n/** provide/inject type */\ntype ProvidedField = ComputedRef<FieldData>;\n\n/**\n * Provide field component data via dependency injection.\n * Provided data is a computed ref to enjure reactivity.\n */\nexport function provideField(data: ProvidedField): void {\n    provide<ProvidedField>($field, data);\n}\n\n/** Inject parent field component if used inside one. **/\nexport function injectField() {\n    const parentField = inject<ProvidedField>($field, undefined);\n\n    /**\n     * Get the type prop from parent if it's a Field.\n     */\n    const statusVariant = computed(() => {\n        if (!parentField?.value) return undefined;\n        else if (!parentField.value.fieldVariant) return undefined;\n        else {\n            if (typeof parentField.value.fieldVariant === \"string\") {\n                return parentField.value.fieldVariant;\n            } else if (Array.isArray(parentField.value.fieldVariant)) {\n                for (const key in parentField.value.fieldVariant as any) {\n                    if (parentField.value.fieldVariant[key]) {\n                        return key;\n                    }\n                }\n            }\n        }\n        return undefined;\n    });\n\n    /**\n     * Get the message prop from parent if it's a Field.\n     */\n    const statusMessage = computed(() =>\n        !parentField.value\n            ? parentField.value.fieldMessage || parentField.value.hasMessage\n            : \"\",\n    );\n\n    /**\n     * Icon name based on the variant.\n     */\n    const statusVariantIcon = computed(() => {\n        const statusVariantIcon = getOption(\"statusVariantIcon\", {\n            success: \"check\",\n            danger: \"alert-circle\",\n            info: \"information\",\n            warning: \"alert\",\n        });\n        return statusVariantIcon[statusVariant.value] || \"\";\n    });\n\n    return {\n        parentField,\n        statusVariant,\n        statusVariantIcon,\n        statusMessage,\n    };\n}\n","import {\n    nextTick,\n    ref,\n    computed,\n    type ExtractPropTypes,\n    type MaybeRefOrGetter,\n    type Component,\n} from \"vue\";\nimport { injectField } from \"@/components/field/useFieldShare\";\nimport { unrefElement } from \"./unrefElement\";\nimport { getOption } from \"@/utils/config\";\nimport { isSSR } from \"@/utils/ssr\";\n\n// This should cover all types of HTML elements that have properties related to\n// HTML constraint validation, e.g. .form and .validity.\nconst validatableFormElementTypes = isSSR\n    ? []\n    : [\n          HTMLButtonElement,\n          HTMLFieldSetElement,\n          HTMLInputElement,\n          HTMLObjectElement,\n          HTMLOutputElement,\n          HTMLSelectElement,\n          HTMLTextAreaElement,\n      ];\n\nexport type ValidatableFormElement = InstanceType<\n    (typeof validatableFormElementTypes)[number]\n>;\n\nfunction asValidatableFormElement(el: unknown): ValidatableFormElement | null {\n    return validatableFormElementTypes.some((t) => el instanceof t)\n        ? (el as ValidatableFormElement)\n        : null;\n}\n\n/**\n * Form input handler functionalities\n */\nexport function useInputHandler(\n    /** input ref element - can be a html element or a vue component*/\n    inputRef: MaybeRefOrGetter<ValidatableFormElement | Component>,\n    /** emitted input events */\n    emits: {\n        /** on input focus event */\n        (e: \"focus\", value: Event): void;\n        /** on input blur event */\n        (e: \"blur\", value: Event): void;\n        /** on input invalid event */\n        (e: \"invalid\", value: Event): void;\n    },\n    /** validation configuration props */\n    props: Readonly<\n        ExtractPropTypes<{\n            useHtml5Validation?: boolean;\n            validationMessage?: string;\n        }>\n    >,\n) {\n    // inject parent field component if used inside one\n    const { parentField } = injectField();\n\n    const element = computed<ValidatableFormElement>(() => {\n        const el = unrefElement<Component | HTMLElement>(inputRef);\n        if (!el) {\n            console.warn(\"useInputHandler: inputRef contains no element\");\n            return undefined;\n        }\n        if (el.getAttribute(\"data-oruga-input\"))\n            // if element is the input element\n            return el as ValidatableFormElement;\n\n        const inputs = el.querySelector(\"[data-oruga-input]\");\n\n        if (!inputs) {\n            console.warn(\n                \"useInputHandler: Underlaying Oruga input component not found\",\n            );\n            return undefined;\n        }\n        // return underlaying the input element\n        return inputs as ValidatableFormElement;\n    });\n\n    // --- Input Focus Feature ---\n\n    const isFocused = ref(false);\n\n    /** Focus the underlaying input element. */\n    function setFocus(): void {\n        nextTick(() => {\n            if (element.value) element.value.focus();\n        });\n    }\n\n    /** Click the underlaying input element. */\n    function doClick(): void {\n        nextTick(() => {\n            if (element.value) element.value.click();\n        });\n    }\n\n    function onBlur(event?: Event): void {\n        isFocused.value = false;\n        if (parentField?.value) parentField.value.setFocus(false);\n        emits(\"blur\", event);\n        checkHtml5Validity();\n    }\n\n    function onFocus(event?: Event): void {\n        isFocused.value = true;\n        if (parentField?.value) parentField.value.setFocus(true);\n        emits(\"focus\", event);\n    }\n\n    // --- Validation Feature ---\n\n    const isValid = ref(true);\n\n    function setFieldValidity(variant, message): void {\n        nextTick(() => {\n            if (parentField?.value) {\n                // Set type only if not defined\n                if (!parentField.value.props.variant) {\n                    parentField.value.setVariant(variant);\n                }\n                // Set message only if not defined\n                if (!parentField.value.props.message) {\n                    parentField.value.setMessage(message);\n                }\n            }\n        });\n    }\n\n    /**\n     * Check HTML5 validation, set isValid property.\n     * If validation fail, send 'danger' type,\n     * and error message to parent if it's a Field.\n     */\n    function checkHtml5Validity(): boolean {\n        if (!props.useHtml5Validation) return;\n\n        if (!element.value) return;\n        if (element.value.validity.valid) {\n            setFieldValidity(null, null);\n            isValid.value = true;\n        } else {\n            setInvalid();\n            isValid.value = false;\n        }\n\n        return isValid.value;\n    }\n\n    function setInvalid(): void {\n        const variant = \"danger\";\n        const message =\n            props.validationMessage || element.value.validationMessage;\n        setFieldValidity(variant, message);\n    }\n\n    function onInvalid(event: Event): void {\n        checkHtml5Validity();\n        const validatable = asValidatableFormElement(event.target);\n        if (validatable && parentField?.value && props.useHtml5Validation) {\n            // We provide our own error message on the field, so we should suppress the browser's default tooltip.\n            // We still want to focus the form's first invalid input, though.\n            event.preventDefault();\n            let isFirstInvalid = false;\n            if (validatable.form != null) {\n                const formElements = validatable.form.elements;\n                for (let i = 0; i < formElements.length; ++i) {\n                    const element = asValidatableFormElement(\n                        formElements.item(i),\n                    );\n                    if (element?.willValidate && !element.validity.valid) {\n                        isFirstInvalid = validatable === element;\n                        break;\n                    }\n                }\n            }\n            if (isFirstInvalid) {\n                const fieldElement = parentField.value.$el;\n                const invalidHandler = getOption(\"invalidHandler\");\n                if (invalidHandler instanceof Function) {\n                    invalidHandler(validatable, fieldElement);\n                } else {\n                    // We'll scroll to put the whole field in view, not just the element that triggered the event,\n                    // which should mean that the message will be visible onscreen.\n                    // scrollIntoViewIfNeeded() is a non-standard method (but a very common extension).\n                    // If we can't use it, we'll just fall back to focusing the field.\n                    const canScrollToField = fieldElement\n                        ? fieldElement.scrollIntoView != undefined\n                        : false;\n                    validatable.focus({ preventScroll: canScrollToField });\n                    if (canScrollToField) {\n                        fieldElement.scrollIntoView({ block: \"nearest\" });\n                    }\n                }\n            }\n        }\n        emits(\"invalid\", event);\n    }\n\n    return {\n        isFocused,\n        isValid,\n        setFocus,\n        doClick,\n        onFocus,\n        onBlur,\n        checkHtml5Validity,\n        onInvalid,\n    };\n}\n","/**\n * Debounce a function\n * @param func function to debounce\n * @param wait debounce time to wait\n * @param immediate call immediate\n * @returns function to call\n */\nexport function useDebounce<A extends Array<unknown>>(\n    func: (...args: A) => void,\n    wait: number,\n    immediate?: boolean,\n): (...args: A) => void {\n    let timeout: NodeJS.Timeout;\n    return (...args: A) => {\n        const later = () => {\n            timeout = null;\n            if (!immediate) func.apply(this, args);\n        };\n        const callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(this, args);\n    };\n}\n","import {\n    computed,\n    getCurrentInstance,\n    inject,\n    nextTick,\n    onUnmounted,\n    provide,\n    ref,\n    type ComputedRef,\n    type Ref,\n} from \"vue\";\n\nexport type ProviderItem<T = unknown> = {\n    index: number;\n    data: ComputedRef<T>;\n    identifier: string;\n};\n\ntype PovidedData<P, I = unknown> = {\n    registerItem: (data: ComputedRef<I>) => ProviderItem<I>;\n    unregisterItem: (item: ProviderItem<I>) => void;\n    data?: ComputedRef<P>;\n};\n\ntype ProviderParentOptions<T = unknown> = {\n    /**\n     * Override the provide/inject key.\n     * Default is the component configField attribute\n     */\n    key?: string;\n    /**\n     * Additional data provided for the child to the item\n     */\n    data?: ComputedRef<T>;\n};\n\n/**\n * Provide functionalities and data to child components\n * @param rootRef Root element of the provider component\n * @param data Additional data to provide\n * @param options additional options\n */\nexport function useProviderParent<ItemData = unknown, ParentData = unknown>(\n    rootRef?: Ref<HTMLElement>,\n    options?: ProviderParentOptions<ParentData>,\n): {\n    childItems: Ref<ProviderItem<ItemData>[]>;\n    sortedItems: Ref<ProviderItem<ItemData>[]>;\n} {\n    // getting a hold of the internal instance in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"useProviderChild must be called within a component setup function.\",\n        );\n\n    const configField = vm.proxy?.$options.configField;\n    const key = options?.key ? options.key : configField;\n\n    const childItems = ref<ProviderItem<ItemData>[]>([]) as Ref<\n        ProviderItem<ItemData>[]\n    >;\n    const sequence = ref(1);\n\n    /**\n     * When items are added/removed sort them according to their position\n     */\n    const sortedItems = computed(() =>\n        childItems.value.slice().sort((a, b) => a.index - b.index),\n    );\n\n    function registerItem(\n        data?: ComputedRef<ItemData>,\n    ): ProviderItem<ItemData> {\n        const index = childItems.value.length;\n        const identifier = nextSequence();\n        const item = { index, data, identifier };\n        childItems.value.push(item);\n        if (rootRef?.value) {\n            nextTick(() => {\n                const ids = childItems.value\n                    .map((item) => `[data-id=\"${key}-${item.identifier}\"]`)\n                    .join(\",\");\n                const elements = rootRef.value.querySelectorAll(ids);\n                const sortedIds = Array.from(elements).map((el: any) =>\n                    el.getAttribute(\"data-id\").replace(`${key}-`, \"\"),\n                );\n\n                childItems.value.forEach(\n                    (item) =>\n                        (item.index = sortedIds.indexOf(`${item.identifier}`)),\n                );\n            });\n        }\n        return item;\n    }\n\n    function unregisterItem(item: ProviderItem): void {\n        childItems.value = childItems.value.filter((i) => i !== item);\n    }\n\n    function nextSequence(): string {\n        return String(sequence.value++);\n    }\n\n    /** Provide functionality for child components via dependency injection. */\n    provide<PovidedData<ParentData, ItemData>>(\"$o-\" + key, {\n        registerItem,\n        unregisterItem,\n        data: options?.data,\n    });\n\n    return {\n        childItems,\n        sortedItems,\n    };\n}\n\ntype ProviderChildOptions<T = unknown> = {\n    /**\n     * Override the provide/inject key.\n     * Default is the component configField attribute\n     */\n    key?: string;\n    /**\n     * Does the child need the be below the parent?\n     * @default true\n     */\n    needParent?: boolean;\n    /**\n     * Additional data appended to the item\n     */\n    data?: ComputedRef<T>;\n    /**\n     * Register child on parent\n     * @default true\n     */\n    register?: boolean;\n};\n\n/**\n * Inject functionalities and data from parent components\n * @param options additional options\n */\nexport function useProviderChild<ParentData, ItemData = unknown>(\n    options: ProviderChildOptions<ItemData> = { needParent: true },\n): { parent: ComputedRef<ParentData>; item: Ref<ProviderItem<ItemData>> } {\n    // getting a hold of the internal instance in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"useProviderChild must be called within a component setup function.\",\n        );\n\n    const configField = vm.proxy?.$options.configField;\n    const key = options?.key ? options.key : configField;\n\n    /** Inject parent component functionality if used inside one **/\n    const parent = inject<PovidedData<ParentData, ItemData>>(\n        \"$o-\" + key,\n        undefined,\n    );\n\n    const needParent =\n        typeof options.needParent === \"undefined\" || options.needParent;\n\n    const register =\n        typeof options.register === \"undefined\" || options.register;\n\n    if (needParent && !parent) {\n        throw new Error(\n            `You should wrap ${vm.proxy.$options.name} in a ${key} component`,\n        );\n    }\n\n    const item = ref<ProviderItem<ItemData>>();\n\n    if (parent && register) item.value = parent.registerItem(options.data);\n\n    onUnmounted(() => {\n        if (parent && item.value) parent.unregisterItem(item.value);\n    });\n\n    return { parent: parent?.data, item: item };\n}\n","import { computed, getCurrentInstance, onMounted, type Ref } from \"vue\";\nimport type { ProgrammaticInstance } from \"..\";\nimport { isClient, HTMLElement } from \"@/utils/ssr\";\nimport { usePropBinding } from \"./usePropValue\";\nimport { useEventListener } from \"./useEventListener\";\nimport { removeElement } from \"@/utils/helpers\";\n\ntype ProgrammaticProps = {\n    active: boolean;\n    /** Define if the component is cancelable at all or by specific events. */\n    cancelable?: boolean | string[];\n    /** Callback function to call after user canceled (pressed escape / clicked outside). */\n    onCancel: (...args: any[]) => void;\n    /** Callback function to call after close (programmatically close or user canceled). */\n    onClose: (...args: any[]) => void;\n    /** DOM element where the programmatic component will be mounted on. */\n    container?: string | HTMLElement;\n    /** This defines the programmatic usage. */\n    programmatic?: ProgrammaticInstance;\n};\n\nexport interface ProgrammaticOptions {\n    /** Method options that allow the component to be cancelled. */\n    cancelOptions?: string[];\n    /** Destroy the component on hide. Default is `true`. */\n    destroyOnHide?: boolean;\n}\n\n/**\n * This provides functionalities for programmatic usage.\n * The component get appended to the container.\n * This defines a cancel and close handler, as well as escape handler.\n * The component will be distroyed on close.\n * @param elementRef HTMLElement which should injected\n * @param props ProgrammaticProps\n * @param emits [\"update:active\", \"close\"]\n * @param options\n */\nexport function useProgrammaticComponent(\n    elementRef: Ref<HTMLElement> | (() => HTMLElement),\n    props: ProgrammaticProps,\n    emits: {\n        (e: \"update:active\", value: boolean): void;\n        (e: \"close\", ...args: any[]): void;\n    },\n    options: ProgrammaticOptions = { cancelOptions: [\"escape\", \"outside\"] },\n) {\n    // getting a hold of the internal instance in setup()\n    const vm = getCurrentInstance();\n    if (!vm)\n        throw new Error(\n            \"useProgrammaticComponent must be called within a component setup function.\",\n        );\n\n    const isActive = usePropBinding(\"active\", props, emits);\n\n    const cancelOptions = computed(() =>\n        typeof props.cancelable === \"boolean\"\n            ? props.cancelable\n                ? options.cancelOptions\n                : []\n            : props.cancelable,\n    );\n\n    function getElement(): HTMLElement {\n        return typeof elementRef === \"function\"\n            ? elementRef()\n            : elementRef.value;\n    }\n\n    const container = computed(\n        (): HTMLElement =>\n            typeof props.container === \"string\"\n                ? document.querySelector<HTMLElement>(props.container)\n                : (props.container as HTMLElement) || document.body,\n    );\n\n    onMounted(() => {\n        if (props.programmatic) {\n            if (props.programmatic.instances) {\n                props.programmatic.instances.add(vm);\n            }\n            // Insert the component in the container or the body tag\n            // only if it's programmatic\n            const el = getElement();\n            container.value.appendChild(el);\n\n            isActive.value = true;\n        }\n    });\n\n    if (isClient) useEventListener(\"keyup\", onKeyPress, container.value);\n\n    /** Keypress event that is bound to the document. */\n    function onKeyPress(event: KeyboardEvent): void {\n        if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\")) {\n            cancel(\"escape\");\n        }\n    }\n\n    /**\n     * Close the component if cancelable.\n     * @param method Cancel method\n     */\n    function cancel(method: string): void {\n        if (!props.cancelable || !isActive.value) return;\n        // check if method is in options\n        if (cancelOptions.value.indexOf(method) < 0) return;\n        props.onCancel.apply(null);\n        close({ action: \"cancel\", method });\n    }\n\n    /**\n     * Emit events, and destroy the component if it's programmatic.\n     * Can get called outside of a setup scope.\n     */\n    function close(...args: any[]): void {\n        vm.emit(\"close\");\n        props.onClose.apply(null, args);\n\n        if (props.programmatic) {\n            if (props.programmatic.instances)\n                props.programmatic.instances.remove(vm);\n\n            if (props.programmatic.resolve)\n                props.programmatic.resolve.apply(null, args);\n\n            // Timeout for the animation complete before destroying\n            setTimeout(() => {\n                // set active state of current instance\n                vm.props.active = false;\n                vm.emit(\"update:active\", false);\n                if (\n                    typeof options.destroyOnHide === \"undefined\" ||\n                    options.destroyOnHide\n                )\n                    if (isClient)\n                        window.requestAnimationFrame(() => {\n                            // remove the component from the container or the body tag\n                            const el = getElement();\n                            if (el) removeElement(el);\n                        });\n                    else {\n                        const el = getElement();\n                        if (el) removeElement(el);\n                    }\n            });\n        } else {\n            // set active state of current instance\n            vm.props.active = false;\n            vm.emit(\"update:active\", false);\n        }\n    }\n\n    return { close, cancel, isActive, container };\n}\n","import { type MaybeRefOrGetter } from \"vue\";\nimport { useEventListener } from \"./useEventListener\";\nimport { unrefElement } from \"./unrefElement\";\n\n/**\n * Listen for clicks outside of an element.\n * Adaption of {@link https://vueuse.org/core/onClickOutside}\n *\n * @param target Target element\n * @param handler Event handler\n * @param ignore Element to ignore\n * @return stop function\n */\nexport function useClickOutside(\n    target: MaybeRefOrGetter,\n    handler: (evt: PointerEvent) => void,\n    ignore: (MaybeRefOrGetter | string)[] = [],\n): () => void {\n    if (!window) return;\n\n    /**\n     * White-listed items that not emit event when clicked.\n     * All children from ignore prop.\n     */\n    const shouldIgnore = (event: PointerEvent): boolean => {\n        return ignore.some((target) => {\n            if (typeof target === \"string\") {\n                return Array.from(\n                    window.document.querySelectorAll(target),\n                ).some(\n                    (el) =>\n                        el === event.target ||\n                        event.composedPath().includes(el),\n                );\n            } else {\n                const el = unrefElement(target);\n                return (\n                    el &&\n                    (event.target === el || event.composedPath().includes(el))\n                );\n            }\n        });\n    };\n\n    const listener = (event: PointerEvent): void => {\n        const el = unrefElement(target);\n        if (!el || el === event.target || event.composedPath().includes(el))\n            return;\n        if (shouldIgnore(event)) return;\n        handler(event);\n    };\n\n    const stop = useEventListener(\"click\", listener, window, {\n        immediate: true,\n        passive: true,\n    });\n\n    return stop;\n}\n","import { isDefined } from \"@/utils/helpers\";\n\n/**\n * Given an element, returns the element who scrolls it.\n */\nexport function getScrollingParent(target: HTMLElement): HTMLElement {\n    if (target.style.position === \"fixed\" || !target)\n        return document.documentElement;\n\n    let isScrollingParent = false;\n    let nextParent = target.parentElement;\n\n    while (!isScrollingParent && isDefined(nextParent)) {\n        if (nextParent === document.documentElement) break;\n\n        const { overflow, overflowY } = getComputedStyle(nextParent);\n        const { scrollHeight, clientHeight } = nextParent; // Both rounded by nature\n\n        isScrollingParent =\n            /(auto|scroll)/.test(`${overflow}${overflowY}`) &&\n            scrollHeight > clientHeight;\n\n        /* ...found it, this one is returned */\n        if (isScrollingParent) break;\n\n        /* ...if not check the next one */\n        nextParent = nextParent.parentElement;\n    }\n\n    return nextParent;\n}\n","<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport getIcons from \"@/utils/icons\";\nimport { defineClasses } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Icons take an important role of any application\n * @displayName Icon\n * @style _icon.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OIcon\",\n    configField: \"icon\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Icon component name */\n    component: {\n        type: String,\n        default: () => getOption(\"iconComponent\"),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    pack: {\n        type: String,\n        default: () => getOption(\"iconPack\", \"mdi\"),\n    },\n    /**\n     * \tColor of the icon\n     *  @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"icon.variant\"),\n    },\n    /** Icon name */\n    icon: { type: String, default: undefined },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"icon.size\"),\n    },\n    /**\n     * Overrides icon font size\n     * @values Depends on library: null (smallest), fa-sm, fa-lg, fa-xl, mdi-18px, mdi-24px, mdi-36px, mdi-48px\n     */\n    customSize: { type: String, default: undefined },\n    /**\n     * Add class to icon font.\n     * See icon library documentation for custom classes.\n     */\n    customClass: { type: String, default: undefined },\n    /** When true makes icon clickable */\n    clickable: { type: Boolean, default: false },\n    /** Enable spin effect on icon */\n    spin: { type: Boolean, default: false },\n    /** Rotation 0-360 */\n    rotation: { type: [Number, String], default: undefined },\n    /**\n     * This is used internally\n     * @ignore\n     */\n    both: { type: Boolean, default: false },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the icon when clickable */\n    clickableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the element when spin */\n    spinClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the icon size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the icon variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst rootStyle = computed(() => {\n    const style = {};\n    if (props.rotation) {\n        style[\"transform\"] = `rotate(${props.rotation}deg)`;\n    }\n    return style;\n});\n\nconst iconConfig = computed(() => getIcons()[props.pack]);\n\nconst iconPrefix = computed(() =>\n    iconConfig.value?.iconPrefix ? iconConfig.value.iconPrefix : \"\",\n);\n\nconst customSizeByPack = computed(() => {\n    if (iconConfig.value?.sizes) {\n        if (props.size && iconConfig.value.sizes[props.size] !== undefined) {\n            return iconConfig.value.sizes[props.size];\n        } else if (iconConfig.value.sizes.default) {\n            return iconConfig.value.sizes.default;\n        }\n    }\n    return null;\n});\n\n/**\n * Internal icon name based on the pack.\n * If pack is 'fa', gets the equivalent FA icon name of the MDI,\n * internal icons are always MDI.\n */\nconst computedIcon = computed(\n    () => `${iconPrefix.value}${getEquivalentIconOf(props.icon)}`,\n);\n\nconst computedSize = computed(() => props.customSize || customSizeByPack.value);\n\nconst computedVariant = computed(() => {\n    if (!props.variant) return;\n    let newVariant = \"\";\n    if (typeof props.variant === \"string\") {\n        newVariant = props.variant;\n    } else {\n        newVariant = Object.keys(props.variant).filter(\n            (key) => props.variant[key],\n        )[0];\n    }\n    return newVariant;\n});\n\n/** Equivalent icon name of the MDI. */\nfunction getEquivalentIconOf(value): string {\n    // Only transform the class if the both prop is set to true\n    if (!props.both) return value;\n    if (\n        iconConfig.value?.internalIcons &&\n        iconConfig.value?.internalIcons[value]\n    )\n        return iconConfig.value.internalIcons[value];\n    return value;\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-icon\"],\n    [\n        \"clickableClass\",\n        \"o-icon--clickable\",\n        null,\n        computed(() => props.clickable),\n    ],\n    [\"spinClass\", \"o-icon--spin\", null, computed(() => props.spin)],\n    [\n        \"sizeClass\",\n        \"o-icon--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-icon--\",\n        computedVariant,\n        computed(() => !!computedVariant.value),\n    ],\n);\n</script>\n\n<template>\n    <span :class=\"rootClasses\" data-oruga=\"icon\" :style=\"rootStyle\">\n        <!-- custom icon component -->\n        <component\n            :is=\"component\"\n            v-if=\"component\"\n            :icon=\"[pack, computedIcon]\"\n            :size=\"computedSize\"\n            :class=\"[customClass]\" />\n\n        <!-- native css icon -->\n        <i v-else :class=\"[pack, computedIcon, computedSize, customClass]\" />\n    </span>\n</template>\n","<script setup lang=\"ts\">\nimport {\n    ref,\n    computed,\n    nextTick,\n    watch,\n    onMounted,\n    type StyleValue,\n    type PropType,\n} from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { uuid } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    useVModelBinding,\n    useInputHandler,\n} from \"@/composables\";\n\nimport { injectField } from \"../field/useFieldShare\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Get user Input. Use with Field to access all functionalities\n * @displayName Input\n * @style _input.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OInput\",\n    configField: \"input\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number], default: \"\" },\n    /**\n     * Input type, like native\n     * @values Any native input type, and textarea\n     */\n    type: { type: String, default: \"text\" },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"input.size\"),\n    },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"input.variant\"),\n    },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Makes the element rounded */\n    rounded: { type: Boolean, default: false },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Adds the reveal password functionality */\n    passwordReveal: { type: Boolean, default: false },\n    /** Same as native maxlength, plus character counter */\n    maxlength: { type: [Number, String], default: undefined },\n    /** Show character counter when maxlength prop is passed */\n    counter: {\n        type: Boolean,\n        default: () => getOption(\"input.counter\", false),\n    },\n    /** Automatically adjust height in textarea */\n    autosize: { type: Boolean, default: false },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"input.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"input.icon\", undefined),\n    },\n    /** Makes the icon clickable */\n    iconClickable: { type: Boolean, default: false },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"input.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /** Variant of right icon */\n    iconRightVariant: { type: String, default: undefined },\n    /** Add a button/icon to clear the inputed text */\n    clearable: {\n        type: Boolean,\n        default: () => getOption(\"input.clearable\", false),\n    },\n    /** Icon name to be added on the clear button */\n    clearIcon: {\n        type: String,\n        default: () => getOption(\"input.clearIcon\", \"close-circle\"),\n    },\n    /** Show status icon using field and variant prop */\n    statusIcon: {\n        type: Boolean,\n        default: () => getOption(\"statusIcon\", true),\n    },\n    /** Native options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"input.autocomplete\", \"off\"),\n    },\n    /** Accessibility label to establish relationship between the checkbox and control label */\n    ariaLabelledby: { type: String, default: () => uuid() },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of input when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of input when type textarea */\n    textareaClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the left icon space inside the input */\n    iconLeftSpaceClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the right icon space inside the input */\n    iconRightSpaceClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the native input element */\n    inputClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of input when rounded */\n    roundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of input when disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the left icon */\n    iconLeftClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the right icon */\n    iconRightClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class to display when a right icon is used */\n    hasIconRightClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the counter element */\n    counterClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the input size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the input variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number): void;\n    /**\n     * on input change event\n     * @param value {string | number} input value\n     * @param event {Event} native event\n     */\n    (e: \"input\", value: string | number, event: Event): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n}>();\n\n// --- Validation Feature ---\n\nconst inputRef = ref<HTMLInputElement>();\nconst textareaRef = ref<HTMLInputElement>();\n\nconst elementRef = computed<HTMLInputElement>(() =>\n    props.type === \"textarea\" ? textareaRef.value : inputRef.value,\n);\n\n// use form input functionalities\nconst {\n    checkHtml5Validity,\n    onBlur,\n    onFocus,\n    onInvalid,\n    setFocus,\n    isValid,\n    isFocused,\n} = useInputHandler(elementRef, emits, props);\n\n// inject parent field component if used inside one\nconst { parentField, statusVariant, statusVariantIcon } = injectField();\n\nconst vmodel = useVModelBinding<string | number>(props, emits, {\n    passive: true,\n});\n\n/** Get value length */\nconst valueLength = computed(() =>\n    typeof vmodel.value === \"string\"\n        ? vmodel.value.length\n        : typeof vmodel.value === \"number\"\n          ? vmodel.value.toString().length\n          : 0,\n);\n\nonMounted(() => {\n    /**\n     * When v-model is changed:\n     *  1. Set parent field filled state.\n     *  2. Resize textarea input\n     *  3. Check html5 valdiation\n     */\n    watch(\n        () => vmodel.value,\n        (value) => {\n            if (parentField?.value) parentField.value.setFilled(!!value);\n            if (props.autosize) resize();\n            if (!isValid.value) nextTick(() => checkHtml5Validity());\n        },\n        { immediate: true },\n    );\n});\n\nconst height = ref(\"auto\");\n\nfunction resize(): void {\n    height.value = \"auto\";\n    nextTick(() => {\n        if (textareaRef.value) {\n            const scrollHeight = textareaRef.value.scrollHeight;\n            height.value = scrollHeight + \"px\";\n        }\n    });\n}\n\n/** Computed inline styles for autoresize */\nconst computedStyles = computed(\n    (): StyleValue =>\n        props.autosize\n            ? {\n                  resize: \"none\",\n                  height: height.value,\n                  overflow: \"hidden\",\n              }\n            : {},\n);\n\nfunction onInput(event: Event): void {\n    emits(\"input\", vmodel.value, event);\n}\n\n// --- Icon Feature ---\n\nconst hasIconRight = computed(() => {\n    return !!(\n        props.passwordReveal ||\n        (props.statusIcon && statusVariantIcon.value) ||\n        (props.clearable && vmodel.value && props.clearIcon) ||\n        props.iconRight\n    );\n});\n\nconst computedIconRight = computed(() => {\n    if (props.passwordReveal) {\n        return passwordVisibleIcon.value;\n    } else if (props.clearable && vmodel.value && props.clearIcon) {\n        return props.clearIcon;\n    } else if (props.iconRight) {\n        return props.iconRight;\n    }\n    return statusVariantIcon.value;\n});\n\nconst computedIconRightVariant = computed(() =>\n    props.passwordReveal || props.iconRight\n        ? props.iconRightVariant || props.variant || null\n        : statusVariant.value,\n);\n\nfunction iconClick(emit, event): void {\n    emits(emit, event);\n    nextTick(() => setFocus());\n}\n\nfunction rightIconClick(event: Event): void {\n    if (props.passwordReveal) togglePasswordVisibility();\n    else if (props.clearable) vmodel.value = \"\";\n    if (props.iconRightClickable) iconClick(\"icon-right-click\", event);\n}\n\n// --- Password Visability Feature ---\n\nconst isPasswordVisible = ref(false);\n\nconst inputType = computed(() => {\n    if (props.passwordReveal) {\n        return isPasswordVisible.value ? \"text\" : \"password\";\n    } else {\n        return props.type;\n    }\n});\n\n/** Current password-reveal icon name. */\nconst passwordVisibleIcon = computed(() =>\n    !isPasswordVisible.value ? \"eye\" : \"eye-off\",\n);\n\n/**\n * Toggle the visibility of a password-reveal input\n * by changing the type and focus the input right away.\n */\nfunction togglePasswordVisibility(): void {\n    isPasswordVisible.value = !isPasswordVisible.value;\n    nextTick(() => setFocus());\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-input__wrapper\"],\n    [\n        \"expandedClass\",\n        \"o-input__wrapper--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n    [\n        \"hasIconRightClass\",\n        \"o-input__wrapper--has-icon-right\",\n        null,\n        hasIconRight,\n    ],\n);\n\nconst inputClasses = defineClasses(\n    [\"inputClass\", \"o-input\"],\n    [\"roundedClass\", \"o-input--rounded\", null, computed(() => props.rounded)],\n    [\n        \"sizeClass\",\n        \"o-input--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-input--\",\n        computed(() => statusVariant.value || props.variant),\n        computed(() => !!statusVariant.value || !!props.variant),\n    ],\n    [\n        \"disabledClass\",\n        \"o-input--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\n        \"textareaClass\",\n        \"o-input__textarea\",\n        null,\n        computed(() => props.type === \"textarea\"),\n    ],\n    [\n        \"iconLeftSpaceClass\",\n        \"o-input--iconspace-left\",\n        null,\n        computed(() => !!props.icon),\n    ],\n    [\"iconRightSpaceClass\", \"o-input--iconspace-right\", null, hasIconRight],\n);\n\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-input__icon-left\"]);\n\nconst iconRightClasses = defineClasses([\n    \"iconRightClass\",\n    \"o-input__icon-right\",\n]);\n\nconst counterClasses = defineClasses([\"counterClass\", \"o-input__counter\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <div data-oruga=\"input\" :class=\"rootClasses\">\n        <input\n            v-if=\"type !== 'textarea'\"\n            v-bind=\"$attrs\"\n            ref=\"inputRef\"\n            v-model=\"vmodel\"\n            :data-oruga-input=\"inputType\"\n            :type=\"inputType\"\n            :class=\"inputClasses\"\n            :maxlength=\"maxlength\"\n            :autocomplete=\"autocomplete\"\n            :placeholder=\"placeholder\"\n            :disabled=\"disabled\"\n            :aria-labelledby=\"ariaLabelledby\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"onInput\" />\n\n        <textarea\n            v-else\n            v-bind=\"$attrs\"\n            ref=\"textareaRef\"\n            v-model=\"vmodel\"\n            data-oruga-input=\"textarea\"\n            :class=\"inputClasses\"\n            :maxlength=\"maxlength\"\n            :style=\"computedStyles\"\n            :placeholder=\"placeholder\"\n            :disabled=\"disabled\"\n            :aria-labelledby=\"ariaLabelledby\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"onInput\" />\n\n        <o-icon\n            v-if=\"icon\"\n            :class=\"iconLeftClasses\"\n            :clickable=\"iconClickable\"\n            :icon=\"icon\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            @click=\"iconClick('icon-click', $event)\" />\n\n        <o-icon\n            v-if=\"hasIconRight\"\n            :class=\"iconRightClasses\"\n            :clickable=\"passwordReveal || clearable || iconRightClickable\"\n            :icon=\"computedIconRight\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            :variant=\"computedIconRightVariant\"\n            both\n            @click=\"rightIconClick\" />\n\n        <small\n            v-if=\"maxlength && counter && isFocused && type !== 'number'\"\n            :class=\"counterClasses\">\n            {{ valueLength }} / {{ maxlength }}\n        </small>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport {\n    watch,\n    computed,\n    nextTick,\n    onBeforeUnmount,\n    ref,\n    type Component,\n    type PropType,\n} from \"vue\";\nimport { isClient } from \"@/utils/ssr\";\nimport { getScrollingParent, unrefElement } from \"@/composables\";\n\ntype Position = \"top\" | \"bottom\" | \"left\" | \"right\";\n\nconst opposites: Record<Position, Position> = {\n    top: \"bottom\",\n    bottom: \"top\",\n    right: \"left\",\n    left: \"right\",\n};\n\ntype Point = { x: number; y: number };\n\ndefineOptions({ inheritAttrs: false });\n\nconst props = defineProps({\n    teleport: {\n        type: [Boolean, String, Object],\n        required: true,\n    },\n    trigger: {\n        type: Object as PropType<HTMLElement | Component>,\n        default: undefined,\n    },\n    content: {\n        type: Object as PropType<HTMLElement | Component>,\n        default: undefined,\n    },\n    /**\n     * Position of the component relative to the trigger\n     * @values auto, top, bottom, left, right, top-right, top-left, bottom-left, bottom-right\n     */\n    position: {\n        type: String,\n        validator: (value: string) =>\n            [\n                \"auto\",\n                \"top\",\n                \"bottom\",\n                \"left\",\n                \"right\",\n                \"top-right\",\n                \"top-left\",\n                \"bottom-left\",\n                \"bottom-right\",\n            ].indexOf(value) > -1,\n        default: undefined,\n    },\n    /** Used for calculation position auto */\n    defaultPosition: {\n        type: String as PropType<Position>,\n        validator: (value: string) =>\n            [\"top\", \"bottom\", \"left\", \"right\"].indexOf(value) > -1,\n        default: \"top\",\n    },\n    /** disable the position calculation */\n    disabled: { type: Boolean, default: false },\n    /** update positioning on teleport */\n    disablePositioning: { type: Boolean, default: true },\n});\n\nconst emits = defineEmits<{\n    (e: \"update:position\", value: string);\n}>();\n\nconst to = computed(() =>\n    typeof props.teleport === \"boolean\" ? \"body\" : props.teleport,\n);\n\nconst disabled = computed(() =>\n    typeof props.teleport === \"boolean\" || !props.teleport\n        ? !props.teleport\n        : false,\n);\n\n// --- Dynamic Positioning Handling Feature ---\n\nconst initialPosition = props.position;\n\nconst scrollingParent = ref(undefined);\nconst resizeObserver = ref(null);\n\nif (isClient && window.ResizeObserver) {\n    resizeObserver.value = new window.ResizeObserver(updatePositioning);\n}\n\n// on content or disable state change update event listener\nwatch(\n    [() => props.disabled, () => props.content],\n    () => {\n        if (!props.disabled) addHandler();\n        else removeHandler();\n    },\n    { immediate: true },\n);\n\n// update positioning if props change\nwatch(\n    [\n        () => props.trigger,\n        () => props.content,\n        () => props.disablePositioning,\n        () => props.disabled,\n    ],\n    () => {\n        nextTick(() => updatePositioning());\n    },\n    { immediate: true },\n);\n\n// remove any event listener on unmount\nonBeforeUnmount(() => removeHandler());\n\n/** add event listener */\nfunction addHandler(): void {\n    if (isClient && !scrollingParent.value && props.content) {\n        // get parent container\n        scrollingParent.value = getScrollingParent(unrefElement(props.content));\n        // set event listener\n        if (\n            scrollingParent.value &&\n            scrollingParent.value !== document.documentElement\n        ) {\n            scrollingParent.value.addEventListener(\n                \"scroll\",\n                updatePositioning,\n                { passive: true },\n            );\n            if (window.ResizeObserver)\n                resizeObserver.value.observe(scrollingParent.value);\n        } else {\n            document.addEventListener(\"scroll\", updatePositioning, {\n                passive: true,\n            });\n            window.addEventListener(\"resize\", updatePositioning);\n        }\n    }\n}\n\n/** remove event listener */\nfunction removeHandler(): void {\n    if (isClient) {\n        if (window.ResizeObserver) resizeObserver.value?.disconnect();\n        window.removeEventListener(\"resize\", updatePositioning);\n        document.removeEventListener(\"scroll\", updatePositioning);\n        scrollingParent.value = undefined;\n    }\n}\n\n/** Update the best position set teleport positioning */\nfunction updatePositioning(): void {\n    if (props.disabled) return;\n    let position = props.position;\n    // update position if auto position is enabled\n    if (initialPosition === \"auto\") {\n        // calculate best position\n        position = getAutoPosition();\n        if (position != props.position)\n            // two-way bind updated position\n            emits(\"update:position\", position);\n    }\n    // do not set content position if not teleport enabled\n    if (!props.teleport) return;\n\n    const content = unrefElement(props.content);\n    const trigger = unrefElement(props.trigger);\n\n    // set content position\n    if (content && trigger) {\n        const rect = trigger.getBoundingClientRect();\n        let top = rect.top + window.scrollY;\n        let left = rect.left + window.scrollX;\n        // define vertical positioning\n        if (position.includes(\"bottom\")) {\n            top += trigger.clientHeight;\n        } else if (position.includes(\"top\")) {\n            top -= content.clientHeight;\n        }\n        // define horizontal positioning\n        if (position === \"left\") {\n            left -= content.clientWidth;\n        } else if (position === \"right\") {\n            left += trigger.clientWidth;\n        } else if (position.includes(\"-right\")) {\n            left += trigger.clientWidth - content.clientWidth;\n        }\n\n        // adjust exact vertical positioning\n        if (position === \"top\" || position === \"bottom\") {\n            left += trigger.clientWidth / 2; //- content.clientWidth / 2;\n        }\n        // adjust exact horizontal positioning\n        if (position === \"left\" || position === \"right\") {\n            top += trigger.clientHeight / 2; // - content.clientHeight / 2;\n        }\n\n        // set style properties\n        if (props.disablePositioning) {\n            content.style.position = \"relative\";\n            content.style.top = `${top}px`;\n            content.style.left = `${left}px`;\n        } else {\n            content.style.position = \"\";\n            content.style.top = \"\";\n            content.style.left = \"\";\n        }\n    }\n}\n\n/** calculate best position if auto */\nfunction getAutoPosition(): string {\n    let bestPosition = props.defaultPosition;\n    if (!props.content || !props.trigger) return bestPosition;\n    if (!scrollingParent.value) return bestPosition;\n\n    // get viewport from container\n    const viewRect = new DOMRect(\n        scrollingParent.value.offsetLeft,\n        scrollingParent.value.offsetTop,\n        scrollingParent.value.clientWidth,\n        scrollingParent.value.clientHeight,\n    );\n\n    const contentRect = unrefElement(props.content).getBoundingClientRect();\n    const triggerRect = unrefElement(props.trigger).getBoundingClientRect();\n\n    // detect auto position\n    const triggerAnchors = anchors(triggerRect);\n    const contentAnchors = anchors(contentRect);\n    const contentRectAtAnchor = (pos: Position) => {\n        const triggerAnchor = triggerAnchors[pos];\n        const contentAnchor = contentAnchors[opposites[pos]];\n        // Translates contentRect so contentAnchor is on top of triggerAnchor\n        // NOTE: this doesn't account for the extra offset that the tooltip arrow provides.\n        // That offset should be small, and it's tricky to get it from the CSS.\n        return new DOMRect(\n            contentRect.x + (triggerAnchor.x - contentAnchor.x),\n            contentRect.y + (triggerAnchor.y - contentAnchor.y),\n            contentRect.width,\n            contentRect.height,\n        );\n    };\n\n    const defaultOpposite = opposites[props.defaultPosition];\n    const crossPosition =\n        props.defaultPosition === \"top\" || props.defaultPosition === \"bottom\"\n            ? \"left\"\n            : \"top\";\n    const crossOpposite = opposites[crossPosition];\n    // In descending order of priority\n    const positions: Position[] = [\n        props.defaultPosition,\n        defaultOpposite,\n        crossPosition,\n        crossOpposite,\n    ];\n    let maxOverlap = 0;\n    for (const position of positions) {\n        const overlap = intersectionArea(\n            viewRect,\n            contentRectAtAnchor(position),\n        );\n        if (overlap > maxOverlap) {\n            maxOverlap = overlap;\n            bestPosition = position;\n        }\n    }\n    return bestPosition;\n}\n\n// --- Helper Functions ---\n\nfunction intersectionArea(a: DOMRect, b: DOMRect): number {\n    const left = Math.max(a.left, b.left);\n    const right = Math.min(a.right, b.right);\n    const top = Math.max(a.top, b.top);\n    const bottom = Math.min(a.bottom, b.bottom);\n    return Math.max(right - left, 0) * Math.max(bottom - top, 0);\n}\n\n/**\n * @param rect the bounding rectangle of the trigger element\n * @return the \"anchor points\" (points where the arrow attaches) for each side of the tooltip\n */\nconst anchors = (rect: DOMRect): Record<Position, Point> => ({\n    top: { x: (rect.left + rect.right) * 0.5, y: rect.top },\n    bottom: { x: (rect.left + rect.right) * 0.5, y: rect.bottom },\n    left: { x: rect.left, y: (rect.top + rect.bottom) * 0.5 },\n    right: { x: rect.right, y: (rect.top + rect.bottom) * 0.5 },\n});\n</script>\n\n<template>\n    <Teleport :to=\"to\" :disabled=\"disabled\">\n        <template v-if=\"disabled\">\n            <slot />\n        </template>\n        <template v-else>\n            <div\n                v-bind=\"$attrs\"\n                :style=\"{ position: 'absolute', left: '0px', top: '0px' }\">\n                <slot />\n            </div>\n        </template>\n    </Teleport>\n</template>\n","const findFocusable = (element: any, programmatic = false) => {\n    if (!element) return null;\n    if (programmatic) return element.querySelectorAll(`*[tabindex=\"-1\"]`);\n\n    return element.querySelectorAll(`a[href]:not([tabindex=\"-1\"]),\n                                     area[href],\n                                     input:not([disabled]),\n                                     select:not([disabled]),\n                                     textarea:not([disabled]),\n                                     button:not([disabled]),\n                                     iframe,\n                                     object,\n                                     embed,\n                                     *[tabindex]:not([tabindex=\"-1\"]),\n                                     *[contenteditable]`);\n};\n\nlet onKeyDown: any;\n\nconst bind = (el: any, { value = true }) => {\n    if (value) {\n        let focusable = findFocusable(el);\n        let focusableProg = findFocusable(el, true);\n\n        if (focusable && focusable.length > 0) {\n            onKeyDown = (event: any) => {\n                // Need to get focusable each time since it can change between key events\n                // ex. changing month in a datepicker\n                focusable = findFocusable(el);\n                focusableProg = findFocusable(el, true);\n                const firstFocusable = focusable[0];\n                const lastFocusable = focusable[focusable.length - 1];\n\n                if (\n                    event.target === firstFocusable &&\n                    event.shiftKey &&\n                    event.key === \"Tab\"\n                ) {\n                    event.preventDefault();\n                    lastFocusable.focus();\n                } else if (\n                    (event.target === lastFocusable ||\n                        Array.from(focusableProg).indexOf(event.target) >= 0) &&\n                    !event.shiftKey &&\n                    event.key === \"Tab\"\n                ) {\n                    event.preventDefault();\n                    firstFocusable.focus();\n                }\n            };\n            el.addEventListener(\"keydown\", onKeyDown);\n        }\n    }\n};\n\nconst unbind = (el: any) => {\n    el.removeEventListener(\"keydown\", onKeyDown);\n};\n\nconst directive = {\n    beforeMount: bind,\n    beforeUnmount: unbind,\n};\n\nexport default directive;\n\nexport const vTrapFocus = directive; // export composition api directive\n","<script setup lang=\"ts\">\nimport {\n    computed,\n    nextTick,\n    ref,\n    watch,\n    onUnmounted,\n    type PropType,\n} from \"vue\";\n\nimport PositionWrapper from \"../utils/PositionWrapper.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { vTrapFocus } from \"@/directives/trapFocus\";\nimport { toCssDimension, isMobileAgent } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    unrefElement,\n    defineClasses,\n    useProviderParent,\n    useMatchMedia,\n    useEventListener,\n    useClickOutside,\n} from \"@/composables\";\n\nimport type { DropdownComponent } from \"./types\";\n\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * Dropdowns are very versatile, can used as a quick menu or even like a select for discoverable content\n * @displayName Dropdown\n * @requires ./DropdownItem.vue\n * @style _dropdown.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ODropdown\",\n    configField: \"dropdown\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: {\n        type: [String, Number, Boolean, Object, Array],\n        default: undefined,\n    },\n    /** The active state of the dropdown, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /** Trigger label, unnecessary when trgger slot is used */\n    label: { type: String, default: undefined },\n    /** Dropdown is disabled */\n    disabled: { type: Boolean, default: false },\n    /** Dropdown content (items) are shown inline, trigger is removed */\n    inline: { type: Boolean, default: false },\n    /** Dropdown content will be scrollable */\n    scrollable: { type: Boolean, default: false },\n    /** Max height of dropdown content */\n    maxHeight: {\n        type: [String, Number],\n        default: () => getOption(\"dropdown.maxHeight\", 200),\n    },\n    /**\n     * Position of the dropdown relative to the trigger\n     * @values auto, top, bottom, left, right, top-right, top-left, bottom-left, bottom-right\n     */\n    position: {\n        type: String,\n        default: () => getOption(\"dropdown.position\", \"bottom-left\"),\n        validator: (value: string) =>\n            [\n                \"auto\",\n                \"top\",\n                \"bottom\",\n                \"left\",\n                \"right\",\n                \"top-right\",\n                \"top-left\",\n                \"bottom-left\",\n                \"bottom-right\",\n            ].indexOf(value) > -1,\n    },\n    /** Dropdown content (items) are shown into a modal on mobile */\n    mobileModal: {\n        type: Boolean,\n        default: () => getOption(\"dropdown.mobileModal\", true),\n    },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"dropdown.animation\", \"fade\"),\n    },\n    /** Allows multiple selections */\n    multiple: { type: Boolean, default: false },\n    /** Trap focus inside the dropdown. */\n    trapFocus: {\n        type: Boolean,\n        default: () => getOption(\"dropdown.trapFocus\", true),\n    },\n    /** Makes the component check if menu reached scroll start or end and emit scroll events. */\n    checkScroll: {\n        type: Boolean,\n        default: () => getOption(\"dropdown.checkScroll\", false),\n    },\n    /** Dropdown will be expanded (full-width) */\n    expanded: { type: Boolean, default: false },\n    /** HTML element ID of the dropdown menu element */\n    menuId: { type: String, default: null },\n    /** Tabindex of the dropdown menu element */\n    menuTabindex: { type: Number, default: null },\n    /** Dropdown menu tag name */\n    menuTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"dropdown.menuTag\", \"div\"),\n    },\n    /** Dropdown trigger tag name */\n    triggerTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () =>\n            getOption<DynamicComponent>(\"dropdown.triggerTag\", \"div\"),\n    },\n    /**\n     * Dropdown will be triggered by any events\n     * @values click, hover, contextmenu, focus\n     */\n    triggers: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"dropdown.triggers\", [\"click\"]),\n        validator: (values: string[]) =>\n            values.filter(\n                (value) =>\n                    [\"click\", \"hover\", \"contextmenu\", \"focus\"].indexOf(value) >\n                    -1,\n            ).length === values.length,\n    },\n    /** Dropdown delay before it appears (number in ms) */\n    delay: { type: Number, default: undefined },\n    /**\n     * Dropdown close options (pressing escape, clicking the content or outside)\n     * @values true, false, escape, outside, content\n     */\n    closeable: {\n        type: [Array, Boolean] as PropType<string[] | boolean>,\n        default: () =>\n            getOption(\"dropdown.closeable\", [\"escape\", \"outside\", \"content\"]),\n    },\n    /** Set the tabindex attribute on the dropdown trigger div (-1 to prevent selection via tab key) */\n    tabindex: { type: Number, default: 0 },\n    /**\n     * Role attribute to be passed to the list container for better accessibility.\n     * Use menu only in situations where your dropdown is related to a navigation menu.\n     * @values list, listbox, menu, dialog\n     */\n    ariaRole: {\n        type: String,\n        default: getOption(\"dropdown.ariaRole\", \"list\"),\n        validator: (value: string) =>\n            [\"list\", \"listbox\", \"menu\", \"dialog\"].indexOf(value) > -1,\n    },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"dropdown.mobileBreakpoint\"),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"dropdown.teleport\", false),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when the dropdown is teleported */\n    teleportClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the trigger element */\n    triggerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of dropdown menu when inline */\n    inlineClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the overlay when on mobile */\n    menuMobileOverlayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the dropdown menu */\n    menuClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of dropdown menu position */\n    menuPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of dropdown menu when active */\n    menuActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of dropdown when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of dropdown when disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of dropdown when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the root element indicating position of dropdown */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the root element indicating whether the dropdown is open */\n    activeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the root element when the dropdown is hoverable */\n    hoverableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {[String, Number, Boolean, Object, Array]} updated modelValue prop\n     */\n    (\n        e: \"update:modelValue\",\n        value: [string, number, boolean, object, Array<any>],\n    ): void;\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on change event - fired after modelValue:update\n     * @param value {any} selected value\n     */\n    (e: \"change\", value: any): void;\n    /**\n     * on close event\n     * @param method {string} close method\n     */\n    (e: \"close\", method: string): void;\n    /** the list inside the dropdown reached the start */\n    (e: \"scroll-start\"): void;\n    /** the list inside the dropdown reached it's end */\n    (e: \"scroll-end\"): void;\n}>();\n\nconst vmodel = defineModel<any>();\n\nconst isActive = defineModel<boolean>(\"active\");\n\nconst autoPosition = ref(props.position);\n\n/** update autoPosition on prop change */\nwatch(\n    () => props.position,\n    (v) => (autoPosition.value = v),\n);\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\n// check if mobile modal should be shown\nconst isMobileModal = computed(\n    () => isMobile.value && props.mobileModal && !props.inline,\n);\n\n// check if client is mobile native\nconst isMobileNative = computed(() => props.mobileModal && isMobileAgent.any());\n\nconst menuStyle = computed(() => ({\n    maxHeight: props.scrollable ? toCssDimension(props.maxHeight) : null,\n    overflow: props.scrollable ? \"auto\" : null,\n}));\n\nconst hoverable = computed(() => props.triggers.indexOf(\"hover\") >= 0);\n\n// --- Event Handler ---\n\nconst contentRef = ref<HTMLElement>();\nconst triggerRef = ref<HTMLElement>();\n\nconst eventCleanups = [];\nlet timer: NodeJS.Timeout;\n\nwatch(\n    isActive,\n    (value) => {\n        // on active set event handler\n        if (value && isClient) {\n            setTimeout(() => {\n                if (cancelOptions.value.indexOf(\"outside\") >= 0) {\n                    // set outside handler\n                    eventCleanups.push(\n                        useClickOutside(contentRef, onClickedOutside, [\n                            triggerRef,\n                        ]),\n                    );\n                }\n\n                if (cancelOptions.value.indexOf(\"escape\") >= 0) {\n                    // set keyup handler\n                    eventCleanups.push(\n                        useEventListener(\"keyup\", onKeyPress, document, {\n                            immediate: true,\n                        }),\n                    );\n                }\n            });\n        } else if (!value) {\n            // on close cleanup event handler\n            eventCleanups.forEach((fn) => fn());\n            eventCleanups.length = 0;\n        }\n    },\n    { immediate: true },\n);\n\nonUnmounted(() => {\n    // on close cleanup event handler\n    eventCleanups.forEach((fn) => fn());\n    eventCleanups.length = 0;\n});\n\nconst cancelOptions = computed(() =>\n    typeof props.closeable === \"boolean\"\n        ? props.closeable\n            ? [\"escape\", \"outside\", \"content\"]\n            : []\n        : props.closeable,\n);\n\n/** Close dropdown if clicked outside. */\nfunction onClickedOutside(): void {\n    if (!isActive.value || props.inline) return;\n    if (cancelOptions.value.indexOf(\"outside\") < 0) return;\n    emits(\"close\", \"outside\");\n    isActive.value = false;\n}\n\n/** Keypress event that is bound to the document */\nfunction onKeyPress(event: KeyboardEvent): void {\n    if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\")) {\n        if (cancelOptions.value.indexOf(\"escape\") < 0) return;\n        emits(\"close\", \"escape\");\n        isActive.value = false;\n    }\n}\n\nfunction onClick(): void {\n    if (props.triggers.indexOf(\"click\") < 0) return;\n    toggle();\n}\n\nfunction onContextMenu(event: MouseEvent): void {\n    if (props.triggers.indexOf(\"contextmenu\") < 0) return;\n    event.preventDefault();\n    open();\n}\n\nfunction onFocus(): void {\n    if (props.triggers.indexOf(\"focus\") < 0) return;\n    open();\n}\n\nconst isHovered = ref(false);\nfunction onHover(): void {\n    if (!isMobileNative.value && props.triggers.indexOf(\"hover\") >= 0) {\n        isHovered.value = true;\n        open();\n    }\n}\nfunction onHoverLeave(): void {\n    if (!isMobileNative.value && isHovered.value) {\n        isHovered.value = false;\n        onClose();\n    }\n}\n\n/** Toggle dropdown if it's not disabled. */\nfunction toggle(): void {\n    if (props.disabled) return;\n    if (isActive.value) isActive.value = !isActive.value;\n    // if not active, toggle after clickOutside event\n    // this fixes toggling programmatic\n    else nextTick(() => (isActive.value = !isActive.value));\n}\n\nfunction open(): void {\n    if (props.disabled) return;\n    if (props.delay) {\n        timer = setTimeout(() => {\n            isActive.value = true;\n            timer = null;\n        }, props.delay);\n    } else {\n        isActive.value = true;\n    }\n}\n\nfunction onClose(): void {\n    if (cancelOptions.value.indexOf(\"content\") < 0) return;\n    emits(\"close\", \"content\");\n    isActive.value = !props.closeable;\n    if (timer && props.closeable) clearTimeout(timer);\n}\n\n// --- InfitiveScroll Feature ---\n\nif (isClient && props.checkScroll)\n    useEventListener(\"scroll\", checkDropdownScroll, contentRef);\n\n/** Check if the scroll list inside the dropdown reached the top or it's end. */\nfunction checkDropdownScroll(): void {\n    const dropdown = unrefElement(contentRef.value);\n    if (dropdown.clientHeight !== dropdown.scrollHeight) {\n        if (\n            dropdown.scrollTop + dropdown.clientHeight >=\n            dropdown.scrollHeight\n        ) {\n            emits(\"scroll-end\");\n        } else if (dropdown.scrollTop <= 0) {\n            emits(\"scroll-start\");\n        }\n    }\n}\n\n// --- Dependency Injection Feature ---\n\n/**\n * Click listener from DropdownItem.\n *   1. Set new selected item.\n *   2. Emit input event to update the user v-model.\n *   3. Close the dropdown.\n */\nfunction selectItem(value: any): void {\n    if (props.multiple) {\n        if (vmodel.value && Array.isArray(vmodel.value)) {\n            if (vmodel.value.indexOf(value) === -1) {\n                // add a value\n                vmodel.value = [...vmodel.value, value];\n            } else {\n                // remove a value\n                vmodel.value = vmodel.value.filter((val) => val !== value);\n            }\n        } else {\n            // init new value array\n            vmodel.value = [value];\n        }\n        // emit change after vmodel has changed\n        nextTick(() => emits(\"change\", vmodel.value));\n    } else {\n        if (vmodel.value !== value) {\n            // update a single value\n            vmodel.value = value;\n            // emit change after vmodel has changed\n            nextTick(() => emits(\"change\", vmodel.value));\n        }\n    }\n    if (!props.multiple) {\n        if (cancelOptions.value.indexOf(\"content\") < 0) return;\n        emits(\"close\", \"content\");\n        isActive.value = false;\n        isHovered.value = false;\n    }\n}\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed<DropdownComponent>(() => ({\n    props,\n    selected: vmodel.value,\n    selectItem,\n}));\n\n/** Provide functionalities and data to child item components */\nuseProviderParent(contentRef, { data: provideData });\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-drop\"],\n    [\"disabledClass\", \"o-drop--disabled\", null, computed(() => props.disabled)],\n    [\"expandedClass\", \"o-drop--expanded\", null, computed(() => props.expanded)],\n    [\"inlineClass\", \"o-drop--inline\", null, computed(() => props.inline)],\n    [\n        \"mobileClass\",\n        \"o-drop--mobile\",\n        null,\n        computed(() => isMobileModal.value && !hoverable.value),\n    ],\n    [\n        \"positionClass\",\n        \"o-drop--position-\",\n        autoPosition,\n        computed(() => !!autoPosition.value),\n    ],\n    [\n        \"activeClass\",\n        \"o-drop--active\",\n        null,\n        computed(() => isActive.value || props.inline),\n    ],\n    [\"hoverableClass\", \"o-drop--hoverable\", null, hoverable],\n);\n\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-drop__trigger\"]);\n\nconst positionWrapperClasses = defineClasses([\n    \"teleportClass\",\n    \"o-drop--teleport\",\n    null,\n    computed(() => !!props.teleport),\n]);\n\nconst menuMobileOverlayClasses = defineClasses([\n    \"menuMobileOverlayClass\",\n    \"o-drop__overlay\",\n]);\n\nconst menuClasses = defineClasses(\n    [\"menuClass\", \"o-drop__menu\"],\n    [\n        \"menuPositionClass\",\n        \"o-drop__menu--\",\n        autoPosition,\n        computed(() => !!autoPosition.value),\n    ],\n    [\n        \"menuActiveClass\",\n        \"o-drop__menu--active\",\n        null,\n        computed(() => isActive.value || props.inline),\n    ],\n);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ $trigger: triggerRef, $content: contentRef });\n</script>\n\n<template>\n    <div\n        data-oruga=\"dropdown\"\n        :class=\"rootClasses\"\n        @mouseleave=\"onHoverLeave\"\n        @focusout=\"onHoverLeave\">\n        <component\n            :is=\"triggerTag\"\n            v-if=\"!inline\"\n            ref=\"triggerRef\"\n            :tabindex=\"disabled ? null : tabindex\"\n            :class=\"triggerClasses\"\n            :aria-haspopup=\"ariaRole === 'list' ? true : ariaRole\"\n            @click=\"onClick\"\n            @contextmenu=\"onContextMenu\"\n            @mouseenter=\"onHover\"\n            @focus.capture=\"onFocus\">\n            <!--\n                @slot Override the trigger element, default is label prop\n                @binding {boolean} active - dropdown active state\n            -->\n            <slot name=\"trigger\" :active=\"isActive\">\n                {{ label }}\n            </slot>\n        </component>\n\n        <PositionWrapper\n            v-model:position=\"autoPosition\"\n            :teleport=\"teleport\"\n            :class=\"[...rootClasses, ...positionWrapperClasses]\"\n            :trigger=\"triggerRef\"\n            :content=\"contentRef\"\n            :disabled=\"!isActive\"\n            default-position=\"bottom\"\n            :disable-positioning=\"!isMobileModal\">\n            <transition :name=\"animation\">\n                <div\n                    v-if=\"isMobileModal\"\n                    v-show=\"isActive\"\n                    :tabindex=\"-1\"\n                    :class=\"menuMobileOverlayClasses\"\n                    :aria-hidden=\"disabled || !isActive\" />\n            </transition>\n\n            <transition :name=\"animation\">\n                <component\n                    :is=\"menuTag\"\n                    v-show=\"(!disabled && (isActive || isHovered)) || inline\"\n                    :id=\"menuId\"\n                    ref=\"contentRef\"\n                    v-trap-focus=\"trapFocus\"\n                    :tabindex=\"menuTabindex\"\n                    :class=\"menuClasses\"\n                    :style=\"menuStyle\"\n                    :role=\"ariaRole\"\n                    :aria-hidden=\"disabled || !isActive\"\n                    :aria-modal=\"!inline && trapFocus\">\n                    <!--\n                        @slot Place dropdown items here\n                        @binding {boolean} active - dropdown active state\n                        @binding {boolean} toggle - toggle active state function\n                    -->\n                    <slot :active=\"isActive\" :toggle=\"toggle\" />\n                </component>\n            </transition>\n        </PositionWrapper>\n    </div>\n</template>\n","<script setup lang=\"ts\" generic=\"T\">\nimport { computed, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { uuid, isEqual } from \"@/utils/helpers\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { DropdownComponent } from \"./types\";\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * @displayName Dropdown Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ODropdownItem\",\n    configField: \"dropdown\",\n});\n\nconst props = defineProps({\n    /** The value that will be returned on events and v-model - default is a uuid */\n    value: {\n        type: [String, Number, Boolean, Object, Array] as PropType<T>,\n        default: undefined, // () => uuid(),\n    },\n    /** Item label, unnecessary when default slot is used */\n    label: { type: String, default: undefined },\n    /** Item is disabled */\n    disabled: { type: Boolean, default: false },\n    /** Item is clickable and emit an event */\n    clickable: { type: Boolean, default: true },\n    /** Dropdown item tag name */\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"dropdown.itemTag\", \"div\"),\n    },\n    /** Set the tabindex attribute on the dropdown item div (-1 to prevent selection via tab key) */\n    tabindex: { type: [Number, String], default: 0 },\n    /**\n     * Role attribute to be passed to the list item for better accessibility.\n     * Use menuitem only in situations where your dropdown is related to a navigation menu.\n     * @values listitem, menuitem, button\n     */\n    ariaRole: {\n        type: String,\n        default: getOption(\"dropdown.itemAriaRole\", \"listitem\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the dropdown item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the dropdown item when active  */\n    itemActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the dropdown item when clickable */\n    itemClickableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the dropdown item when disabled */\n    itemDisabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * onclick event\n     * @param value {[String, Number, Boolean, Object, Array]} value prop data\n     * @param event {event} Native Event\n     */\n    (e: \"click\", value: T, event: Event): void;\n}>();\n\nconst itemValue = computed(() => (props.value || uuid()) as T);\n\n// Inject functionalities and data from the parent component\nconst { parent } = useProviderChild<DropdownComponent<T>>();\n\nconst isClickable = computed(\n    () => !parent.value.props.disabled && !props.disabled && props.clickable,\n);\n\nconst isActive = computed(() => {\n    if (parent.value.selected === null) return false;\n    if (parent.value.props.multiple && Array.isArray(parent.value.selected))\n        return parent.value.selected.some((selected) =>\n            isEqual(itemValue.value, selected),\n        );\n    return isEqual(itemValue.value, parent.value.selected);\n});\n\n/** Click listener, select the item. */\nfunction selectItem(event: Event): void {\n    if (!isClickable.value) return;\n    parent.value.selectItem(itemValue.value);\n    emits(\"click\", itemValue.value, event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"itemClass\", \"o-drop__item\"],\n    [\n        \"itemDisabledClass\",\n        \"o-drop__item--disabled\",\n        null,\n        computed(() => parent.value.props.disabled || props.disabled),\n    ],\n    [\"itemActiveClass\", \"o-drop__item--active\", null, isActive],\n    [\"itemClickableClass\", \"o-drop__item--clickable\", null, isClickable],\n);\n</script>\n\n<template>\n    <component\n        :is=\"tag\"\n        :class=\"rootClasses\"\n        :role=\"ariaRole\"\n        :tabindex=\"tabindex\"\n        data-oruga=\"dropdown-item\"\n        @click=\"selectItem\">\n        <!--\n            @slot Override the label, default is label prop \n        -->\n        <slot>{{ label }}</slot>\n    </component>\n</template>\n","<script setup lang=\"ts\">\nimport {\n    computed,\n    nextTick,\n    ref,\n    watch,\n    useAttrs,\n    toRaw,\n    onMounted,\n    useSlots,\n    type PropType,\n    type Component,\n} from \"vue\";\n\nimport OInput from \"../input/Input.vue\";\nimport ODropdown from \"../dropdown/Dropdown.vue\";\nimport ODropdownItem from \"../dropdown/DropdownItem.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { getValueByPath, uuid } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    unrefElement,\n    defineClasses,\n    useVModelBinding,\n    useInputHandler,\n    useDebounce,\n    useEventListener,\n} from \"@/composables\";\n\nimport type { ComponentClass, DynamicComponent, ClassBind } from \"@/types\";\n\nenum SpecialOption {\n    Header,\n    Footer,\n}\n\n/** True if the specified option is a special option. */\nfunction isSpecialOption(option: any): option is SpecialOption {\n    return option in SpecialOption;\n}\n\n/**\n * Extended input that provide suggestions while the user types\n * @displayName Autocomplete\n * @style _autocomplete.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OAutocomplete\",\n    configField: \"autocomplete\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number], default: \"\" },\n    /** Input type */\n    type: { type: String, default: \"text\" },\n    /** Menu tag name */\n    menuTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () =>\n            getOption<DynamicComponent>(\"autocomplete.menuTag\", \"div\"),\n    },\n    /** Menu item tag name */\n    itemTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () =>\n            getOption<DynamicComponent>(\"autocomplete.itemTag\", \"div\"),\n    },\n    /** Options / suggestions */\n    data: { type: Array, default: () => [] },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"autocomplete.size\"),\n    },\n    /**\n     * Position of the dropdown\n     * @values auto, top, bottom\n     */\n    position: {\n        type: String,\n        default: () => getOption(\"autocomplete.position\", \"auto\"),\n        validator: (value: string) =>\n            [\"auto\", \"top\", \"bottom\"].indexOf(value) >= 0,\n    },\n    /** Property of the object (if data is array of objects) to use as display text, and to keep track of selected option */\n    field: { type: String, default: undefined },\n    /** Property of the object (if `data` is array of objects) to use as display text of group */\n    groupField: { type: String, default: undefined },\n    /** Property of the object (if `data` is array of objects) to use as key to get items array of each group */\n    groupOptions: { type: String, default: undefined },\n    /** Function to format an option to a string for display in the input (as alternative to field prop) */\n    formatter: {\n        type: Function as PropType<(value: string | number) => string | number>,\n        default: undefined,\n    },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Makes the element rounded */\n    rounded: { type: Boolean, default: false },\n    /** Same as native input disabled */\n    disabled: { type: Boolean, default: false },\n    /** Same as native maxlength, plus character counter */\n    maxlength: { type: Number, default: undefined },\n    /** Makes the component check if list reached scroll start or end and emit scroll events. */\n    checkScroll: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.checkScroll\", false),\n    },\n    /** Number of milliseconds to delay before to emit input event */\n    debounce: {\n        type: Number,\n        default: () => getOption(\"autocomplete.debounce\", 400),\n    },\n    /** The first option will always be pre-selected (easier to just hit enter or tab) */\n    keepFirst: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.keepFirst\", false),\n    },\n    /** Clear input text on select */\n    clearOnSelect: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.clearOnSelect\", false),\n    },\n    /** Open dropdown list on focus */\n    openOnFocus: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.openOnFocus\", false),\n    },\n    /** Keep open dropdown list after select */\n    keepOpen: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.keepOpen\", false),\n    },\n    /** Max height of dropdown content */\n    maxHeight: {\n        type: [String, Number],\n        default: () => getOption(\"autocomplete.maxHeight\"),\n    },\n    /** Array of keys (https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values) which will add a tag when typing (default tab and enter) */\n    confirmKeys: {\n        type: Array,\n        default: () => [\"Tab\", \"Enter\"],\n    },\n    /** Dropdown content (items) are shown into a modal on mobile */\n    mobileModal: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.mobileModal\", false),\n    },\n    /** Transition name to apply on dropdown list */\n    animation: {\n        type: String,\n        default: () => getOption(\"autocomplete.animation\", \"fade\"),\n    },\n    /** Trigger the select event for the first pre-selected option when clicking outside and `keep-first` is enabled */\n    selectOnClickOutside: { type: Boolean, default: false },\n    /** Allows the header in the autocomplete to be selectable */\n    selectableHeader: { type: Boolean, default: false },\n    /** Allows the footer in the autocomplete to be selectable */\n    selectableFooter: { type: Boolean, default: false },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"autocomplete.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"autocomplete.icon\", undefined),\n    },\n    /** Makes the icon clickable */\n    iconClickable: { type: Boolean, default: false },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"autocomplete.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /** Variant of right icon */\n    iconRightVariant: { type: String, default: undefined },\n    /** Add a button/icon to clear the inputed text */\n    clearable: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.clearable\", false),\n    },\n    /** Icon name to be added on the clear button */\n    clearIcon: {\n        type: String,\n        default: () => getOption(\"autocomplete.clearIcon\", \"close-circle\"),\n    },\n    /** Show status icon using field and variant prop */\n    statusIcon: {\n        type: Boolean,\n        default: () => getOption(\"statusIcon\", true),\n    },\n    /** Native options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"autocomplete.autocomplete\", \"off\"),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"autocomplete.teleport\", false),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu items */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu items on hover */\n    itemHoverClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu items group title */\n    itemGroupTitleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu empty placeholder item */\n    itemEmptyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu header item */\n    itemHeaderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu footer item */\n    itemFooterClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /**\n     * Classes to apply on internal input component\n     * @ignore\n     */\n    inputClasses: {\n        type: Object,\n        default: () => getOption(\"autocomplete.inputClasses\", {}),\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number): void;\n    /**\n     * on input change event\n     * @param value {string | number} input value\n     */\n    (e: \"input\", value: string | number): void;\n    /**\n     * selected element changed event\n     * @param value {string | number} selected value\n     */\n    (e: \"select\", value: string | number, evt: Event): void;\n    /**\n     * header is selected\n     * @param event {Event} native event\n     */\n    (e: \"select-header\", event: Event): void;\n    /**\n     * footer is selected\n     * @param event {Event} native event\n     */\n    (e: \"select-footer\", event: Event): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n    /** the list inside the dropdown reached the start */\n    (e: \"scroll-start\"): void;\n    /** the list inside the dropdown reached it's end */\n    (e: \"scroll-end\"): void;\n}>();\n\nconst slots = useSlots();\nconst inputRef = ref<InstanceType<typeof OInput>>();\nconst dropdownRef = ref<InstanceType<typeof ODropdown>>();\nconst footerRef = ref<HTMLElement>();\nconst headerRef = ref<HTMLElement>();\nconst itemRefs = ref([]);\n\nfunction setItemRef(\n    el: HTMLElement | Component,\n    groupIndex: number,\n    itemIndex: number,\n): void {\n    if (groupIndex === 0 && itemIndex === 0) itemRefs.value.splice(0);\n    if (el) itemRefs.value.push(el);\n}\n\n// use form input functionalities\nconst { checkHtml5Validity, onInvalid, onFocus, onBlur, isFocused, setFocus } =\n    useInputHandler(inputRef, emits, props);\n\nconst vmodel = useVModelBinding<string | number>(props, emits, {\n    passive: true,\n});\n\nconst isActive = ref(false);\n\nconst selectedOption = ref(null);\nconst hoveredOption = ref(null);\nconst headerHovered = ref(false);\nconst footerHovered = ref(false);\n\nconst hoveredId = ref(null);\nconst menuId = uuid();\n\n/**\n * When updating input's value\n *   1. If value isn't the same as selected, set null\n *   2. Close dropdown if value is clear or else open it\n */\nwatch(\n    () => vmodel.value,\n    (value) => {\n        // Check if selected is invalid\n        const currentValue = getValue(selectedOption.value);\n        if (currentValue && currentValue !== value) {\n            setSelected(null, false);\n\n            nextTick(() => {\n                // Close dropdown if data is empty\n                if (isEmpty.value && !slots.empty) isActive.value = false;\n                // Close dropdown if input is clear or else open it\n                else if (isFocused.value && (!props.openOnFocus || value))\n                    isActive.value = !!value;\n            });\n        }\n    },\n);\n\n/** Select first option if \"keep-first\" */\nwatch(\n    () => props.data,\n    () => {\n        // Keep first option always pre-selected\n        if (props.keepFirst) {\n            nextTick(() => {\n                if (isActive.value) selectFirstOption();\n                else setHovered(null);\n            });\n        } else if (hoveredOption.value) {\n            // reset hovered if list doesn't contain it\n            const hoveredValue = getValue(hoveredOption.value);\n            const data = computedData.value\n                .map((d) => d.items)\n                .reduce((a, b) => [...a, ...b], []);\n            const index = data.findIndex((d) => getValue(d) === hoveredValue);\n            if (index >= 0) nextTick(() => setHoveredIdToIndex(index));\n            else setHovered(null);\n        }\n    },\n);\n\nconst computedData = computed<{ items: any; group?: any }[]>(() => {\n    if (props.groupField) {\n        if (props.groupOptions)\n            return props.data.map((option) => {\n                const group = getValueByPath(option, props.groupField);\n                const items = getValueByPath(option, props.groupOptions);\n                return { group, items };\n            });\n        else\n            return Object.keys(props.data).map((group) => ({\n                group,\n                items: props.data[group],\n            }));\n    }\n    // Return no data to avoid the full list to be shown when clearing input\n    if (!props.openOnFocus && !props.keepOpen && vmodel.value === \"\") {\n        // ...already returned nothing and dropdown closed.\n        return [{ items: [] }];\n    }\n    return [{ items: props.data }];\n});\n\nconst isEmpty = computed(\n    () =>\n        !computedData.value?.some(\n            (element) => element.items && element.items.length,\n        ),\n);\n\nwatch(isEmpty, (empty) => {\n    if (isFocused.value) isActive.value = !empty || !!slots.empty;\n});\n\nconst closeableOptions = computed(() => {\n    const options = [\"escape\"];\n    if (!props.keepOpen) {\n        options.push(\"content\");\n        options.push(\"outside\");\n    }\n    return options;\n});\n\nfunction onDropdownClose(method: string): void {\n    if (method === \"outside\") {\n        if (\n            props.keepFirst &&\n            hoveredOption.value &&\n            props.selectOnClickOutside\n        )\n            setSelected(hoveredOption.value, true);\n    }\n}\n\n/**\n * Return display text for a input option.\n * If object, get value from path based on given field, or else just the value.\n * Apply a formatter function to the label if given.\n */\nfunction getValue(option: unknown): string {\n    if (!option) return \"\";\n\n    const property =\n        props.field && typeof option === \"object\"\n            ? getValueByPath(option, props.field)\n            : option;\n\n    const label =\n        typeof props.formatter === \"function\"\n            ? props.formatter(property)\n            : property;\n\n    return label || \"\";\n}\n\n/** Set which option is currently hovered. */\nfunction setHovered(option: unknown): void {\n    if (option === undefined) return;\n    hoveredOption.value = isSpecialOption(option) ? null : option;\n    headerHovered.value = option === SpecialOption.Header;\n    footerHovered.value = option === SpecialOption.Footer;\n    hoveredId.value = null;\n}\n\n/** Set which option is the aria-activedescendant by index. */\nfunction setHoveredIdToIndex(index: number): void {\n    const element = unrefElement(itemRefs.value[index]);\n    hoveredId.value = element ? element.id : null;\n}\n\n/**\n * Set which option is currently selected, update v-model,\n * update input value and close dropdown.\n */\nfunction setSelected(option, closeDropdown = true, event = undefined): void {\n    if (option === undefined) return;\n    selectedOption.value = option;\n    emits(\"select\", selectedOption.value, event);\n    if (selectedOption.value !== null) {\n        if (props.clearOnSelect) {\n            const input = inputRef.value.$el.querySelector(\"input\");\n            input.value = \"\";\n        } else {\n            vmodel.value = getValue(selectedOption.value);\n        }\n        setHovered(null);\n    }\n    if (closeDropdown) nextTick(() => (isActive.value = false));\n    checkHtml5Validity();\n}\n\n/** Select first option */\nfunction selectFirstOption(): void {\n    nextTick(() => {\n        const nonEmptyElements = computedData.value.filter(\n            (element) => element.items && element.items.length,\n        );\n        if (nonEmptyElements.length) {\n            const option = nonEmptyElements[0].items[0];\n            setHovered(option);\n            setHoveredIdToIndex(0);\n        } else {\n            setHovered(null);\n        }\n    });\n}\n\n/** Check if header or footer was selected. */\nfunction selectHeaderOrFooterByClick(\n    event: Event,\n    origin?: SpecialOption,\n    closeDropdown = true,\n): void {\n    if (\n        props.selectableHeader &&\n        (headerHovered.value || origin === SpecialOption.Header)\n    ) {\n        emits(\"select-header\", event);\n        if (origin) setHovered(null);\n        if (closeDropdown) isActive.value = false;\n    }\n    if (\n        props.selectableFooter &&\n        (footerHovered.value || origin === SpecialOption.Footer)\n    ) {\n        emits(\"select-footer\", event);\n        if (origin) setHovered(null);\n        if (closeDropdown) isActive.value = false;\n    }\n}\n\n// --- Event Handler ---\n\n/**\n * Arrows keys listener.\n * If dropdown is active, set hovered option, or else just open.\n */\nfunction navigateItem(direction: 1 | -1): void {\n    if (!isActive.value) {\n        isActive.value = true;\n        return;\n    }\n\n    const data = computedData.value\n        .map((d) => d.items)\n        .reduce((a, b) => [...a, ...b], []);\n\n    // add header / footer if selectable\n    if (headerRef.value && props.selectableHeader) data.unshift(undefined);\n    if (footerRef.value && props.selectableFooter) data.push(undefined);\n\n    // define current index\n    let index = data.map(toRaw).indexOf(toRaw(hoveredOption.value));\n    if (headerHovered.value) index = 0 + direction;\n    else if (footerHovered.value) index = data.length - 1 + direction;\n    else index = index + direction;\n\n    // check if index overflow\n    index = index > data.length - 1 ? data.length - 1 : index;\n    // check if index underflow\n    index = index < 0 ? 0 : index;\n\n    // set hover state\n    if (footerRef.value && props.selectableFooter && index === data.length - 1)\n        setHovered(SpecialOption.Footer);\n    else if (headerRef.value && props.selectableHeader && index === 0)\n        setHovered(SpecialOption.Header);\n    else setHovered(data[index] !== undefined ? data[index] : null);\n\n    // get items from input\n    let items = itemRefs.value || [];\n    if (headerRef.value && props.selectableHeader)\n        items = [headerRef.value, ...items];\n    if (footerRef.value && props.selectableFooter)\n        items = [...items, footerRef.value];\n\n    const element = unrefElement(items[index]);\n    if (!element) return;\n\n    // set aria-activedescendant\n    hoveredId.value = element.id;\n\n    // define scroll position\n    const dropdownMenu = unrefElement(dropdownRef.value.$content);\n    const visMin = dropdownMenu.scrollTop;\n    const visMax =\n        dropdownMenu.scrollTop +\n        dropdownMenu.clientHeight -\n        element.clientHeight;\n\n    if (element.offsetTop < visMin) {\n        // is scolled top\n        dropdownMenu.scrollTop = element.offsetTop;\n    } else if (element.offsetTop >= visMax) {\n        // is scolled bottom\n        dropdownMenu.scrollTop =\n            element.offsetTop -\n            dropdownMenu.clientHeight +\n            element.clientHeight;\n    }\n    // trigger scroll\n    if (props.checkScroll) checkDropdownScroll();\n}\n\n/**\n * Key listener.\n * Select the hovered option.\n */\nfunction onKeydown(event: KeyboardEvent): void {\n    // prevent emit submit event\n    if (event.key === \"Enter\") event.preventDefault();\n    if (props.confirmKeys.indexOf(event.key) >= 0) {\n        // If adding by comma, don't add the comma to the input\n        if (event.key === \",\") event.preventDefault();\n        // Close dropdown on select by Tab\n        const closeDropdown = !props.keepOpen || event.key === \"Tab\";\n        if (hoveredOption.value === null) {\n            // header and footer uses headerHovered && footerHovered. If header or footer\n            // was selected then fire event otherwise just return so a value isn't selected\n            selectHeaderOrFooterByClick(event, null, closeDropdown);\n            return;\n        }\n        setSelected(hoveredOption.value, closeDropdown, event);\n    }\n}\n\n/**\n * Focus listener.\n * If value is the same as selected, select all text.\n */\nfunction handleFocus(event: Event): void {\n    if (getValue(selectedOption.value) === vmodel.value) {\n        inputRef.value.$el.querySelector(\"input\").select();\n    }\n    if (props.openOnFocus) {\n        if (!isEmpty.value) isActive.value = true;\n        if (props.keepFirst)\n            // If open on focus, update the hovered\n            selectFirstOption();\n    }\n    onFocus(event);\n}\n\n/**\n * Blur listener.\n * Close on blur.\n */\nfunction handleBlur(event: Event): void {\n    onBlur(event);\n}\n\n/** emit input change event */\nfunction onInput(value: string | number): void {\n    const currentValue = getValue(selectedOption.value);\n    if (currentValue && currentValue === vmodel.value) return;\n    debouncedInput(value);\n}\n\nlet debouncedInput = useDebounce(emitInput, props.debounce || 0);\n\nwatch(\n    () => props.debounce,\n    (value) => {\n        debouncedInput = useDebounce(emitInput, value);\n    },\n);\n\nfunction emitInput(value: string | number): void {\n    emits(\"input\", value);\n    checkHtml5Validity();\n}\n\n// --- Icon Feature ---\n\nconst computedIconRight = computed(() =>\n    props.clearable && vmodel.value && props.clearIcon\n        ? props.clearIcon\n        : props.iconRight,\n);\n\nconst computedIconRightClickable = computed(() =>\n    props.clearable ? true : props.iconRightClickable,\n);\n\nfunction rightIconClick(event: Event): void {\n    if (props.clearable) {\n        vmodel.value = \"\";\n        setSelected(null, false);\n        if (props.openOnFocus) setFocus();\n    } else emits(\"icon-right-click\", event);\n}\n\n// --- InfitiveScroll Feature ---\n\nonMounted(() => {\n    if (isClient && props.checkScroll)\n        useEventListener(\n            \"scroll\",\n            checkDropdownScroll,\n            dropdownRef.value.$content,\n            { immediate: true },\n        );\n});\n\n/** Check if the scroll list inside the dropdown reached the top or it's end. */\nfunction checkDropdownScroll(): void {\n    const dropdown = dropdownRef.value.$content;\n    if (!dropdown) return;\n    const trashhold = dropdown.offsetTop;\n    const headerHeight = headerRef.value?.clientHeight || 0;\n    const footerHeight = (footerRef.value?.clientHeight || 0) + trashhold;\n    if (dropdown.clientHeight !== dropdown.scrollHeight) {\n        if (\n            dropdown.scrollTop + dropdown.clientHeight + footerHeight >=\n            dropdown.scrollHeight\n        ) {\n            emits(\"scroll-end\");\n        } else if (dropdown.scrollTop <= headerHeight) {\n            emits(\"scroll-start\");\n        }\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst attrs = useAttrs();\nconst inputBind = computed(() => ({\n    ...attrs,\n    ...props.inputClasses,\n}));\n\nconst rootClasses = defineClasses([\"rootClass\", \"o-acp\"]);\n\nconst itemClasses = defineClasses([\"itemClass\", \"o-acp__item\"]);\n\nconst itemEmptyClasses = defineClasses([\n    \"itemEmptyClass\",\n    \"o-acp__item--empty\",\n]);\n\nconst itemGroupClasses = defineClasses([\n    \"itemGroupTitleClass\",\n    \"o-acp__item-group-title\",\n]);\n\nconst itemHeaderClasses = defineClasses(\n    [\"itemHeaderClass\", \"o-acp__item-header\"],\n    [\"itemHoverClass\", \"o-acp__item--hover\", null, headerHovered],\n);\n\nconst itemFooterClasses = defineClasses(\n    [\"itemFooterClass\", \"o-acp__item-footer\"],\n    [\"itemHoverClass\", \"o-acp__item--hover\", null, footerHovered],\n);\n\nfunction itemOptionClasses(option): ClassBind[] {\n    const optionClasses = defineClasses([\n        \"itemHoverClass\",\n        \"o-acp__item--hover\",\n        null,\n        toRaw(option) === toRaw(hoveredOption.value),\n    ]);\n\n    return [...itemClasses.value, ...optionClasses.value];\n}\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <o-dropdown\n        ref=\"dropdownRef\"\n        v-model=\"selectedOption\"\n        v-model:active=\"isActive\"\n        data-oruga=\"autocomplete\"\n        :class=\"rootClasses\"\n        :menu-id=\"menuId\"\n        :menu-tabindex=\"-1\"\n        :menu-tag=\"menuTag\"\n        scrollable\n        aria-role=\"listbox\"\n        :tabindex=\"-1\"\n        :trap-focus=\"false\"\n        :triggers=\"[]\"\n        :disabled=\"disabled\"\n        :closeable=\"closeableOptions\"\n        :mobile-modal=\"mobileModal\"\n        :max-height=\"maxHeight\"\n        :animation=\"animation\"\n        :position=\"position\"\n        :teleport=\"teleport\"\n        :expanded=\"expanded\"\n        @close=\"onDropdownClose\">\n        <template #trigger>\n            <o-input\n                ref=\"inputRef\"\n                v-bind=\"inputBind\"\n                v-model=\"vmodel\"\n                :type=\"type\"\n                :size=\"size\"\n                :rounded=\"rounded\"\n                :icon=\"icon\"\n                :icon-right=\"computedIconRight\"\n                :icon-right-clickable=\"computedIconRightClickable\"\n                :icon-pack=\"iconPack\"\n                :placeholder=\"placeholder\"\n                :maxlength=\"maxlength\"\n                :autocomplete=\"autocomplete\"\n                :use-html5-validation=\"false\"\n                role=\"combobox\"\n                :aria-activedescendant=\"hoveredId\"\n                :aria-autocomplete=\"keepFirst ? 'both' : 'list'\"\n                :aria-controls=\"menuId\"\n                :aria-expanded=\"isActive\"\n                :expanded=\"expanded\"\n                :disabled=\"disabled\"\n                :status-icon=\"statusIcon\"\n                @update:model-value=\"onInput\"\n                @focus=\"handleFocus\"\n                @blur=\"handleBlur\"\n                @invalid=\"onInvalid\"\n                @keydown=\"onKeydown\"\n                @keydown.up.prevent=\"navigateItem(-1)\"\n                @keydown.down.prevent=\"navigateItem(1)\"\n                @icon-click=\"(event) => $emit('icon-click', event)\"\n                @icon-right-click=\"rightIconClick\" />\n        </template>\n\n        <o-dropdown-item\n            v-if=\"$slots.header\"\n            :id=\"`${menuId}-header`\"\n            ref=\"headerRef\"\n            :tag=\"itemTag\"\n            aria-role=\"option\"\n            :aria-selected=\"headerHovered\"\n            :tabindex=\"-1\"\n            :class=\"[...itemClasses, ...itemHeaderClasses]\"\n            @click=\"\n                (v, e) => selectHeaderOrFooterByClick(e, SpecialOption.Header)\n            \">\n            <!--\n                @slot Define an additional header\n            -->\n            <slot name=\"header\" />\n        </o-dropdown-item>\n\n        <template v-for=\"(element, groupindex) in computedData\">\n            <o-dropdown-item\n                v-if=\"element.group\"\n                :key=\"groupindex + 'group'\"\n                :tag=\"itemTag\"\n                :tabindex=\"-1\"\n                :class=\"[...itemClasses, ...itemGroupClasses]\">\n                <!--\n                    @slot Override the option grpup\n                    @binding {object} group - options group\n                    @binding {number} index - option index\n                -->\n                <slot\n                    v-if=\"$slots.group\"\n                    name=\"group\"\n                    :group=\"element.group\"\n                    :index=\"groupindex\" />\n                <span v-else>\n                    {{ element.group }}\n                </span>\n            </o-dropdown-item>\n\n            <o-dropdown-item\n                v-for=\"(option, index) in element.items\"\n                :id=\"`${menuId}-${groupindex}-${index}`\"\n                :key=\"groupindex + ':' + index\"\n                :ref=\"(el) => setItemRef(el, groupindex, index)\"\n                :value=\"option\"\n                :tag=\"itemTag\"\n                :class=\"itemOptionClasses(option)\"\n                aria-role=\"option\"\n                :aria-selected=\"toRaw(option) === toRaw(hoveredOption)\"\n                :tabindex=\"-1\"\n                @click=\"(value, event) => setSelected(value, !keepOpen, event)\">\n                <!--\n                    @slot Override the select option\n                    @binding {object} option - option object\n                    @binding {number} index - option index\n                    @binding {unknown} value - option value\n                -->\n                <slot\n                    v-if=\"$slots.default\"\n                    :option=\"option\"\n                    :value=\"getValue(option)\"\n                    :index=\"index\" />\n                <span v-else>\n                    {{ getValue(option) }}\n                </span>\n            </o-dropdown-item>\n        </template>\n\n        <o-dropdown-item\n            v-if=\"isEmpty && $slots.empty\"\n            :tag=\"itemTag\"\n            :class=\"[...itemClasses, ...itemEmptyClasses]\">\n            <!--\n                @slot Define content for empty state\n            -->\n            <slot name=\"empty\" />\n        </o-dropdown-item>\n\n        <o-dropdown-item\n            v-if=\"$slots.footer\"\n            :id=\"`${menuId}-footer`\"\n            ref=\"footerRef\"\n            :tag=\"itemTag\"\n            aria-role=\"option\"\n            :aria-selected=\"footerHovered\"\n            :tabindex=\"-1\"\n            :class=\"[...itemClasses, ...itemFooterClasses]\"\n            @click=\"\n                (v, e) => selectHeaderOrFooterByClick(e, SpecialOption.Footer)\n            \">\n            <!--\n                @slot Define an additional footer\n            -->\n            <slot name=\"footer\" />\n        </o-dropdown-item>\n    </o-dropdown>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Autocomplete from \"./Autocomplete.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export autocomplete plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Autocomplete);\n    },\n} as Plugin;\n\n/** export autocomplete components */\nexport { Autocomplete as OAutocomplete };\n","<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses } from \"@/composables\";\n\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * The classic button, in different colors, sizes, and states\n * @displayName Button\n * @style _button.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OButton\",\n    configField: \"button\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /**\n     * Button tag name\n     * @values button, a, input, router-link, nuxt-link (or other nuxt alias)\n     */\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"button.tag\", \"button\"),\n    },\n    /**\n     * Color variant of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"button.variant\"),\n    },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"button.size\"),\n    },\n    /** Button label, unnecessary when default slot is used */\n    label: { type: String, default: undefined },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n\n    iconPack: {\n        type: String,\n        default: () => getOption(\"button.iconPack\", undefined),\n    },\n    /** Icon name to show on the left */\n    iconLeft: { type: String, default: undefined },\n    /** Icon name to show on the right */\n    iconRight: { type: String, default: undefined },\n    /** Enable rounded style */\n    rounded: {\n        type: Boolean,\n        default: () => getOption(\"button.rounded\", false),\n    },\n    /** Button will be expanded (full-width) */\n    expanded: { type: Boolean, default: false },\n    /** Button will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Enable outlined style */\n    outlined: { type: Boolean, default: false },\n    /** Enable loading style */\n    loading: { type: Boolean, default: false },\n    /** Enable inverted style */\n    inverted: { type: Boolean, default: false },\n    /** Button type, like native */\n    nativeType: {\n        type: String,\n        default: \"button\",\n        validator: (value: string) =>\n            [\"button\", \"submit\", \"reset\"].indexOf(value) >= 0,\n    },\n    /** Accessibility Role attribute to be passed to the button. */\n    role: {\n        type: String,\n        default: () => getOption(\"button.role\", \"button\"),\n    },\n    /**\n     * This is used internally\n     * @ignore\n     */\n    iconBoth: { type: Boolean, default: false },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button elements wrapper */\n    wrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when outlined */\n    outlinedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button with loading */\n    loadingClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when inverted */\n    invertedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when rounded */\n    roundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button when disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button icon */\n    iconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button icon on the left */\n    iconLeftClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button icon on the right */\n    iconRightClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button label */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the button variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst computedTag = computed(() =>\n    typeof props.disabled !== \"undefined\" && props.disabled !== false\n        ? \"button\"\n        : props.tag,\n);\n\nconst computedNativeType = computed(() =>\n    props.tag === \"button\" || props.tag === \"input\" ? props.nativeType : null,\n);\n\nconst computedDisabled = computed(() => (props.disabled ? true : null));\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-btn\"],\n    [\n        \"sizeClass\",\n        \"o-btn--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-btn--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"outlinedClass\",\n        \"o-btn--outlined\",\n        null,\n        computed(() => props.outlined && !props.variant),\n    ],\n    [\n        \"invertedClass\",\n        \"o-btn--inverted\",\n        null,\n        computed(() => props.inverted && !props.variant),\n    ],\n    [\n        \"outlinedClass\",\n        \"o-btn--outlined-\",\n        computed(() => props.variant),\n        computed(() => props.outlined && !!props.variant),\n    ],\n    [\n        \"invertedClass\",\n        \"o-btn--inverted-\",\n        computed(() => props.variant),\n        computed(() => props.inverted && !!props.variant),\n    ],\n    [\"expandedClass\", \"o-btn--expanded\", null, computed(() => props.expanded)],\n    [\"loadingClass\", \"o-btn--loading\", null, computed(() => props.loading)],\n    [\"roundedClass\", \"o-btn--rounded\", null, computed(() => props.rounded)],\n    [\"disabledClass\", \"o-btn--disabled\", null, computed(() => props.disabled)],\n);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-btn__label\"]);\n\nconst iconClasses = defineClasses([\"iconClass\", \"o-btn__icon\"]);\n\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-btn__icon-left\"]);\n\nconst iconRightClasses = defineClasses([\"iconRightClass\", \"o-btn__icon-right\"]);\n\nconst wrapperClasses = defineClasses([\"wrapperClass\", \"o-btn__wrapper\"]);\n</script>\n\n<template>\n    <component\n        :is=\"computedTag\"\n        :disabled=\"computedDisabled\"\n        :type=\"computedNativeType\"\n        :class=\"rootClasses\"\n        :role=\"role\"\n        data-oruga=\"button\">\n        <span :class=\"wrapperClasses\">\n            <o-icon\n                v-if=\"iconLeft\"\n                :pack=\"iconPack\"\n                :icon=\"iconLeft\"\n                :size=\"size\"\n                :both=\"iconBoth\"\n                :class=\"[...iconClasses, ...iconLeftClasses]\" />\n            <span v-if=\"label || $slots.default\" :class=\"labelClasses\">\n                <!--\n                    @slot Override the label, default is label prop \n                -->\n                <slot>{{ label }}</slot>\n            </span>\n            <o-icon\n                v-if=\"iconRight\"\n                :pack=\"iconPack\"\n                :icon=\"iconRight\"\n                :size=\"size\"\n                :both=\"iconBoth\"\n                :class=\"[...iconClasses, ...iconRightClasses]\" />\n        </span>\n    </component>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Button from \"./Button.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export button plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Button);\n    },\n} as Plugin;\n\n/** export button components */\nexport { Button as OButton };\n","<script setup lang=\"ts\">\nimport {\n    computed,\n    watch,\n    onBeforeUnmount,\n    onMounted,\n    ref,\n    nextTick,\n    readonly,\n    toRaw,\n    type PropType,\n} from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { sign, mod, bound, isDefined } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    defineClasses,\n    useVModelBinding,\n    useEventListener,\n    useProviderParent,\n} from \"@/composables\";\n\nimport type { CarouselComponent } from \"./types\";\nimport type { ComponentClass, ClassBind } from \"@/types\";\n\n/**\n * A Slideshow for cycling images in confined spaces\n * @displayName Carousel\n * @requires ./CarouselItem.vue\n * @style _carousel.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCarousel\",\n    configField: \"carousel\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: Number, default: 0 },\n    /** Enable drag mode */\n    dragable: { type: Boolean, default: true },\n    /** Timer interval for `autoplay` */\n    interval: {\n        type: Number,\n        default: () => getOption(\"carousel.interval\", 3500),\n    },\n    /** Move item automaticalls after `interval` */\n    autoplay: { type: Boolean, default: false },\n    /** Pause autoplay on hover */\n    pauseHover: { type: Boolean, default: false },\n    /** Repeat from the beginning after reaching the end */\n    repeat: { type: Boolean, default: false },\n    /** Show an overlay */\n    overlay: { type: Boolean, default: false },\n    /** Enable indicators */\n    indicators: { type: Boolean, default: true },\n    /** Place indicators inside the carousel */\n    indicatorInside: { type: Boolean, default: false },\n    /**\n     * Indicator interaction mode\n     * @values click, hover\n     */\n    indicatorMode: {\n        type: String,\n        default: \"click\",\n        validator: (value: string) => [\"click\", \"hover\"].indexOf(value) >= 0,\n    },\n    /** Position of the indicator - depends on used theme */\n    indicatorPosition: {\n        type: String,\n        default: () => getOption(\"carousel.indicatorPosition\", \"bottom\"),\n    },\n    /** Style of the indicator - depends on used theme */\n    indicatorStyle: {\n        type: String,\n        default: () => getOption(\"carousel.indicatorStyle\", \"dots\"),\n    },\n    /** Number of items to show at once*/\n    itemsToShow: {\n        type: Number,\n        default: () => getOption(\"carousel.itemsToShow\", 1),\n    },\n    /** Number of items to switch at once */\n    itemsToList: {\n        type: Number,\n        default: () => getOption(\"carousel.itemsToList\", 1),\n    },\n    /** Show next / prev arrows */\n    arrows: {\n        type: Boolean,\n        default: () => getOption(\"carousel.arrows\", true),\n    },\n    /** Show next / prev arrows only on hover */\n    arrowsHover: {\n        type: Boolean,\n        default: () => getOption(\"carousel.arrowsHover\", true),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"carousel.iconPack\"),\n    },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    iconSize: {\n        type: String,\n        default: () => getOption(\"carousel.iconSize\"),\n    },\n    /** Icon name for previous icon */\n    iconPrev: {\n        type: String,\n        default: () => getOption(\"carousel.iconPrev\", \"chevron-left\"),\n    },\n    /** Icon name for next icon */\n    iconNext: {\n        type: String,\n        default: () => getOption(\"carousel.iconNext\", \"chevron-right\"),\n    },\n    /** Define these props for different screen sizes */\n    breakpoints: {\n        type: Object as PropType<Record<number, any>>,\n        default: () => ({}),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the root element in overlay */\n    overlayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the wrapper element of carousel items */\n    wrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of slider items */\n    itemsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of slider items on drag */\n    itemsDraggingClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of arrow elements */\n    arrowIconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of prev arrow element */\n    arrowIconPrevClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of next arrow element */\n    arrowIconNextClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicator link element */\n    indicatorClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicators wrapper element */\n    indicatorsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicators wrapper element when inside */\n    indicatorsInsideClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicators wrapper element when inside and position */\n    indicatorsInsidePositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicator item element */\n    indicatorItemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicator element when is active */\n    indicatorItemActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of indicator element to separate different styles */\n    indicatorItemStyleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {number} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: number): void;\n    /**\n     * on carousel scroll event\n     * @param value {number} scroll index\n     */\n    (e: \"scroll\", value: number): void;\n    /**\n     * on item click event\n     * @param event {event} native event\n     */\n    (e: \"click\", event: Event): void;\n}>();\n\nconst rootRef = ref();\n\nfunction restartTimer(): void {\n    pauseTimer();\n    startTimer();\n}\n\nconst provideData = computed<CarouselComponent>(() => ({\n    restartTimer,\n    itemWidth: itemWidth.value,\n    activeIndex: scrollIndex.value,\n    onClick: (event: Event): void => emits(\"click\", event),\n    setActive: (index: number): void => switchTo(index),\n}));\n\n/** Provide functionalities and data to child item components */\nconst { childItems } = useProviderParent(rootRef, { data: provideData });\n\nconst activeIndex = useVModelBinding<number>(props, emits);\nconst scrollIndex = ref(props.modelValue);\n\nconst resizeObserver = ref(null);\nconst windowWidth = ref(0);\n\nconst refresh_ = ref(0);\n\n/** When v-model is changed switch to the new active item. */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        if (value <= childItems.value.length - 1)\n            switchTo(value * settings.value.itemsToList, true);\n    },\n);\n\nwatch([() => props.itemsToList, () => props.itemsToShow], () => onRefresh());\n\nonMounted(() => {\n    if (isClient) {\n        if (window.ResizeObserver) {\n            resizeObserver.value = new window.ResizeObserver(onRefresh);\n            resizeObserver.value.observe(rootRef.value);\n        }\n        onResized();\n        startTimer();\n    }\n});\n\nonBeforeUnmount(() => {\n    if (isClient) {\n        if (window.ResizeObserver) resizeObserver.value.disconnect();\n        dragEnd();\n        pauseTimer();\n    }\n});\n\n// add dom event handler\nif (isClient) {\n    useEventListener(\"resize\", onResized, window);\n    useEventListener(\"animationend\", onRefresh);\n    useEventListener(\"transitionend\", onRefresh);\n    useEventListener(\"transitionstart\", onRefresh);\n}\n\nfunction onResized(): void {\n    windowWidth.value = window.innerWidth;\n}\n\nfunction onRefresh(): void {\n    nextTick(() => refresh_.value++);\n}\n\nconst settings = computed<typeof props>(() => {\n    const breakpoints = Object.keys(props.breakpoints)\n        .map(Number)\n        .sort((a, b) => b - a);\n\n    const breakpoint = breakpoints.filter(\n        (breakpoint) => windowWidth.value >= breakpoint,\n    )[0];\n\n    const settings = toRaw(\n        breakpoint ? { ...props, ...props.breakpoints[breakpoint] } : props,\n    );\n\n    // prevent empty values\n    if (!settings.itemsToList) settings.itemsToList = 1;\n    if (!settings.itemsToShow) settings.itemsToShow = 1;\n    return readonly(settings);\n});\n\nconst itemWidth = computed(() => {\n    // Ensure component is mounted\n    if (!windowWidth.value) return 0;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const r = refresh_.value; // We force the computed property to refresh if this ref is changed\n\n    const rect = rootRef.value.getBoundingClientRect();\n    return rect.width / settings.value.itemsToShow;\n});\n\nconst translation = computed(\n    () =>\n        -bound(\n            delta.value + scrollIndex.value * itemWidth.value,\n            0,\n            (childItems.value.length - settings.value.itemsToShow) *\n                itemWidth.value,\n        ),\n);\n\nconst total = computed(() => childItems.value.length);\n\nconst indicatorCount = computed(() =>\n    Math.ceil(total.value / settings.value.itemsToList),\n);\n\nconst indicatorIndex = computed(() =>\n    Math.ceil(scrollIndex.value / settings.value.itemsToList),\n);\n\nconst hasArrows = computed(\n    () =>\n        (settings.value.arrowsHover && isHovered.value) ||\n        !settings.value.arrowsHover,\n);\n\nconst hasPrev = computed(\n    () => (settings.value.repeat || scrollIndex.value > 0) && hasArrows.value,\n);\n\nfunction onPrev(): void {\n    switchTo(scrollIndex.value - settings.value.itemsToList);\n}\n\nconst hasNext = computed(\n    () =>\n        (settings.value.repeat || scrollIndex.value < total.value - 1) &&\n        hasArrows.value,\n);\n\nfunction onNext(): void {\n    switchTo(scrollIndex.value + settings.value.itemsToList);\n}\n\nfunction switchTo(index: number, onlyMove?: boolean): void {\n    if (settings.value.repeat) index = mod(index, total.value);\n\n    index = bound(index, 0, total.value);\n    scrollIndex.value = index;\n    emits(\"scroll\", indicatorIndex.value);\n\n    if (!onlyMove)\n        activeIndex.value = Math.ceil(index / settings.value.itemsToList);\n}\n\nfunction onModeChange(trigger: string, index: number): void {\n    if (props.indicatorMode === trigger)\n        switchTo(index * settings.value.itemsToList);\n}\n\n// --- Autoplay Feature ---\n\nconst isHovered = ref(false);\nconst isPaused = ref(false);\nconst timer = ref(null);\n\nfunction onMouseEnter(): void {\n    isHovered.value = true;\n    checkPause();\n}\n\nfunction onMouseLeave(): void {\n    isHovered.value = false;\n    startTimer();\n}\n\n/** When autoplay is changed, start or pause timer accordingly */\nwatch(\n    () => props.autoplay,\n    (status) => {\n        if (status) startTimer();\n        else pauseTimer();\n    },\n);\n\n/** Since the timer can get paused at the end, if repeat is changed we need to restart it */\nwatch(\n    () => props.repeat,\n    (status) => {\n        if (status) startTimer();\n    },\n);\n\nfunction startTimer(): void {\n    if (!props.autoplay || timer.value) return;\n    isPaused.value = false;\n    timer.value = setInterval(() => {\n        if (!props.repeat && !hasNext.value) pauseTimer();\n        else onNext();\n    }, props.interval);\n}\n\nfunction pauseTimer(): void {\n    isPaused.value = true;\n    if (timer.value) {\n        clearInterval(timer.value);\n        timer.value = null;\n    }\n}\n\nfunction checkPause(): void {\n    if (props.pauseHover && props.autoplay) pauseTimer();\n}\n\n// --- Drag & Drop Feature ---\n\nconst isTouch = ref(false);\nconst dragX = ref();\nconst hold = ref(0);\nconst delta = ref(0);\n\nconst isDragging = computed(() => isDefined(dragX.value));\n\n/** handle drag event */\nfunction onDragStart(event: TouchEvent | MouseEvent): void {\n    if (\n        isDragging.value ||\n        !settings.value.dragable ||\n        ((event as MouseEvent).button !== 0 && event.type !== \"touchstart\")\n    )\n        return;\n    hold.value = Date.now();\n    isTouch.value = !!(event as TouchEvent).touches;\n    dragX.value = isTouch.value\n        ? (event as TouchEvent).touches[0].clientX\n        : (event as MouseEvent).clientX;\n    if (isTouch.value) {\n        pauseTimer();\n    }\n    if (isClient) {\n        window.addEventListener(\n            isTouch.value ? \"touchmove\" : \"mousemove\",\n            dragMove,\n        );\n        window.addEventListener(\n            isTouch.value ? \"touchend\" : \"mouseup\",\n            dragEnd,\n        );\n    }\n}\n\nfunction dragMove(event: TouchEvent | MouseEvent): void {\n    if (!isDragging.value) return;\n    const dragEndX = (event as TouchEvent).touches\n        ? (\n              (event as TouchEvent).changedTouches[0] ||\n              (event as TouchEvent).touches[0]\n          ).clientX\n        : (event as MouseEvent).clientX;\n    delta.value = dragX.value - dragEndX;\n    // prevent event if not touch event\n    if (!(event as TouchEvent).touches) event.preventDefault();\n}\n\nfunction dragEnd(event?: TouchEvent | MouseEvent): void {\n    if (!isDragging.value && !hold.value) return;\n    if (hold.value) {\n        const signCheck = sign(delta.value);\n        const results = Math.round(\n            Math.abs(delta.value / itemWidth.value) + 0.15,\n        ); // Hack\n        switchTo(scrollIndex.value + signCheck * results);\n    }\n    delta.value = 0;\n    dragX.value = undefined;\n    if ((event as TouchEvent)?.touches) startTimer();\n\n    if (isClient) {\n        window.removeEventListener(\n            isTouch.value ? \"touchmove\" : \"mousemove\",\n            dragMove,\n        );\n        window.removeEventListener(\n            isTouch.value ? \"touchend\" : \"mouseup\",\n            dragEnd,\n        );\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-car\"],\n    [\"overlayClass\", \"o-car__overlay\", null, computed(() => props.overlay)],\n);\n\nconst wrapperClasses = defineClasses([\"wrapperClass\", \"o-car__wrapper\"]);\n\nconst itemsClasses = defineClasses(\n    [\"itemsClass\", \"o-car__items\"],\n    [\"itemsDraggingClass\", \"o-car__items--dragging\", null, isDragging],\n);\n\nconst arrowIconClasses = defineClasses([\n    \"arrowIconClass\",\n    \"o-car__arrow__icon\",\n]);\n\nconst arrowIconPrevClasses = defineClasses([\n    \"arrowIconPrevClass\",\n    \"o-car__arrow__icon-prev\",\n]);\n\nconst arrowIconNextClasses = defineClasses([\n    \"arrowIconNextClass\",\n    \"o-car__arrow__icon-next\",\n]);\n\nfunction indicatorItemClasses(index): ClassBind[] {\n    return defineClasses(\n        [\"indicatorItemClass\", \"o-car__indicator__item\"],\n        [\n            \"indicatorItemActiveClass\",\n            \"o-car__indicator__item--active\",\n            null,\n            indicatorIndex.value === index,\n        ],\n        [\n            \"indicatorItemStyleClass\",\n            \"o-car__indicator__item--\",\n            props.indicatorStyle,\n            !!props.indicatorStyle,\n        ],\n    ).value;\n}\n\nconst indicatorsClasses = defineClasses(\n    [\"indicatorsClass\", \"o-car__indicators\"],\n    [\n        \"indicatorsInsideClass\",\n        \"o-car__indicators--inside\",\n        null,\n        computed(() => !!props.indicatorInside),\n    ],\n    [\n        \"indicatorsInsidePositionClass\",\n        \"o-car__indicators--inside--\",\n        computed(() => props.indicatorPosition),\n        computed(() => props.indicatorInside && !!props.indicatorPosition),\n    ],\n);\n\nconst indicatorClasses = defineClasses([\"indicatorClass\", \"o-car__indicator\"]);\n</script>\n\n<template>\n    <div\n        ref=\"rootRef\"\n        :class=\"rootClasses\"\n        data-oruga=\"carousel\"\n        role=\"region\"\n        @mouseover=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @focus=\"onMouseEnter\"\n        @blur=\"onMouseLeave\"\n        @keydown.left=\"onPrev\"\n        @keydown.right=\"onNext\">\n        <div :class=\"wrapperClasses\">\n            <div\n                :class=\"itemsClasses\"\n                :style=\"'transform:translateX(' + translation + 'px)'\"\n                tabindex=\"0\"\n                role=\"group\"\n                draggable=\"true\"\n                aria-roledescription=\"carousel\"\n                @mousedown=\"onDragStart\"\n                @touchstart=\"onDragStart\">\n                <!--\n                    @slot Display carousel item\n                -->\n                <slot />\n            </div>\n            <!--\n                @slot Override the arrows\n                @binding {boolean} has-prev has prev arrow button \n                @binding {boolean} has-next has next arrow button \n                @binding {(): void} prev switch to prev item function\n                @binding {(): void} next switch to next item function\n            -->\n            <slot\n                name=\"arrow\"\n                :has-prev=\"hasPrev\"\n                :prev=\"onPrev\"\n                :has-next=\"hasNext\"\n                :next=\"onNext\">\n                <template v-if=\"arrows\">\n                    <o-icon\n                        v-show=\"hasPrev\"\n                        :class=\"[...arrowIconClasses, ...arrowIconPrevClasses]\"\n                        :pack=\"iconPack\"\n                        :icon=\"iconPrev\"\n                        :size=\"iconSize\"\n                        both\n                        role=\"button\"\n                        tabindex=\"0\"\n                        @click=\"onPrev\"\n                        @keydown.enter=\"onPrev\" />\n                    <o-icon\n                        v-show=\"hasNext\"\n                        :class=\"[...arrowIconClasses, ...arrowIconNextClasses]\"\n                        :pack=\"iconPack\"\n                        :icon=\"iconNext\"\n                        :size=\"iconSize\"\n                        both\n                        role=\"button\"\n                        tabindex=\"0\"\n                        @click=\"onNext\"\n                        @keydown.enter=\"onNext\" />\n                </template>\n            </slot>\n        </div>\n\n        <!--\n            @slot Override the indicators\n            @binding {number} active active index \n            @binding {(idx: number): void} switch-to switch to item function\n            @binding {number} indicator-index current indicator index\n        -->\n        <slot\n            :active=\"activeIndex\"\n            :switch-to=\"switchTo\"\n            :indicator-index=\"indicatorIndex\"\n            name=\"indicators\">\n            <template v-if=\"childItems.length\">\n                <div v-if=\"indicators\" :class=\"indicatorsClasses\" role=\"group\">\n                    <div\n                        v-for=\"(_, index) in indicatorCount\"\n                        :key=\"index\"\n                        :class=\"indicatorClasses\"\n                        role=\"button\"\n                        tabindex=\"0\"\n                        @focus=\"onModeChange('hover', index)\"\n                        @mouseover=\"onModeChange('hover', index)\"\n                        @click=\"onModeChange('click', index)\"\n                        @keypress.enter=\"onModeChange('click', index)\">\n                        <!--\n                            @slot Override the indicator elements\n                            @binding {index} index indicator index \n                        -->\n                        <slot :index=\"index\" name=\"indicator\">\n                            <span :class=\"indicatorItemClasses(index)\" />\n                        </slot>\n                    </div>\n                </div>\n            </template>\n        </slot>\n        <template v-if=\"overlay\">\n            <!-- @slot Overlay element -->\n            <slot name=\"overlay\" />\n        </template>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { CarouselComponent } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * A Slideshow item used by the carousel\n * @displayName Carousel Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCarouselItem\",\n    configField: \"carousel\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Make item clickable */\n    clickable: { type: Boolean, default: false },\n    /** Role attribute to be passed to the div wrapper for better accessibility */\n    ariaRole: {\n        type: String,\n        default: () => getOption(\"carousel.ariaRole\", \"option\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of carousel item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of carousel item when is active */\n    itemActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of carousel item when is clickable */\n    itemClickableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\n// Inject functionalities and data from the parent carousel component\nconst { parent, item } = useProviderChild<CarouselComponent>();\n\nconst isActive = computed(() => parent.value.activeIndex === item.value.index);\n\nconst itemStyle = computed(() => ({ width: `${parent.value.itemWidth}px` }));\n\nfunction onClick(event: Event): void {\n    if (isActive.value) parent.value.onClick(event);\n    if (props.clickable) parent.value.setActive(item.value.index);\n}\n\n// --- Computed Component Classes ---\n\nconst itemClasses = defineClasses(\n    [\"itemClass\", \"o-car__item\"],\n    [\"itemActiveClass\", \"o-car__item--active\", null, isActive],\n    [\n        \"itemClickableClass\",\n        \"o-car__item--clickable\",\n        null,\n        computed(() => props.clickable),\n    ],\n);\n</script>\n\n<template>\n    <div\n        :class=\"itemClasses\"\n        :style=\"itemStyle\"\n        :data-id=\"`carousel-${item.identifier}`\"\n        data-oruga=\"carousel-item\"\n        :role=\"ariaRole\"\n        aria-roledescription=\"item\"\n        :aria-selected=\"isActive\"\n        @click=\"onClick\"\n        @keypress.enter=\"onClick\">\n        <!--\n            @slot Default content\n        -->\n        <slot />\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Carousel from \"./Carousel.vue\";\nimport CarouselItem from \"./CarouselItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export carousel plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Carousel);\n        registerComponent(app, CarouselItem);\n    },\n} as Plugin;\n\n/** export carousel components */\nexport { Carousel as OCarousel, CarouselItem as OCarouselItem };\n","<script setup lang=\"ts\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { uuid } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    usePropBinding,\n    useVModelBinding,\n    useInputHandler,\n} from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Select a single or grouped options\n * @displayName Checkbox\n * @style _checkbox.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCheckbox\",\n    configField: \"checkbox\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number, Boolean, Array], default: undefined },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"checkbox.variant\"),\n    },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"checkbox.size\"),\n    },\n    /** Input label, unnecessary when default slot is used */\n    label: { type: String, default: undefined },\n    /** Same as native indeterminate */\n    indeterminate: { type: Boolean, default: false },\n    /** Same as native value */\n    nativeValue: { type: [String, Number, Boolean], default: undefined },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Same as native required */\n    required: { type: Boolean, default: false },\n    /** Same as native name */\n    name: { type: String, default: undefined },\n    /** Overrides the returned value when it's checked */\n    trueValue: { type: [String, Number, Boolean], default: true },\n    /** Overrides the returned value when it's not checked */\n    falseValue: { type: [String, Number, Boolean], default: false },\n    /** Accessibility label to establish relationship between the checkbox and control label */\n    ariaLabelledby: { type: String, default: () => uuid() },\n    /** Same as native autocomplete options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"checkbox.autocomplete\", \"off\"),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when checkbox is disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the root element when checked */\n    checkedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the checkbox input */\n    inputClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the checkbox input when checked */\n    inputCheckedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when checkbox is indeterminate */\n    indeterminateClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the checkbox labe */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the checkbox size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the checkbox variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string, number, boolean, array} updated modelValue prop\n     */\n    (\n        e: \"update:modelValue\",\n        value: string | number | boolean | Array<string | number | boolean>,\n    ): void;\n    /**\n     * on input change event\n     * @param value {string, number, boolean, array} input value\n     * @param event {Event} native event\n     */\n    (\n        e: \"input\",\n        value: string | number | boolean | Array<string | number | boolean>,\n        event: Event,\n    ): void;\n    /**\n     * indeterminate prop two-way binding\n     * @param value {boolean} updated indeterminate prop\n     */\n    (e: \"update:indeterminate\", value: boolean): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n}>();\n\nconst inputRef = ref();\n\n// use form input functionalities\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\n    inputRef,\n    emits,\n    props,\n);\n\nconst vmodel = useVModelBinding<\n    string | number | boolean | Array<string | number | boolean>\n>(props, emits, { passive: true });\n\nconst isIndeterminate = usePropBinding<boolean>(\"indeterminate\", props, emits);\n\nconst isChecked = computed(\n    () =>\n        vmodel.value === props.trueValue ||\n        (Array.isArray(vmodel.value) &&\n            vmodel.value.includes(props.nativeValue)),\n);\n\nfunction onInput(event: Event): void {\n    emits(\"input\", vmodel.value, event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-chk\"],\n    [\"checkedClass\", \"o-chk--checked\", null, isChecked],\n    [\n        \"sizeClass\",\n        \"o-chk--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\"disabledClass\", \"o-chk--disabled\", null, computed(() => props.disabled)],\n    [\n        \"variantClass\",\n        \"o-chk--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst inputClasses = defineClasses(\n    [\"inputClass\", \"o-chk__input\"],\n    [\"inputCheckedClass\", \"o-chk__input--checked\", null, isChecked],\n    [\n        \"indeterminateClass\",\n        \"o-chk__input--indeterminate\",\n        null,\n        isIndeterminate,\n    ],\n);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-chk__label\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <label\n        ref=\"label\"\n        :class=\"rootClasses\"\n        data-oruga=\"checkbox\"\n        role=\"checkbox\"\n        :aria-checked=\"isChecked\"\n        @click.stop=\"setFocus\"\n        @keydown.prevent.enter=\"setFocus\">\n        <input\n            v-bind=\"$attrs\"\n            ref=\"inputRef\"\n            v-model=\"vmodel\"\n            type=\"checkbox\"\n            data-oruga-input=\"checkbox\"\n            :class=\"inputClasses\"\n            :disabled=\"disabled\"\n            :required=\"required\"\n            :name=\"name\"\n            :autocomplete=\"autocomplete\"\n            :value=\"nativeValue\"\n            :indeterminate.prop=\"indeterminate\"\n            :true-value=\"trueValue\"\n            :false-value=\"falseValue\"\n            :aria-labelledby=\"ariaLabelledby\"\n            @click.stop\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"onInput\" />\n\n        <span\n            v-if=\"label || $slots.default\"\n            :id=\"ariaLabelledby\"\n            :class=\"labelClasses\">\n            <!--\n                @slot Content slot, default is label prop\n            -->\n            <slot>{{ label }}</slot>\n        </span>\n    </label>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Checkbox from \"./Checkbox.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export checkbox plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Checkbox);\n    },\n} as Plugin;\n\n/** export table components */\nexport { Checkbox as OCheckbox };\n","<script setup lang=\"ts\">\nimport { type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { uuid } from \"@/utils/helpers\";\nimport { defineClasses, usePropBinding } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * An easy way to toggle what you want\n * @displayName Collapse\n * @style _collapse.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OCollapse\",\n    configField: \"collapse\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether collapse is open or not, use v-model:open to make it two-way binding */\n    open: { type: Boolean, default: true },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"collapse.animation\", \"fade\"),\n    },\n    /** Id property of the content container */\n    contentId: { type: String, default: () => uuid() },\n    /**\n     * Trigger position\n     * @values top, bottom\n     */\n    position: {\n        type: String as PropType<\"top\" | \"bottom\">,\n        default: () => getOption(\"collapse.position\", \"top\"),\n        validator: (value: string) => [\"top\", \"bottom\"].indexOf(value) > -1,\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the trigger element */\n    triggerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the content */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * open prop two-way binding\n     * @param value {boolean} updated open prop\n     */\n    (e: \"update:open\", value: boolean): void;\n    /** on collapse opened */\n    (e: \"open\"): void;\n    /** on collapse closed */\n    (e: \"close\"): void;\n}>();\n\nconst isOpen = usePropBinding<boolean>(\"open\", props, emits, { passive: true });\n\n/** Toggle and emit events */\nfunction toggle(): void {\n    isOpen.value = !isOpen.value;\n    isOpen.value ? emits(\"open\") : emits(\"close\");\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses([\"rootClass\", \"o-clps\"]);\n\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-clps__trigger\"]);\n\nconst contentClasses = defineClasses([\"contentClass\", \"o-clps__content\"]);\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"collapse\">\n        <div\n            v-if=\"position === 'top'\"\n            :class=\"triggerClasses\"\n            role=\"button\"\n            tabindex=\"0\"\n            @click=\"toggle\"\n            @keydown.enter=\"toggle\">\n            <!--\n                @slot Define the collapse trigger\n                @binding {boolean} open collapse open state \n             -->\n            <slot name=\"trigger\" :open=\"isOpen\" />\n        </div>\n\n        <Transition :name=\"animation\">\n            <div v-show=\"isOpen\" :id=\"contentId\" :class=\"contentClasses\">\n                <!--\n                    @slot Default content\n                -->\n                <slot />\n            </div>\n        </Transition>\n\n        <div\n            v-if=\"position === 'bottom'\"\n            :class=\"triggerClasses\"\n            role=\"button\"\n            tabindex=\"0\"\n            @click=\"toggle\"\n            @keydown.enter=\"toggle\">\n            <!--\n                @slot Define the collapse trigger\n                @binding {boolean} open collapse open state \n             -->\n            <slot name=\"trigger\" :open=\"isOpen\" />\n        </div>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Collapse from \"./Collapse.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export collapse plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Collapse);\n    },\n} as Plugin;\n\n/** export collapse components */\nexport { Collapse as OCollapse };\n","<script setup lang=\"ts\">\nimport { computed, watch, onMounted, ref, nextTick, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { uuid } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    useVModelBinding,\n    useInputHandler,\n} from \"@/composables\";\n\nimport { injectField } from \"../field/useFieldShare\";\n\nimport type { OptionsItem } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Select an item in a dropdown list. Use with Field to access all functionalities\n * @displayName Select\n * @style _select.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSelect\",\n    configField: \"select\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: {\n        type: [String, Number, Boolean, Object, Array],\n        default: null,\n    },\n    /** Select options, unnecessary when default slot is used */\n    options: {\n        type: Array as PropType<string[] | OptionsItem[]>,\n        default: undefined,\n    },\n    /**\n     * Vertical size of input\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"select.size\"),\n    },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"select.variant\"),\n    },\n    /** Text when nothing is selected */\n    placeholder: { type: String, default: undefined },\n    /** Allow multiple selection */\n    multiple: { type: Boolean, default: false },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Makes the element rounded */\n    rounded: { type: Boolean, default: false },\n    /** Same as native size */\n    nativeSize: { type: [String, Number], default: undefined },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"select.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"select.icon\", undefined),\n    },\n    /** Makes the icon clickable */\n    iconClickable: { type: Boolean, default: false },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"select.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /** Variant of right icon */\n    iconRightVariant: { type: String, default: undefined },\n    /** Accessibility label to establish relationship between the input and control label */\n    ariaLabelledby: { type: String, default: () => uuid() },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    /** Same as native autocomplete options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"select.autocomplete\", \"off\"),\n    },\n    /** Show status icon using field and variant prop */\n    statusIcon: {\n        type: Boolean,\n        default: () => getOption(\"statusIcon\", true),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the native select element */\n    selectClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the left icon space inside the select */\n    iconLeftSpaceClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the right icon space inside the select */\n    iconRightSpaceClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of select when rounded */\n    roundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select when multiple mode is active */\n    multipleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of select when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of select when disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the left icon */\n    iconLeftClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the right icon */\n    iconRightClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select placeholder */\n    placeholderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select arrow */\n    arrowClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the select variant for the root element*/\n    rootVariantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number | boolean | object | Array<any>} updated modelValue prop\n     */\n    (\n        e: \"update:modelValue\",\n        value: string | number | boolean | object | Array<any>,\n    ): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n}>();\n\nconst selectRef = ref<HTMLInputElement>();\n\n// use form input functionality\nconst { checkHtml5Validity, onBlur, onFocus, onInvalid, setFocus } =\n    useInputHandler(selectRef, emits, props);\n\n// inject parent field component if used inside one\nconst { parentField, statusVariant, statusVariantIcon } = injectField();\n\nconst vmodel = useVModelBinding<\n    string | number | boolean | object | Array<any>\n>(props, emits, { passive: true });\n\nconst placeholderVisible = computed(() => vmodel.value === null);\n\nonMounted(() => {\n    /**\n     * When v-model is changed:\n     *  1. Set parent field filled state.\n     *  2. Resize textarea input\n     *  3. Check html5 valdiation\n     */\n    watch(\n        () => vmodel.value,\n        (value) => {\n            if (parentField?.value) parentField.value.setFilled(!!value);\n            checkHtml5Validity();\n        },\n        { immediate: true },\n    );\n});\n\nconst selectOptions = computed<OptionsItem[]>(() => {\n    if (!props.options || !Array.isArray(props.options)) return [];\n\n    return props.options.map((option) =>\n        typeof option === \"string\"\n            ? { value: option, label: option, key: uuid() }\n            : { ...option, key: uuid() },\n    );\n});\n\n// --- Icon Feature ---\n\nconst hasIconRight = computed(\n    () =>\n        (props.iconRight && !props.multiple) ||\n        (props.statusIcon && statusVariantIcon.value),\n);\n\nconst rightIcon = computed(() =>\n    props.iconRight ? props.iconRight : statusVariantIcon.value,\n);\n\nconst rightIconVariant = computed(() =>\n    props.iconRight\n        ? props.iconRightVariant || props.variant || null\n        : statusVariant.value,\n);\n\nfunction iconClick(emit, event): void {\n    emits(emit, event);\n    nextTick(() => setFocus());\n}\n\nfunction rightIconClick(event): void {\n    if (props.iconRightClickable) iconClick(\"icon-right-click\", event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-ctrl-sel\"],\n    [\n        \"expandedClass\",\n        \"o-ctrl-sel--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n    [\n        \"rootVariantClass\",\n        \"o-ctrl-sel--\",\n        computed(() => statusVariant.value || props.variant),\n        computed(() => !!statusVariant.value || !!props.variant),\n    ],\n);\n\nconst selectClasses = defineClasses(\n    [\"selectClass\", \"o-sel\"],\n    [\"roundedClass\", \"o-sel--rounded\", null, computed(() => props.rounded)],\n    [\"multipleClass\", \"o-sel--multiple\", null, computed(() => props.multiple)],\n    [\n        \"sizeClass\",\n        \"o-sel--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"variantClass\",\n        \"o-sel--\",\n        computed(() => statusVariant.value || props.variant),\n        computed(() => !!statusVariant.value || !!props.variant),\n    ],\n    [\"disabledClass\", \"o-sel--disabled\", null, computed(() => props.disabled)],\n    [\n        \"iconLeftSpaceClass\",\n        \"o-sel-iconspace-left\",\n        null,\n        computed(() => !!props.icon),\n    ],\n    [\n        \"iconRightSpaceClass\",\n        \"o-sel-iconspace-right\",\n        null,\n        computed(() => !!props.iconRight),\n    ],\n    [\"placeholderClass\", \"o-sel--placeholder\", null, placeholderVisible],\n    [\n        \"arrowClass\",\n        \"o-sel-arrow\",\n        null,\n        computed(() => !props.iconRight && !props.multiple),\n    ],\n);\n\nconst iconLeftClasses = defineClasses([\"iconLeftClass\", \"o-sel__icon-left\"]);\n\nconst iconRightClasses = defineClasses([\"iconRightClass\", \"o-sel__icon-right\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"select\">\n        <o-icon\n            v-if=\"icon\"\n            :class=\"iconLeftClasses\"\n            :clickable=\"iconClickable\"\n            :icon=\"icon\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            @click=\"iconClick('icon-click', $event)\" />\n\n        <select\n            v-bind=\"$attrs\"\n            ref=\"selectRef\"\n            v-model=\"vmodel\"\n            data-oruga-input=\"select\"\n            :class=\"selectClasses\"\n            :autocomplete=\"autocomplete\"\n            :multiple=\"multiple\"\n            :size=\"nativeSize\"\n            :disabled=\"disabled\"\n            :aria-labelledby=\"ariaLabelledby\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\">\n            <template v-if=\"placeholder || $slots.placeholder\">\n                <option v-if=\"placeholderVisible\" :value=\"null\" disabled hidden>\n                    <!--\n                        @slot Override the placeholder\n                    -->\n                    <slot name=\"placeholder\">\n                        {{ placeholder }}\n                    </slot>\n                </option>\n            </template>\n\n            <!--\n                @slot Override the options, default is options prop\n            -->\n            <slot>\n                <option\n                    v-for=\"option in selectOptions\"\n                    :key=\"option.key\"\n                    :value=\"option.value\"\n                    v-bind=\"option.attrs\">\n                    {{ option.label }}\n                </option>\n            </slot>\n        </select>\n\n        <o-icon\n            v-if=\"hasIconRight\"\n            :class=\"iconRightClasses\"\n            :clickable=\"iconRightClickable\"\n            :icon=\"rightIcon\"\n            :pack=\"iconPack\"\n            :size=\"size\"\n            :variant=\"rightIconVariant\"\n            both\n            @click=\"rightIconClick\" />\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, useAttrs, type PropType, ref, watch, nextTick } from \"vue\";\n\nimport ODropdown from \"../dropdown/Dropdown.vue\";\nimport ODropdownItem from \"../dropdown/DropdownItem.vue\";\nimport OInput from \"../input/Input.vue\";\n\nimport { isMobileAgent } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    getActiveClasses,\n    useEventListener,\n    useInputHandler,\n    usePropBinding,\n} from \"@/composables\";\n\nimport type { ClassBind, ComponentClass } from \"@/types\";\n\n/**\n * This is a internal used component.\n * Used by Datepicker and Timepicker.\n */\ndefineOptions({\n    name: \"OPickerWrapper\",\n});\n\nconst props = defineProps({\n    /** parent picker component props  */\n    pickerProps: { type: Object, required: true },\n    /** data-oruga attribute value */\n    dataOruga: { type: String, required: true },\n    /** the input value */\n    value: { type: [Date, Array], default: undefined },\n    /** the active state of the dropdown */\n    active: { type: Boolean, default: false },\n    formattedValue: { type: String, default: undefined },\n    nativeType: { type: String, required: true },\n    nativeStep: { type: String, default: undefined },\n    nativeValue: { type: [String, Number], default: undefined },\n    nativeMin: { type: [String, Number], default: undefined },\n    nativeMax: { type: [String, Number], default: undefined },\n    stayOpen: { type: Boolean, default: false },\n    rootClasses: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n    dropdownClasses: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n    boxClass: {\n        type: Array as PropType<ComponentClass>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /** on value change event */\n    (e: \"change\", value: string): void;\n    /** on natvie value change event */\n    (e: \"native-change\", value: string): void;\n    /** on input focus event */\n    (e: \"focus\", evt: Event): void;\n    /** on input blur event */\n    (e: \"blur\", evt: Event): void;\n    /** on input invalid event */\n    (e: \"invalid\", evt: Event): void;\n    /** on icon click event */\n    (e: \"icon-click\", evt: Event): void;\n    /** on icon right click event */\n    (e: \"icon-right-click\", evt: Event): void;\n}>();\n\n/** the computed picker contains all chared props from the datepicker and the timepicker  */\nconst picker = computed<any>(() => props.pickerProps);\n\nconst isMobileNative = computed(\n    () => picker.value.mobileNative && isMobileAgent.any(),\n);\n\nconst dropdownRef = ref<InstanceType<typeof ODropdown>>();\nconst inputRef = ref<InstanceType<typeof OInput>>();\nconst nativeInputRef = ref<InstanceType<typeof OInput>>();\n\nconst elementRef = computed(() =>\n    isMobileNative.value ? nativeInputRef.value : inputRef.value,\n);\n\n// use form input functionality for native input\nconst {\n    checkHtml5Validity,\n    setFocus,\n    doClick,\n    onBlur,\n    onFocus,\n    onInvalid,\n    isValid,\n    isFocused,\n} = useInputHandler(elementRef, emits, picker.value);\n\n/**\n * Show input as text for placeholder,\n * when placeholder and native value is given and input is not focused.\n */\nconst computedNativeType = computed(() =>\n    !picker.value.placeholder || props.nativeValue || isFocused.value\n        ? props.nativeType\n        : \"text\",\n);\n\n/**\n * When v-model is changed:\n *  1. Update internal value.\n *  2. If it's invalid, validate again.\n */\nwatch(\n    () => props.value,\n    () => {\n        // toggle picker if not stay open\n        if (!props.stayOpen) togglePicker(false);\n        // check validation if native\n        if (isMobileNative.value && !isValid.value) checkHtml5Validity();\n    },\n);\n\nconst isActive = usePropBinding<boolean>(\"active\", props, emits, {\n    passive: true,\n});\n\nwatch(isActive, onActiveChange);\n\nconst ariaRole = computed(() => (!picker.value.inline ? \"dialog\" : undefined));\n\nconst triggers = computed(() => (picker.value.openOnFocus ? [\"click\"] : []));\n\nif (isClient) useEventListener(\"keyup\", onKeyPress);\n\n/** Keypress event that is bound to the document. */\nfunction onKeyPress(event: KeyboardEvent): void {\n    if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\"))\n        togglePicker(false);\n}\n\n// --- EVENT HANDLER ---\n\n/** Toggle picker */\nfunction togglePicker(active: boolean): void {\n    if (isMobileNative.value) {\n        setFocus(); // focus the underlaying input element\n        doClick(); // click to open the underlaying input element\n    } else if (dropdownRef.value) {\n        if (active || picker.value.closeOnClick)\n            nextTick(() => (isActive.value = active));\n    }\n}\n\n/** Avoid dropdown toggle when is already visible */\nfunction onInputClick(event): void {\n    if (isActive.value) event.stopPropagation();\n}\n\n/** Emit 'blur' event on dropdown is not active (closed) */\nfunction onActiveChange(value: boolean): void {\n    if (value) onFocus();\n    else if (!value) onBlur();\n}\n\n// --- Computed Component Classes ---\n\nconst attrs = useAttrs();\nconst inputBind = computed(() => ({\n    ...attrs,\n    ...picker.value.inputClasses,\n}));\n\nconst dropdownBind = computed(() => ({\n    \"root-class\": getActiveClasses(props.dropdownClasses),\n    ...picker.value.dropdownClasses,\n}));\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <div :data-oruga=\"dataOruga\" :class=\"rootClasses\">\n        <o-dropdown\n            v-if=\"!isMobileNative || picker.inline\"\n            ref=\"dropdownRef\"\n            v-bind=\"dropdownBind\"\n            v-model:active=\"isActive\"\n            :position=\"picker.position\"\n            :disabled=\"picker.disabled\"\n            :inline=\"picker.inline\"\n            :mobile-modal=\"picker.mobileModal\"\n            :trap-focus=\"picker.trapFocus\"\n            :aria-role=\"ariaRole\"\n            :aria-modal=\"!picker.inline\"\n            :tabindex=\"-1\"\n            :teleport=\"picker.teleport\"\n            :triggers=\"triggers\">\n            <template v-if=\"!picker.inline\" #trigger>\n                <slot name=\"trigger\">\n                    <o-input\n                        ref=\"inputRef\"\n                        v-bind=\"inputBind\"\n                        autocomplete=\"off\"\n                        :model-value=\"formattedValue\"\n                        :placeholder=\"picker.placeholder\"\n                        :size=\"picker.size\"\n                        :icon-pack=\"picker.iconPack\"\n                        :icon=\"picker.icon\"\n                        :icon-right=\"picker.iconRight\"\n                        :icon-right-clickable=\"picker.iconRightClickable\"\n                        :expanded=\"picker.expanded\"\n                        :rounded=\"picker.rounded\"\n                        :disabled=\"picker.disabled\"\n                        :readonly=\"picker.readonly\"\n                        :use-html5-validation=\"false\"\n                        @click=\"onInputClick\"\n                        @keyup.enter=\"togglePicker(true)\"\n                        @change=\"$emit('change', $event.target.value)\"\n                        @focus=\"onFocus\"\n                        @blur=\"onBlur\"\n                        @icon-click=\"$emit('icon-click', $event)\"\n                        @icon-right-click=\"$emit('icon-right-click', $event)\" />\n                </slot>\n            </template>\n            <o-dropdown-item\n                override\n                tag=\"div\"\n                :item-class=\"boxClass\"\n                :disabled=\"picker.disabled\"\n                :clickable=\"false\">\n                <slot />\n            </o-dropdown-item>\n        </o-dropdown>\n\n        <!-- Native Picker -->\n        <o-input\n            v-else\n            ref=\"nativeInputRef\"\n            v-bind=\"inputBind\"\n            :type=\"computedNativeType\"\n            autocomplete=\"off\"\n            :model-value=\"nativeValue\"\n            :min=\"nativeMin\"\n            :max=\"nativeMax\"\n            :step=\"nativeStep\"\n            :placeholder=\"picker.placeholder\"\n            :size=\"picker.size\"\n            :icon-pack=\"picker.iconPack\"\n            :icon=\"picker.icon\"\n            :icon-right=\"picker.iconRight\"\n            :icon-right-clickable=\"picker.iconRightClickable\"\n            :rounded=\"picker.rounded\"\n            :disabled=\"picker.disabled\"\n            :readonly=\"false\"\n            :use-html5-validation=\"false\"\n            @change=\"$emit('native-change', $event.target.value)\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @invalid=\"onInvalid\"\n            @icon-click=\"$emit('icon-click', $event)\"\n            @icon-right-click=\"$emit('icon-right-click', $event)\" />\n    </div>\n</template>\n","/**\n * Return month names according to a specified locale\n * @param  {String} locale A bcp47 localerouter. undefined will use the user browser locale\n * @param  {String} format long (ex. March), short (ex. Mar) or narrow (M)\n * @return {Array<String>} An array of month names\n */\ntype MonthType =\n    | \"numeric\"\n    | \"2-digit\"\n    | \"long\"\n    | \"short\"\n    | \"narrow\"\n    | undefined;\n\nexport function getMonthNames(\n    locale: string = undefined,\n    format: MonthType = \"long\",\n): string[] {\n    const dates = [];\n    for (let i = 0; i < 12; i++) {\n        dates.push(new Date(2000, i, 15));\n    }\n    const dtf = new Intl.DateTimeFormat(locale, {\n        month: format,\n        // timeZone: 'UTC'\n    });\n    return dates.map((d) => dtf.format(d));\n}\n\n/**\n * Return weekday names according to a specified locale\n * @param  {String} locale A bcp47 localerouter. undefined will use the user browser locale\n * @param  {Number} first day of week index\n * @param  {String} format long (ex. Thursday), short (ex. Thu) or narrow (T)\n * @return {Array<String>} An array of weekday names\n */\n\ntype WeekdayType = \"long\" | \"short\" | \"narrow\" | undefined;\n\nexport function getWeekdayNames(\n    locale: string = undefined,\n    firstDayOfWeek: number = 0,\n    format: WeekdayType = \"narrow\",\n): string[] {\n    const dates = [];\n    for (let i = 1, j = 0; j < 7; i++) {\n        const d = new Date(2000, 0, i);\n        const day = d.getDay();\n        if (day === firstDayOfWeek || j > 0) {\n            dates.push(d);\n            j++;\n        }\n    }\n    const dtf = new Intl.DateTimeFormat(locale, {\n        weekday: format,\n        // timeZone: 'UTC'\n    });\n    return dates.map((d) => dtf.format(d));\n}\n\n/**\n * Accept a regex with group names and return an object\n * ex. matchWithGroups(/((?!=<year>)\\d+)\\/((?!=<month>)\\d+)\\/((?!=<day>)\\d+)/, '2000/12/25')\n * will return { year: 2000, month: 12, day: 25 }\n * @param  {String} includes injections of (?!={groupname}) for each group\n * @param  {String} the string to run regex\n * @return {Object} an object with a property for each group having the group's match as the value\n */\nexport function matchWithGroups(pattern: string, str: string): any {\n    const matches = str.match(pattern);\n    return (\n        pattern\n            // get the pattern as a string\n            .toString()\n            // suss out the groups\n            .match(/<(.+?)>/g)\n            // remove the braces\n            .map((group) => {\n                const groupMatches = group.match(/<(.+)>/);\n                if (!groupMatches || groupMatches.length <= 0) {\n                    return null;\n                }\n                return group.match(/<(.+)>/)[1];\n            })\n            // create an object with a property for each group having the group's match as the value\n            .reduce((acc, curr, index) => {\n                if (matches && matches.length > index) {\n                    acc[curr] = matches[index + 1];\n                } else {\n                    acc[curr] = null;\n                }\n                return acc;\n            }, {})\n    );\n}\n\n/** Return array of all days in the week that the startingDate is within */\nexport function weekBuilder(\n    startingDate: number,\n    month: number,\n    year: number,\n    firstDayOfWeek: number,\n): Date[] {\n    const thisMonth = new Date(year, month);\n\n    const thisWeek = [];\n\n    const dayOfWeek = new Date(year, month, startingDate).getDay();\n\n    const end =\n        dayOfWeek >= firstDayOfWeek\n            ? dayOfWeek - firstDayOfWeek\n            : 7 - firstDayOfWeek + dayOfWeek;\n\n    let daysAgo = 1;\n    for (let i = 0; i < end; i++) {\n        thisWeek.unshift(\n            new Date(\n                thisMonth.getFullYear(),\n                thisMonth.getMonth(),\n                startingDate - daysAgo,\n            ),\n        );\n        daysAgo++;\n    }\n\n    thisWeek.push(new Date(year, month, startingDate));\n\n    let daysForward = 1;\n    while (thisWeek.length < 7) {\n        thisWeek.push(new Date(year, month, startingDate + daysForward));\n        daysForward++;\n    }\n\n    return thisWeek;\n}\n\nexport function firstWeekOffset(year, dow, doy): number {\n    // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    const fwd = 7 + dow - doy;\n    // first-week day local weekday -- which local weekday is fwd\n    const firstJanuary = new Date(year, 0, fwd);\n    const fwdlw = (7 + firstJanuary.getDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n}\n\n/** Return the number of days in a specific year */\nexport function daysInYear(year): number {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0 ? 366 : 365;\n}\n\n/** Return the number of weeks in a specific year */\nexport function weeksInYear(year, dow, doy): number {\n    const weekOffset = firstWeekOffset(year, dow, doy);\n    const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n","import { computed } from \"vue\";\nimport { matchWithGroups } from \"./utils\";\nimport type { DatepickerProps } from \"./types\";\n\nexport function useDatepickerMixins(props: DatepickerProps) {\n    /**\n     * Check that selected date is within earliest/latest params and\n     * is within a given month\n     */\n    function isDateSelectable(date: Date, month: number): boolean {\n        const validity = [];\n\n        if (props.minDate) validity.push(date >= props.minDate);\n        if (props.maxDate) validity.push(date <= props.maxDate);\n\n        if (props.nearbyMonthDays && !props.nearbySelectableMonthDays)\n            validity.push(date.getMonth() === month);\n\n        if (props.selectableDates) {\n            if (typeof props.selectableDates === \"function\") {\n                if (props.selectableDates(date)) return true;\n                else validity.push(false);\n            } else {\n                for (let i = 0; i < props.selectableDates.length; i++) {\n                    const enabledDate = props.selectableDates[i];\n                    if (\n                        date.getDate() === enabledDate.getDate() &&\n                        date.getFullYear() === enabledDate.getFullYear() &&\n                        date.getMonth() === enabledDate.getMonth()\n                    )\n                        return true;\n                    else validity.push(false);\n                }\n            }\n        }\n\n        if (props.unselectableDates) {\n            if (typeof props.unselectableDates === \"function\") {\n                validity.push(!props.unselectableDates(date));\n            } else {\n                for (let i = 0; i < props.unselectableDates.length; i++) {\n                    const disabledDate = props.unselectableDates[i];\n                    validity.push(\n                        date.getDate() !== disabledDate.getDate() ||\n                            date.getFullYear() !== disabledDate.getFullYear() ||\n                            date.getMonth() !== disabledDate.getMonth(),\n                    );\n                }\n            }\n        }\n\n        if (props.unselectableDaysOfWeek) {\n            for (let i = 0; i < props.unselectableDaysOfWeek.length; i++) {\n                const dayOfWeek = props.unselectableDaysOfWeek[i];\n                validity.push(date.getDay() !== dayOfWeek);\n            }\n        }\n\n        return validity.indexOf(false) < 0;\n    }\n\n    const isTypeMonth = computed(() => props.type === \"month\");\n\n    const localeOptions = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                year: \"numeric\",\n                month: \"numeric\",\n            }).resolvedOptions() as Intl.DateTimeFormatOptions,\n    );\n\n    /** DateTime Format */\n    const dtf = computed(\n        () => new Intl.DateTimeFormat(props.locale /*, { timeZone: 'UTC' }*/),\n    );\n\n    /** DateTime Month Format */\n    const dtfMonth = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                year: localeOptions.value.year || \"numeric\",\n                month: localeOptions.value.month || \"2-digit\",\n                // timeZone: 'UTC'\n            }),\n    );\n\n    const sampleTime = computed(() => {\n        const d = props.dateCreator();\n        d.setHours(10);\n        d.setSeconds(0);\n        d.setMinutes(0);\n        d.setMilliseconds(0);\n        return d;\n    });\n\n    /** Format date into string */\n    const defaultDateFormatter = (date: Date | Date[]): string => {\n        if (!date) return \"\";\n        const targetDates = Array.isArray(date) ? date : [date];\n        const dates = targetDates.map((date) => {\n            const d = new Date(\n                date.getFullYear(),\n                date.getMonth(),\n                date.getDate(),\n                12,\n            );\n            return !isTypeMonth.value\n                ? dtf.value.format(d)\n                : dtfMonth.value.format(d);\n        });\n        return !props.multiple ? dates.join(\" - \") : dates.join(\", \");\n    };\n\n    /** Parse a string into a date */\n    const defaultDateParser = (date: string): Date => {\n        if (!date) return null;\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const formatRegex = (isTypeMonth.value ? dtfMonth.value : dtf.value)\n                .formatToParts(sampleTime.value)\n                .map((part) => {\n                    if (part.type === \"literal\") return part.value;\n                    return `((?!=<${part.type}>)\\\\d+)`;\n                })\n                .join(\"\");\n            const dateGroups = matchWithGroups(formatRegex, date);\n\n            // We do a simple validation for the group.\n            // If it is not valid, it will fallback to Date.parse below\n            if (\n                dateGroups.year &&\n                dateGroups.year.length === 4 &&\n                dateGroups.month &&\n                dateGroups.month <= 12\n            ) {\n                if (isTypeMonth.value)\n                    return new Date(dateGroups.year, dateGroups.month - 1);\n                else if (dateGroups.day && dateGroups.day <= 31) {\n                    return new Date(\n                        dateGroups.year,\n                        dateGroups.month - 1,\n                        dateGroups.day,\n                        12,\n                    );\n                }\n            }\n        }\n        // Fallback if formatToParts is not supported or if we were not able to parse a valid date\n        if (!isTypeMonth.value) return new Date(Date.parse(date));\n        const s = date.split(\"/\");\n        const year = s[0].length === 4 ? s[0] : s[1];\n        const month = s[0].length === 2 ? s[0] : s[1];\n        if (year && month) {\n            return new Date(\n                parseInt(year, 10),\n                parseInt(month, 10) - 1,\n                1,\n                0,\n                0,\n                0,\n                0,\n            );\n        }\n    };\n\n    return { isDateSelectable, defaultDateParser, defaultDateFormatter };\n}\n","<script setup lang=\"ts\">\nimport {\n    computed,\n    watch,\n    nextTick,\n    ref,\n    type PropType,\n    type ComponentPublicInstance,\n} from \"vue\";\n\nimport { defineClasses } from \"@/composables\";\n\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\nimport { weeksInYear, firstWeekOffset } from \"./utils\";\nimport type { DatepickerProps, DatepickerEvent } from \"./types\";\nimport type { ClassBind } from \"@/types\";\n\ndefineOptions({\n    name: \"ODatepickerTableRow\",\n    configField: \"datepicker\",\n});\n\nconst props = defineProps({\n    day: { type: Number, required: true },\n    week: { type: Array as PropType<Date[]>, required: true },\n    month: { type: Number, required: true },\n    selectedDate: {\n        type: [Date, Array] as PropType<Date | Date[]>,\n        default: undefined,\n    },\n    events: { type: Array as PropType<DatepickerEvent[]>, default: undefined },\n    hoveredDateRange: { type: Array as PropType<Date[]>, default: () => [] },\n    pickerProps: {\n        type: Object as PropType<DatepickerProps>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    (e: \"select\", value: Date): void;\n    (e: \"hover-enddate\", value: Date): void;\n    (e: \"change-focus\", value: Date): void;\n    (e: \"week-number-click\", value: number): void;\n}>();\n\nconst { isDateSelectable } = useDatepickerMixins(props.pickerProps);\n\nconst datepicker = computed<DatepickerProps>(() => props.pickerProps);\n\nconst hasEvents = computed(() => !!props.events?.length);\n\nconst dayRefs = ref(new Map());\n\nfunction setDayRef(date: Date, el: Element | ComponentPublicInstance): void {\n    const refKey = `day-${date.getMonth()}-${date.getDate()}`;\n    if (el) dayRefs.value.set(refKey, el);\n}\n\nwatch(\n    () => props.day,\n    (day) => {\n        // if day is in week\n        if (props.week.map((d) => d.getDate()).includes(day))\n            nextTick(() => {\n                // $nextTick is needed when month is changed\n                const refKey = `day-${props.month}-${day}`;\n                const ref = dayRefs.value.get(refKey);\n                if (ref) ref.focus();\n            });\n    },\n);\n\nwatch(\n    () => props.month,\n    // clear day refs on month change\n    () => (dayRefs.value = new Map()),\n);\n\nfunction clickWeekNumber(week: number): void {\n    if (datepicker.value.weekNumberClickable) emits(\"week-number-click\", week);\n}\n\nfunction getDayOfYear(input): number {\n    return (\n        Math.round(\n            (input.getTime() - new Date(input.getFullYear(), 0, 1).getTime()) /\n                864e5,\n        ) + 1\n    );\n}\n\nfunction getWeekNumber(mom): number {\n    const dow = datepicker.value.firstDayOfWeek; // first day of week\n    // Rules for the first week : 1 for the 1st January, 4 for the 4th January\n    const doy = datepicker.value.rulesForFirstWeek;\n    const weekOffset = firstWeekOffset(mom.getFullYear(), dow, doy);\n    const week = Math.floor((getDayOfYear(mom) - weekOffset - 1) / 7) + 1;\n    let resWeek;\n    let resYear;\n    if (week < 1) {\n        resYear = mom.getFullYear() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.getFullYear(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.getFullYear(), dow, doy);\n        resYear = mom.getFullYear() + 1;\n    } else {\n        resYear = mom.getFullYear();\n        resWeek = week;\n    }\n    return resWeek;\n}\n\nfunction eventsDateMatch(day: Date): DatepickerEvent[] {\n    if (!props.events?.length) return [];\n    return props.events.filter((event) => event.date.getDay() === day.getDay());\n}\n\n// --- Event Handlers ---\n\nfunction onKeydown(event: KeyboardEvent, weekDay: Date): void {\n    let preventDefault = true;\n    switch (event.key) {\n        case \"Tab\": {\n            preventDefault = false;\n            break;\n        }\n        case \" \":\n        case \"Space\":\n        case \"Spacebar\":\n        case \"Enter\": {\n            selectDate(weekDay);\n            break;\n        }\n\n        case \"ArrowLeft\":\n        case \"Left\": {\n            changeFocus(weekDay, -1);\n            break;\n        }\n        case \"ArrowRight\":\n        case \"Right\": {\n            changeFocus(weekDay, 1);\n            break;\n        }\n        case \"ArrowUp\":\n        case \"Up\": {\n            changeFocus(weekDay, -7);\n            break;\n        }\n        case \"ArrowDown\":\n        case \"Down\": {\n            changeFocus(weekDay, 7);\n            break;\n        }\n    }\n    if (preventDefault) event.preventDefault();\n}\n\n/** Emit select event with chosen date as payload */\nfunction selectDate(date: Date): void {\n    if (datepicker.value.disabled) return;\n    if (isDateSelectable(date, props.month)) emits(\"select\", date);\n}\n\nfunction changeFocus(day, inc): void {\n    const nextDay = new Date(day.getTime());\n    nextDay.setDate(day.getDate() + inc);\n    // if next day is out of range or not selectable, move to next selectable date\n    while (\n        (datepicker.value.minDate && nextDay < datepicker.value.minDate) ||\n        (datepicker.value.maxDate && nextDay > datepicker.value.maxDate) ||\n        !isDateSelectable(nextDay, nextDay.getMonth())\n    ) {\n        // revert day selection until selectable day is reached\n        nextDay.setDate(nextDay.getDate() - Math.sign(inc));\n    }\n    setRangeHoverEndDate(nextDay);\n    emits(\"change-focus\", nextDay);\n}\n\nfunction setRangeHoverEndDate(day): void {\n    if (datepicker.value.range) emits(\"hover-enddate\", day);\n}\n\n// --- Computed Component Classes ---\n\nfunction dateMatch(\n    dateOne: Date,\n    dateTwo: Date | Date[],\n    multiple = false,\n): boolean {\n    // if either date is null or undefined, return false\n    // if using multiple flag, return false\n    if (!dateOne || !dateTwo || multiple) return false;\n\n    if (Array.isArray(dateTwo)) {\n        return dateTwo.some(\n            (date) =>\n                dateOne.getDate() === date.getDate() &&\n                dateOne.getFullYear() === date.getFullYear() &&\n                dateOne.getMonth() === date.getMonth(),\n        );\n    }\n    return (\n        dateOne.getDate() === dateTwo.getDate() &&\n        dateOne.getFullYear() === dateTwo.getFullYear() &&\n        dateOne.getMonth() === dateTwo.getMonth()\n    );\n}\n\nfunction dateWithin(\n    dateOne: Date,\n    dates: Date | Date[],\n    multiple = false,\n): boolean {\n    if (!Array.isArray(dates) || multiple) return false;\n    return dateOne > dates[0] && dateOne < dates[1];\n}\n\n/** Build cellClasses for cell using validations */\nfunction cellClasses(day: Date): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"tableCellSelectedClass\",\n            \"o-dpck__table__cell--selected\",\n            null,\n            dateMatch(day, props.selectedDate) ||\n                dateWithin(day, props.selectedDate, datepicker.value.multiple),\n        ],\n        [\n            \"tableCellFirstSelectedClass\",\n            \"o-dpck__table__cell--first-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.selectedDate) && props.selectedDate[0],\n                datepicker.value.multiple,\n            ),\n        ],\n        [\n            \"tableCellWithinSelectedClass\",\n            \"o-dpck__table__cell--within-selected\",\n            null,\n            dateWithin(day, props.selectedDate, datepicker.value.multiple),\n        ],\n        [\n            \"tableCellLastSelectedClass\",\n            \"o-dpck__table__cell--last-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.selectedDate) && props.selectedDate[1],\n                datepicker.value.multiple,\n            ),\n        ],\n        [\n            \"tableCellFirstHoveredClass\",\n            \"o-dpck__table__cell--first-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.hoveredDateRange) &&\n                    props.hoveredDateRange[0],\n            ),\n        ],\n        [\n            \"tableCellWithinHoveredClass\",\n            \"o-dpck__table__cell--within-hovered\",\n            null,\n            dateWithin(day, props.hoveredDateRange),\n        ],\n        [\n            \"tableCellLastHoveredClass\",\n            \"o-dpck__table__cell--last-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.hoveredDateRange) &&\n                    props.hoveredDateRange[1],\n            ),\n        ],\n        [\n            \"tableCellTodayClass\",\n            \"o-dpck__table__cell--today\",\n            null,\n            dateMatch(day, datepicker.value.dateCreator()),\n        ],\n        [\n            \"tableCellSelectableClass\",\n            \"o-dpck__table__cell--selectable\",\n            null,\n            isDateSelectable(day, props.month) && !datepicker.value.disabled,\n        ],\n        [\n            \"tableCellUnselectableClass\",\n            \"o-dpck__table__cell--unselectable\",\n            null,\n            !isDateSelectable(day, props.month) || datepicker.value.disabled,\n        ],\n\n        [\n            \"tableCellInvisibleClass\",\n            \"o-dpck__table__cell--invisible\",\n            null,\n            !datepicker.value.nearbyMonthDays && day.getMonth() !== props.month,\n        ],\n\n        [\n            \"tableCellNearbyClass\",\n            \"o-dpck__table__cell--nearby\",\n            null,\n            datepicker.value.nearbySelectableMonthDays &&\n                day.getMonth() !== props.month,\n        ],\n        [\n            \"tableCellTodayClass\",\n            \"o-dpck__table__cell--today\",\n            null,\n            dateMatch(day, datepicker.value.dateCreator()),\n        ],\n    );\n\n    return [\n        ...tableCellClasses.value,\n        ...cellEventsClass.value,\n        ...classes.value,\n    ];\n}\n\nfunction eventClasses(event: DatepickerEvent): ClassBind[] {\n    const classes = defineClasses(\n        [\"tableEventClass\", \"o-dpck__table__event\"],\n        [\n            \"tableEventVariantClass\",\n            \"o-dpck__table__event--\",\n            event.type,\n            !!event.type,\n        ],\n        [\n            \"tableEventIndicatorsClass\",\n            \"o-dpck__table__event--\",\n            datepicker.value.indicators,\n            !!datepicker.value.indicators,\n        ],\n    );\n    return classes.value;\n}\n\nconst tableRowClasses = defineClasses([\"tableRowClass\", \"o-dpck__table__row\"]);\n\nconst tableCellClasses = defineClasses([\n    \"tableCellClass\",\n    \"o-dpck__table__cell\",\n]);\n\nconst tableEventsClasses = defineClasses([\n    \"tableEventsClass\",\n    \"o-dpck__table__events\",\n]);\n\nconst cellEventsClass = defineClasses([\n    \"tableCellEventsClass\",\n    \"o-dpck__table__cell--events\",\n    null,\n    hasEvents,\n]);\n</script>\n\n<template>\n    <div :class=\"tableRowClasses\">\n        <div\n            v-if=\"datepicker.showWeekNumber\"\n            :class=\"tableCellClasses\"\n            :style=\"{\n                cursor: datepicker.weekNumberClickable ? 'pointer' : 'auto',\n            }\"\n            :tabindex=\"datepicker.weekNumberClickable ? 0 : null\"\n            role=\"button\"\n            @click.prevent=\"clickWeekNumber(getWeekNumber(week[6]))\"\n            @keydown.enter.prevent=\"clickWeekNumber(getWeekNumber(week[6]))\">\n            <span>{{ getWeekNumber(week[6]) }}</span>\n        </div>\n        <template v-for=\"(weekDay, idx) in week\" :key=\"idx\">\n            <div\n                v-if=\"!datepicker.disabled && isDateSelectable(weekDay, month)\"\n                :ref=\"(el) => setDayRef(weekDay, el)\"\n                :class=\"cellClasses(weekDay)\"\n                role=\"button\"\n                :tabindex=\"\n                    day === weekDay.getDate() && month === weekDay.getMonth()\n                        ? null\n                        : 0\n                \"\n                @click.prevent=\"selectDate(weekDay)\"\n                @mouseenter=\"setRangeHoverEndDate(weekDay)\"\n                @focus=\"setRangeHoverEndDate(weekDay)\"\n                @keydown.enter.prevent=\"onKeydown($event, weekDay)\">\n                <span>{{ weekDay.getDate() }}</span>\n                <div\n                    v-if=\"eventsDateMatch(weekDay).length\"\n                    :class=\"tableEventsClasses\">\n                    <div\n                        v-for=\"(event, index) in eventsDateMatch(weekDay)\"\n                        :key=\"index\"\n                        :class=\"eventClasses(event)\" />\n                </div>\n            </div>\n            <div v-else :class=\"cellClasses(weekDay)\">\n                <span>{{ weekDay.getDate() }}</span>\n            </div>\n        </template>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport ODatepickerTableRow from \"./DatepickerTableRow.vue\";\n\nimport { isDefined } from \"@/utils/helpers\";\nimport { defineClasses } from \"@/composables\";\n\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\nimport { weekBuilder } from \"./utils\";\nimport type { DatepickerProps, DatepickerEvent, FocusedDate } from \"./types\";\n\ndefineOptions({\n    name: \"ODatepickerTable\",\n    configField: \"datepicker\",\n});\n\nconst props = defineProps({\n    modelValue: {\n        type: [Date, Array] as PropType<Date | Date[]>,\n        default: undefined,\n    },\n    focusedDate: { type: Object as PropType<FocusedDate>, required: true },\n    dayNames: { type: Array as PropType<string[]>, required: true },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    pickerProps: {\n        type: Object as PropType<DatepickerProps>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    /** modelValue prop two-way binding */\n    (e: \"update:modelValue\", value: Date | Date[]): void;\n    /** focusedDate prop two-way binding */\n    (e: \"update:focusedDate\", value: FocusedDate): void;\n    (e: \"range-start\", value: Date): void;\n    (e: \"range-end\", value: Date): void;\n    (e: \"week-number-click\", value: number): void;\n}>();\n\nconst { isDateSelectable } = useDatepickerMixins(props.pickerProps);\n\nconst focusedDateModel = defineModel<FocusedDate>(\"focusedDate\");\n\nconst selectedBeginDate = ref<Date>();\nconst selectedEndDate = ref<Date>();\nconst hoveredEndDate = ref<Date>();\n\nconst datepicker = computed<DatepickerProps>(() => props.pickerProps);\n\nconst visibleDayNames = computed(() => {\n    const visibleDayNames = [];\n    let index = datepicker.value.firstDayOfWeek;\n    while (visibleDayNames.length < props.dayNames.length) {\n        const currentDayName = props.dayNames[index % props.dayNames.length];\n        visibleDayNames.push(currentDayName);\n        index++;\n    }\n    if (datepicker.value.showWeekNumber) visibleDayNames.unshift(\"\");\n    return visibleDayNames;\n});\n\n/** Return array of all events in the specified month */\nconst eventsInThisMonth = computed(() => {\n    if (!datepicker.value.events) return [];\n    return datepicker.value.events\n        .map((event) =>\n            !event.date && event instanceof Date ? { date: event } : event,\n        )\n        .filter(\n            (event) =>\n                event.date.getMonth() === focusedDateModel.value.month &&\n                event.date.getFullYear() === focusedDateModel.value.year,\n        );\n});\n\n/** Return array of all weeks in the specified month */\nconst weeksInThisMonth = computed(() => {\n    validateFocusedDay();\n    const month = focusedDateModel.value.month;\n    const year = focusedDateModel.value.year;\n    const weeksInThisMonth = [];\n\n    let startingDay = 1;\n\n    while (weeksInThisMonth.length < 6) {\n        const newWeek = weekBuilder(\n            startingDay,\n            month,\n            year,\n            datepicker.value.firstDayOfWeek,\n        );\n        weeksInThisMonth.push(newWeek);\n        startingDay += 7;\n    }\n\n    return weeksInThisMonth;\n});\n\nfunction eventsInThisWeek(week: Date[]): DatepickerEvent[] {\n    if (!datepicker.value.events) return [];\n    return eventsInThisMonth.value.filter((event) => {\n        const stripped = new Date(event.date);\n        stripped.setHours(0, 0, 0, 0);\n        const timed = stripped.getTime();\n        return week.some((weekDate) => weekDate.getTime() === timed);\n    });\n}\n\nconst hoveredDateRange = computed(() => {\n    if (!datepicker.value.range || selectedEndDate.value) return [];\n    return (\n        hoveredEndDate.value < selectedBeginDate.value\n            ? [hoveredEndDate.value, selectedBeginDate.value]\n            : [selectedBeginDate.value, hoveredEndDate.value]\n    ).filter(isDefined);\n});\n\nfunction validateFocusedDay(): void {\n    const currentDate = new Date(\n        focusedDateModel.value.year,\n        focusedDateModel.value.month,\n        focusedDateModel.value.day,\n    );\n    if (isDateSelectable(currentDate, focusedDateModel.value.month)) return;\n\n    let day = 0;\n    // Number of days in the current month\n    const monthDays = new Date(\n        focusedDateModel.value.year,\n        focusedDateModel.value.month + 1,\n        0,\n    ).getDate();\n    let firstFocusable = null;\n    while (!firstFocusable && ++day < monthDays) {\n        const date = new Date(\n            focusedDateModel.value.year,\n            focusedDateModel.value.month,\n            day,\n        );\n        if (isDateSelectable(date, focusedDateModel.value.month)) {\n            firstFocusable = currentDate;\n            focusedDateModel.value = {\n                day: date.getDate(),\n                month: date.getMonth(),\n                year: date.getFullYear(),\n            };\n        }\n    }\n}\n\n// --- Event Handlers ---\n\n/** Emit input event with selected date as payload for v-model in parent */\nfunction onSelectedDate(date: Date): void {\n    if (datepicker.value.disabled) return;\n    if (!datepicker.value.range && !datepicker.value.multiple)\n        emits(\"update:modelValue\", date);\n    else if (datepicker.value.range) handleSelectRangeDate(date);\n    else if (datepicker.value.multiple) handleSelectMultipleDates(date);\n}\n\n/*\n * If both begin and end dates are set, reset the end date and set the begin date.\n * If only begin date is selected, emit an array of the begin date and the new date.\n * If not set, only set the begin date.\n */\nfunction handleSelectRangeDate(date: Date): void {\n    if (selectedBeginDate.value && selectedEndDate.value) {\n        selectedBeginDate.value = date;\n        selectedEndDate.value = undefined;\n        emits(\"range-start\", date);\n    } else if (selectedBeginDate.value && !selectedEndDate.value) {\n        if (selectedBeginDate.value > date) {\n            selectedEndDate.value = selectedBeginDate.value;\n            selectedBeginDate.value = date;\n        } else {\n            selectedEndDate.value = date;\n        }\n        emits(\"range-end\", date);\n        emits(\"update:modelValue\", [\n            selectedBeginDate.value,\n            selectedEndDate.value,\n        ]);\n    } else {\n        selectedBeginDate.value = date;\n        emits(\"range-start\", date);\n    }\n}\n\n/*\n * If selected date already exists list of selected dates, remove it from the list\n * Otherwise, add date to list of selected dates\n */\nfunction handleSelectMultipleDates(date: Date): void {\n    if (!Array.isArray(props.modelValue)) return;\n\n    let multipleSelectedDates = props.modelValue;\n    const multipleSelect = multipleSelectedDates.filter(\n        (selectedDate) =>\n            selectedDate.getDate() === date.getDate() &&\n            selectedDate.getFullYear() === date.getFullYear() &&\n            selectedDate.getMonth() === date.getMonth(),\n    );\n    if (multipleSelect.length) {\n        multipleSelectedDates = multipleSelectedDates.filter(\n            (selectedDate) =>\n                selectedDate.getDate() !== date.getDate() ||\n                selectedDate.getFullYear() !== date.getFullYear() ||\n                selectedDate.getMonth() !== date.getMonth(),\n        );\n    } else {\n        multipleSelectedDates = [...multipleSelectedDates, date];\n    }\n    emits(\"update:modelValue\", multipleSelectedDates);\n}\n\nfunction onRangeHoverEndDate(date: Date): void {\n    hoveredEndDate.value = date;\n}\n\nfunction onChangeFocus(date: Date): void {\n    focusedDateModel.value = {\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear(),\n    };\n}\n\n// --- Computed Component Classes ---\n\nconst tableClasses = defineClasses([\"tableClass\", \"o-dpck__table\"]);\n\nconst tableHeadClasses = defineClasses([\n    \"tableHeadClass\",\n    \"o-dpck__table__head\",\n]);\n\nconst tableCellClasses = defineClasses([\n    \"tableCellClass\",\n    \"o-dpck__table__cell\",\n]);\n\nconst tableHeadCellClasses = defineClasses([\n    \"tableHeadCellClass\",\n    \"o-dpck__table__head-cell\",\n]);\n\nconst tableBodyClasses = defineClasses([\n    \"tableBodyClass\",\n    \"o-dpck__table__body\",\n]);\n</script>\n\n<template>\n    <section :class=\"tableClasses\">\n        <header :class=\"tableHeadClasses\">\n            <div\n                v-for=\"(day, index) in visibleDayNames\"\n                :key=\"index\"\n                :class=\"[...tableCellClasses, ...tableHeadCellClasses]\">\n                <span>{{ day }}</span>\n            </div>\n        </header>\n        <div :class=\"tableBodyClasses\">\n            <o-datepicker-table-row\n                v-for=\"(week, index) in weeksInThisMonth\"\n                :key=\"index\"\n                :selected-date=\"modelValue\"\n                :day=\"focusedDateModel.day\"\n                :week=\"week\"\n                :month=\"focusedDateModel.month\"\n                :events=\"eventsInThisWeek(week)\"\n                :hovered-date-range=\"hoveredDateRange\"\n                :picker-props=\"props.pickerProps\"\n                @select=\"onSelectedDate\"\n                @hover-enddate=\"onRangeHoverEndDate\"\n                @change-focus=\"onChangeFocus\"\n                @week-number-click=\"$emit('week-number-click', $event)\" />\n        </div>\n    </section>\n</template>\n","<script setup lang=\"ts\">\nimport {\n    computed,\n    ref,\n    nextTick,\n    watch,\n    type PropType,\n    type ComponentPublicInstance,\n} from \"vue\";\n\nimport { isDefined } from \"@/utils/helpers\";\nimport { defineClasses } from \"@/composables\";\n\nimport type { DatepickerProps, DatepickerEvent, FocusedDate } from \"./types\";\nimport type { ClassBind } from \"@/types\";\n\ndefineOptions({\n    name: \"ODatepickerMonth\",\n    configField: \"datepicker\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    modelValue: {\n        type: [Date, Array] as PropType<Date | Date[]>,\n        default: undefined,\n    },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    focusedDate: { type: Object as PropType<FocusedDate>, required: true },\n    pickerProps: {\n        type: Object as PropType<DatepickerProps>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    /** modelValue prop two-way binding */\n    (e: \"update:modelValue\", value: Date | Date[]): void;\n    /** focusedDate prop two-way binding */\n    (e: \"update:focusedDate\", value: FocusedDate): void;\n    (e: \"range-start\", value: Date): void;\n    (e: \"range-end\", value: Date): void;\n}>();\n\nconst selectedBeginDate = ref<Date>();\nconst selectedEndDate = ref<Date>();\nconst hoveredEndDate = ref<Date>();\n\nconst datepicker = computed<DatepickerProps>(() => props.pickerProps);\n\nconst hasEvents = computed(() => !!datepicker.value.events?.length);\n\nconst monthRefs = ref(new Map());\n\nfunction setMonthRef(date: Date, el: Element | ComponentPublicInstance): void {\n    const refKey = `month-${date.getMonth()}`;\n    if (el) monthRefs.value.set(refKey, el);\n}\n\nwatch(\n    () => props.focusedDate.month,\n    (month) => {\n        const refKey = `month-${month}`;\n        nextTick(() => {\n            // $nextTick is needed when month is changed\n            const ref = monthRefs.value.get(refKey);\n            if (ref?.length > 0 && ref[0]) {\n                ref[0].focus();\n            }\n        });\n    },\n);\n\n/** Return array of all events in the specified month */\nconst eventsInThisYear = computed(() => {\n    if (!datepicker.value.events) return [];\n\n    return datepicker.value.events\n        .map((event) => {\n            if (!event.date && event instanceof Date) event = { date: event };\n            if (!event.type) event.type = \"is-primary\";\n            return event;\n        })\n        .filter((event) => event.date.getFullYear() === props.focusedDate.year);\n});\n\nconst monthDates = computed(() => {\n    const year = props.focusedDate.year;\n    const months = [];\n    for (let i = 0; i < 12; i++) {\n        const d = new Date(year, i, 1);\n        d.setHours(0, 0, 0, 0);\n        months.push(d);\n    }\n    return months;\n});\n\nconst hoveredDateRange = computed(() => {\n    if (!datepicker.value.range || !selectedEndDate.value) return [];\n\n    return (\n        hoveredEndDate.value < selectedBeginDate.value\n            ? [hoveredEndDate.value, selectedBeginDate.value]\n            : [selectedBeginDate.value, hoveredEndDate.value]\n    ).filter(isDefined);\n});\n\nfunction eventsDateMatch(day): DatepickerEvent[] {\n    if (!eventsInThisYear.value.length) return [];\n    return eventsInThisYear.value.filter(\n        (event) => event.date.getMonth() === day.getMonth(),\n    );\n}\n\nfunction isDateSelectable(date: Date): boolean {\n    const validity = [];\n\n    if (datepicker.value.minDate)\n        validity.push(date >= datepicker.value.minDate);\n    if (datepicker.value.maxDate)\n        validity.push(date <= datepicker.value.maxDate);\n\n    validity.push(date.getFullYear() === props.focusedDate.year);\n\n    if (datepicker.value.selectableDates) {\n        if (typeof datepicker.value.selectableDates === \"function\") {\n            if (datepicker.value.selectableDates(date)) return true;\n            else validity.push(false);\n        } else {\n            for (let i = 0; i < datepicker.value.selectableDates.length; i++) {\n                const enabledDate = datepicker.value.selectableDates[i];\n                if (\n                    date.getFullYear() === enabledDate.getFullYear() &&\n                    date.getMonth() === enabledDate.getMonth()\n                )\n                    return true;\n                else validity.push(false);\n            }\n        }\n    }\n\n    if (datepicker.value.unselectableDates) {\n        if (typeof datepicker.value.unselectableDates === \"function\") {\n            validity.push(!datepicker.value.unselectableDates(date));\n        } else {\n            for (\n                let i = 0;\n                i < datepicker.value.unselectableDates.length;\n                i++\n            ) {\n                const disabledDate = datepicker.value.unselectableDates[i];\n                validity.push(\n                    date.getFullYear() !== disabledDate.getFullYear() ||\n                        date.getMonth() !== disabledDate.getMonth(),\n                );\n            }\n        }\n    }\n\n    if (datepicker.value.unselectableDaysOfWeek) {\n        for (\n            let i = 0;\n            i < datepicker.value.unselectableDaysOfWeek.length;\n            i++\n        ) {\n            const dayOfWeek = datepicker.value.unselectableDaysOfWeek[i];\n            validity.push(date.getDay() !== dayOfWeek);\n        }\n    }\n\n    return validity.indexOf(false) < 0;\n}\n\n// --- Event Handlers ---\n\nfunction onKeydown(event: KeyboardEvent, weekDay: Date): void {\n    let preventDefault = true;\n    switch (event.key) {\n        case \"Tab\": {\n            preventDefault = false;\n            break;\n        }\n        case \" \":\n        case \"Space\":\n        case \"Spacebar\":\n        case \"Enter\": {\n            selectDate(weekDay);\n            break;\n        }\n\n        case \"ArrowLeft\":\n        case \"Left\": {\n            changeFocus(weekDay, -1);\n            break;\n        }\n        case \"ArrowRight\":\n        case \"Right\": {\n            changeFocus(weekDay, 1);\n            break;\n        }\n        case \"ArrowUp\":\n        case \"Up\": {\n            changeFocus(weekDay, -7);\n            break;\n        }\n        case \"ArrowDown\":\n        case \"Down\": {\n            changeFocus(weekDay, 7);\n            break;\n        }\n    }\n    if (preventDefault) event.preventDefault();\n}\n\n/*\n * Emit update:modelValue event with selected date as payload for v-model in parent\n */\nfunction selectDate(date: Date): void {\n    if (datepicker.value.disabled) return;\n    if (\n        !datepicker.value.range &&\n        !datepicker.value.multiple &&\n        isDateSelectable(date)\n    )\n        emits(\"update:modelValue\", date);\n    else if (datepicker.value.range) handleSelectRangeDate(date);\n    else if (datepicker.value.multiple) handleSelectMultipleDates(date);\n}\n\n/*\n * If both begin and end dates are set, reset the end date and set the begin date.\n * If only begin date is selected, emit an array of the begin date and the new date.\n * If not set, only set the begin date.\n */\nfunction handleSelectRangeDate(date: Date): void {\n    if (selectedBeginDate.value && selectedEndDate.value) {\n        selectedBeginDate.value = date;\n        selectedEndDate.value = undefined;\n        emits(\"range-start\", date);\n    } else if (selectedBeginDate.value && !selectedEndDate.value) {\n        if (selectedBeginDate.value > date) {\n            selectedEndDate.value = selectedBeginDate.value;\n            selectedBeginDate.value = date;\n        } else {\n            selectedEndDate.value = date;\n        }\n        emits(\"range-end\", date);\n        emits(\"update:modelValue\", [\n            selectedBeginDate.value,\n            selectedEndDate.value,\n        ]);\n    } else {\n        selectedBeginDate.value = date;\n        emits(\"range-start\", date);\n    }\n}\n\nconst multipleSelectedDates = computed(() =>\n    datepicker.value.multiple && props.modelValue ? props.modelValue : [],\n);\n\nfunction handleSelectMultipleDates(date: Date): void {\n    if (!Array.isArray(props.modelValue)) return;\n    let multipleSelectedDates = props.modelValue;\n\n    const multipleSelect = multipleSelectedDates.filter(\n        (selectedDate) =>\n            selectedDate.getDate() === date.getDate() &&\n            selectedDate.getFullYear() === date.getFullYear() &&\n            selectedDate.getMonth() === date.getMonth(),\n    );\n    if (multipleSelect.length) {\n        multipleSelectedDates = multipleSelectedDates.filter(\n            (selectedDate) =>\n                selectedDate.getDate() !== date.getDate() ||\n                selectedDate.getFullYear() !== date.getFullYear() ||\n                selectedDate.getMonth() !== date.getMonth(),\n        );\n    } else {\n        multipleSelectedDates.push(date);\n    }\n    emits(\"update:modelValue\", multipleSelectedDates);\n}\n\nfunction changeFocus(month: Date, inc: number): void {\n    month.setMonth(month.getMonth() + inc);\n    const focused = {\n        day: month.getDate(),\n        month: month.getMonth(),\n        year: month.getFullYear(),\n    };\n    emits(\"update:focusedDate\", focused);\n}\n\nfunction onRangeHoverEndDate(day: Date): void {\n    if (datepicker.value.range) hoveredEndDate.value = day;\n}\n\n// --- Computed Component Classes ---\n\nfunction dateMatch(dateOne, dateTwo, multiple = false): boolean {\n    // if either date is null or undefined, return false\n    if (!dateOne || !dateTwo || multiple) return false;\n    if (Array.isArray(dateTwo))\n        return dateTwo.some(\n            (date) =>\n                dateOne.getFullYear() === date.getFullYear() &&\n                dateOne.getMonth() === date.getMonth(),\n        );\n    return (\n        dateOne.getFullYear() === dateTwo.getFullYear() &&\n        dateOne.getMonth() === dateTwo.getMonth()\n    );\n}\n\nfunction dateWithin(dateOne, dates, multiple = false): boolean {\n    if (!Array.isArray(dates) || multiple) return false;\n    return dateOne > dates[0] && dateOne < dates[1];\n}\n\nfunction dateMultipleSelected(dateOne, dates, multiple = false): boolean {\n    if (!Array.isArray(dates) || !multiple) return false;\n    return dates.some(\n        (date) =>\n            dateOne.getDate() === date.getDate() &&\n            dateOne.getFullYear() === date.getFullYear() &&\n            dateOne.getMonth() === date.getMonth(),\n    );\n}\n\nconst monthClasses = defineClasses([\"monthClass\", \"o-dpck__month\"]);\n\nconst monthBodyClasses = defineClasses([\n    \"monthBodyClass\",\n    \"o-dpck__month__body\",\n]);\n\nconst monthTableClasses = defineClasses([\n    \"monthTableClass\",\n    \"o-dpck__month__table\",\n]);\n\nconst monthCellClasses = defineClasses(\n    [\"monthCellClass\", \"o-dpck__month__cell\"],\n    [\"monthCellEventsClass\", \"o-dpck__month__cell--events\", null, hasEvents],\n);\n\n/**\n * Build cellClasses for cell using validations\n */\nfunction cellClasses(day: Date): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"monthCellSelectedClass\",\n            \"o-dpck__month__cell--selected\",\n            null,\n            dateMatch(day, props.modelValue, datepicker.value.multiple) ||\n                dateWithin(day, props.modelValue, datepicker.value.multiple) ||\n                dateMultipleSelected(\n                    day,\n                    multipleSelectedDates.value,\n                    datepicker.value.multiple,\n                ),\n        ],\n\n        [\n            \"monthCellFirstSelectedClass\",\n            \"o-dpck__month__cell--first-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.modelValue) && props.modelValue[0],\n                datepicker.value.multiple,\n            ),\n        ],\n        [\n            \"monthCellWithinSelectedClass\",\n            \"o-dpck__month__cell--within-selected\",\n            null,\n            dateWithin(day, props.modelValue, datepicker.value.multiple),\n        ],\n        [\n            \"monthCellLastSelectedClass\",\n            \"o-dpck__month__cell--last-selected\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(props.modelValue) && props.modelValue[1],\n                datepicker.value.multiple,\n            ),\n        ],\n        [\n            \"monthCellWithinHoveredRangeClass\",\n            \"o-dpck__month__cell--within-hovered-range\",\n            null,\n            hoveredDateRange.value &&\n                hoveredDateRange.value.length === 2 &&\n                (dateMatch(day, hoveredDateRange.value) ||\n                    dateWithin(day, hoveredDateRange.value)),\n        ],\n        [\n            \"monthCellFirstHoveredClass\",\n            \"o-dpck__month__cell--first-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(hoveredDateRange.value) &&\n                    hoveredDateRange.value[0],\n            ),\n        ],\n        [\n            \"monthCellWithinHoveredClass\",\n            \"o-dpck__month__cell--within-hovered\",\n            null,\n            dateWithin(day, hoveredDateRange.value),\n        ],\n        [\n            \"monthCellLastHoveredClass\",\n            \"o-dpck__month__cell--last-hovered\",\n            null,\n            dateMatch(\n                day,\n                Array.isArray(hoveredDateRange.value) &&\n                    hoveredDateRange.value[1],\n            ),\n        ],\n        [\n            \"monthCellTodayClass\",\n            \"o-dpck__month__cell--today\",\n            null,\n            dateMatch(day, datepicker.value.dateCreator()),\n        ],\n        [\n            \"monthCellSelectableclass\",\n            \"o-dpck__month__cell--selectable\",\n            null,\n            isDateSelectable(day) && !datepicker.value.disabled,\n        ],\n        [\n            \"monthCellUnselectableClass\",\n            \"o-dpck__month__cell--unselectable\",\n            null,\n            !isDateSelectable(day) || datepicker.value.disabled,\n        ],\n    );\n\n    return [...monthCellClasses.value, ...classes.value];\n}\n</script>\n\n<template>\n    <section :class=\"monthClasses\">\n        <div :class=\"monthBodyClasses\">\n            <div :class=\"monthTableClasses\">\n                <template v-for=\"(date, idx) in monthDates\" :key=\"idx\">\n                    <div\n                        v-if=\"!datepicker.disabled && isDateSelectable(date)\"\n                        :ref=\"(el) => setMonthRef(date, el)\"\n                        :class=\"cellClasses(date)\"\n                        role=\"button\"\n                        :disabled=\"datepicker.disabled\"\n                        :tabindex=\"\n                            focusedDate.month === date.getMonth() ? null : 0\n                        \"\n                        @click.prevent=\"selectDate(date)\"\n                        @mouseenter=\"onRangeHoverEndDate(date)\"\n                        @focus=\"onRangeHoverEndDate(date)\"\n                        @keydown.prevent=\"onKeydown($event, date)\">\n                        {{ monthNames[date.getMonth()] }}\n                        <div v-if=\"eventsDateMatch(date).length\" class=\"events\">\n                            <div\n                                v-for=\"(event, index) in eventsDateMatch(date)\"\n                                :key=\"index\"\n                                class=\"event\"\n                                :class=\"event.type\" />\n                        </div>\n                    </div>\n                    <div v-else :class=\"cellClasses(date)\">\n                        {{ monthNames[date.getMonth()] }}\n                    </div>\n                </template>\n            </div>\n        </div>\n    </section>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, ref, watch, type PropType } from \"vue\";\n\nimport OButton from \"../button/Button.vue\";\nimport OSelect from \"../select/Select.vue\";\nimport OPickerWrapper from \"../utils/PickerWrapper.vue\";\nimport ODatepickerTable from \"./DatepickerTable.vue\";\nimport ODatepickerMonth from \"./DatepickerMonth.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses, getActiveClasses, useMatchMedia } from \"@/composables\";\n\nimport { useDatepickerMixins } from \"./useDatepickerMixins\";\nimport { getMonthNames, getWeekdayNames } from \"./utils\";\n\nimport type { DatepickerEvent, FocusedDate } from \"./types\";\nimport type { ComponentClass, OrugaOptions } from \"@/types\";\n\n/**\n * An input with a simple dropdown/modal for selecting a date, uses native datepicker for mobile\n * @displayName Datepicker\n * @style _datepicker.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ODatepicker\",\n    configField: \"datepicker\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: {\n        type: [Date, Array] as PropType<Date | Date[]>,\n        default: undefined,\n    },\n    /** The active state of the dropdown, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /**\n     * Define picker mode\n     * @values date, month\n     */\n    type: {\n        type: String,\n        default: \"date\",\n        validator: (value: string) => [\"month\", \"date\"].indexOf(value) >= 0,\n    },\n    /** Set custom day names, else use names based on locale */\n    dayNames: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"datepicker.dayNames\", undefined),\n    },\n    /** Set custom month names, else use names based on locale */\n    monthNames: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"datepicker.monthNames\", undefined),\n    },\n    /**\n     * Size of the control input\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"datepicker.size\"),\n    },\n    /** Set default date to focus on */\n    focusedDate: { type: Date, default: undefined },\n    /** Events to display on picker */\n    events: { type: Array as PropType<DatepickerEvent[]>, default: undefined },\n    /** Event indicators for style class definiton */\n    indicators: { type: String, default: \"dots\" },\n    /** Min date to select */\n    minDate: { type: Date, default: undefined },\n    /** Max date to select */\n    maxDate: { type: Date, default: undefined },\n    /** Enable date range selection */\n    range: { type: Boolean, default: false },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Makes the input rounded */\n    rounded: { type: Boolean, default: false },\n    /** Display datepicker inline */\n    inline: { type: Boolean, default: false },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Same as native input readonly */\n    readonly: { type: Boolean, default: true },\n    /** Same as native, also push new item to v-model instead of replacing */\n    multiple: { type: Boolean, default: false },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Open dropdown on focus */\n    openOnFocus: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.openOnFocus\", true),\n    },\n    /** Close dropdown on click */\n    closeOnClick: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.closeOnClick\", true),\n    },\n    /** Date format locale */\n    locale: {\n        type: String,\n        default: () => getOption(\"locale\"),\n    },\n    /** Custom function to format a date into a string */\n    dateFormatter: {\n        type: Function as PropType<(date: Date | Date[]) => string>,\n        default: (\n            date: Date | Date[],\n            defaultFunction: (date: Date | Date[]) => string,\n        ) => getOption(\"datepicker.dateFormatter\", defaultFunction)(date),\n    },\n    /** Custom function to parse a string into a date */\n    dateParser: {\n        type: Function as PropType<(date: string) => Date>,\n        default: (date: string, defaultFunction: (date: string) => Date) =>\n            getOption(\"datepicker.dateParser\", defaultFunction)(date),\n    },\n    /** Date creator function, default is `new Date()` */\n    dateCreator: {\n        type: Function as PropType<() => Date>,\n        default: () => getOption(\"datepicker.dateCreator\", () => new Date())(),\n    },\n    /** Define a list of dates which can be selected */\n    selectableDates: {\n        type: [Array, Function] as PropType<Date[] | ((date: Date) => boolean)>,\n        default: () => [],\n    },\n    /** Define a list of dates which can not be selected */\n    unselectableDates: {\n        type: [Array, Function] as PropType<Date[] | ((date: Date) => boolean)>,\n        default: () => [],\n    },\n    /** Define a list of weeks which can not be selected */\n    unselectableDaysOfWeek: {\n        type: Array as PropType<number[]>,\n        default: () =>\n            getOption(\"datepicker.unselectableDaysOfWeek\", undefined),\n    },\n    /** Show nearby month days */\n    nearbyMonthDays: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.nearbyMonthDays\", true),\n    },\n    /** Define if nearby month days can be selected */\n    nearbySelectableMonthDays: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.nearbySelectableMonthDays\", false),\n    },\n    /** Show weeek numbers */\n    showWeekNumber: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.showWeekNumber\", false),\n    },\n    /** Define if weeek numbers are clickable */\n    weekNumberClickable: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.weekNumberClickable\", false),\n    },\n    /** Set the first day of a week */\n    firstDayOfWeek: {\n        type: Number,\n        default: () => getOption(\"datepicker.firstDayOfWeek\", 0),\n    },\n    /** Rules for the first week : 1 for the 1st January, 4 for the 4th January */\n    rulesForFirstWeek: { type: Number, default: () => 4 },\n    /** Define the range of years to show */\n    yearsRange: {\n        type: Array as PropType<number[]>,\n        default: () => getOption(\"datepicker.yearsRange\", [-100, 10]),\n    },\n    /** Trap dropdown on focus */\n    trapFocus: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.trapFocus\", true),\n    },\n    /** Position of the dropdown relative to the input */\n    position: { type: String, default: undefined },\n    /** Enable dropdown mobile modal */\n    mobileModal: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.mobileModal\", true),\n    },\n    /** Enable mobile native input if mobile agent */\n    mobileNative: {\n        type: Boolean,\n        default: () => getOption(\"datepicker.mobileNative\", true),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"datepicker.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"datepicker.icon\", undefined),\n    },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"datepicker.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /** Icon name for previous icon */\n    iconPrev: {\n        type: String,\n        default: () => getOption(\"datepicker.iconPrev\", \"chevron-left\"),\n    },\n    /** Icon name for next icon */\n    iconNext: {\n        type: String,\n        default: () => getOption(\"datepicker.iconNext\", \"chevron-right\"),\n    },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"datepicker.mobileBreakpoint\"),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"datepicker.teleport\", false),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    /** Accessibility next button aria label */\n    ariaNextLabel: {\n        type: String,\n        default: () => getOption(\"datepicker.ariaNextLabel\", \"Next Page\"),\n    },\n    /** Accessibility previous button aria label  */\n    ariaPreviousLabel: {\n        type: String,\n        default: () => getOption(\"datepicker.ariaNextLabel\", \"Previous Page\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker box where you choose the date */\n    boxClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker header inside the box */\n    headerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker buttons inside the box */\n    headerButtonsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker buttons inside the box when a size is choosen */\n    headerButtonsSizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the prev button inside the Datepicker box */\n    prevButtonClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the next button inside the Datepicker box */\n    nextButtonClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the month and year selects container inside the Datepicker box */\n    listsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker footer */\n    footerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker table inside the box */\n    tableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Datepicker header with days of the week inside the table */\n    tableHeadClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the cell inside the table header */\n    tableHeadCellClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table body inside the box */\n    tableBodyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table row */\n    tableRowClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell */\n    tableCellClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell when nearby month days are hidden */\n    tableCellInvisibleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of table cell when it's selected */\n    tableCellSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the first selected table cell when in range */\n    tableCellFirstSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cells within the range when the range is selected */\n    tableCellWithinSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the last selected table cell during range selection */\n    tableCellLastSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the first hovered table cell during range selection */\n    tableCellFirstHoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell when hovered during range selection */\n    tableCellWithinHoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the last table cell hovered during range selection */\n    tableCellLastHoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell of the current day */\n    tableCellTodayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell that is selectable */\n    tableCellSelectableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell that is unselectable */\n    tableCellUnselectableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell when nearby days (prev/next month) are selectable */\n    tableCellNearbyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the cell of a row when at least one event is present */\n    tableCellEventsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the events container */\n    tableEventsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the event */\n    tableEventClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the event indicator when a `variant` is specified */\n    tableEventVariantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the event indicator */\n    tableEventIndicatorsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker table inside the box when type is month */\n    monthClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table body inside the box when type is month */\n    monthBodyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table container when type is month */\n    monthTableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell when type is month */\n    monthCellClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of table cell when it's selected when type is month */\n    monthCellSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the first selected table cell when in range when type is month */\n    monthCellFirstSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cells within the range when the range is selected when type is month */\n    monthCellWithinSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the last selected table cell during range selection when type is month */\n    monthCellLastSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the first hovered table cell during range selection when type is month */\n    monthCellWithinHoveredRangeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell when hovered during range selection when type is month */\n    monthCellFirstHoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell when hovered during range selection and cell is in range when type is month */\n    monthCellWithinHoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the last table cell hovered during range selection when type is month */\n    monthCellLastHoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell of the current day when type is month */\n    monthCellTodayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell that is selectable when type is month */\n    monthCellSelectableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the table cell that is unselectable when type is month */\n    monthCellUnselectableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /**Class of the events container when type is month */\n    monthCellEventsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Datepicker when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /**\n     * Class configuration for the internal input component\n     * @ignore\n     */\n    inputClasses: {\n        type: Object,\n        default: () =>\n            getOption<OrugaOptions[\"input\"]>(\"datepicker.inputClasses\", {}),\n    },\n    /**\n     * Class configuration for the internal dropdown component\n     * @ignore\n     */\n    dropdownClasses: {\n        type: Object,\n        default: () =>\n            getOption<OrugaOptions[\"dropdown\"]>(\n                \"datepicker.dropdownClasses\",\n                {},\n            ),\n    },\n    /**\n     * Class configuration for the internal select component\n     * @ignore\n     */\n    selectClasses: {\n        type: Object,\n        default: () =>\n            getOption<OrugaOptions[\"select\"]>(\"datepicker.selectClasses\", {}),\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Date | Date[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: Date | Date[]): void;\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on range start is selected event\n     * @param value {Date} range start date\n     */\n    (e: \"range-start\", value: Date): void;\n    /**\n     * on range end is selected event\n     * @param value {Date} range end date\n     */\n    (e: \"range-end\", value: Date): void;\n    /**\n     * on month change event\n     * @param value {number} month number\n     */\n    (e: \"change-month\", value: number): void;\n    /**\n     * on year change event\n     * @param value {number} year number\n     */\n    (e: \"change-year\", value: number): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n}>();\n\nconst { defaultDateFormatter, defaultDateParser } = useDatepickerMixins(props);\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst pickerRef = ref<InstanceType<typeof OPickerWrapper>>();\n\n/** modelvalue of selected date */\nconst vmodel = defineModel<Date | Date[]>();\n\n/** Dropdown active state */\nconst isActive = defineModel<boolean>(\"active\");\n\n/** modelValue formated into string */\nconst formattedValue = computed(() =>\n    Array.isArray(vmodel.value)\n        ? (props.dateFormatter as any)([...vmodel.value], defaultDateFormatter)\n        : (props.dateFormatter as any)(vmodel.value, defaultDateFormatter),\n);\n\nconst isTypeMonth = computed(() => props.type === \"month\");\n\n/**\n * When v-model is changed:\n *   1. Update internal value.\n *   2. If it's invalid, validate again.\n */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        // updateInternalState\n        if (vmodel.value !== value) {\n            const isArray = Array.isArray(value);\n            const currentDate = isArray\n                ? !value.length\n                    ? props.dateCreator()\n                    : value[value.length - 1]\n                : !value\n                  ? props.dateCreator()\n                  : value;\n            if (\n                !isArray ||\n                (isArray &&\n                    Array.isArray(vmodel.value) &&\n                    value.length > vmodel.value.length)\n            ) {\n                focusedDateData.value = {\n                    day: currentDate.getDate(),\n                    month: currentDate.getMonth(),\n                    year: currentDate.getFullYear(),\n                };\n            }\n        }\n    },\n);\n\nwatch(\n    () => props.focusedDate,\n    (value) => {\n        if (value) {\n            focusedDateData.value = {\n                day: value.getDate(),\n                month: value.getMonth(),\n                year: value.getFullYear(),\n            };\n        }\n    },\n);\n\nconst _initialDate =\n    (Array.isArray(props.modelValue)\n        ? props.modelValue[0]\n        : props.modelValue) ||\n    props.focusedDate ||\n    props.dateCreator();\n\nif (\n    !props.modelValue &&\n    props.maxDate &&\n    props.maxDate.getFullYear() < _initialDate.getFullYear()\n) {\n    _initialDate.setFullYear(props.maxDate.getFullYear());\n}\n\nconst focusedDateData = ref<FocusedDate>({\n    day: _initialDate.getDate(),\n    month: _initialDate.getMonth(),\n    year: _initialDate.getFullYear(),\n});\n\n/*\n * Emit input event on month and/or year change\n */\nwatch(\n    () => focusedDateData.value.month,\n    (value) => emits(\"change-month\", value),\n);\nwatch(\n    () => focusedDateData.value.year,\n    (value) => emits(\"change-year\", value),\n);\n\nconst computedMonthNames = computed(() =>\n    Array.isArray(props.monthNames)\n        ? props.monthNames\n        : getMonthNames(props.locale),\n);\n\nconst listOfMonths = computed(() => {\n    let minMonth = 0;\n    let maxMonth = 12;\n    if (\n        props.minDate &&\n        focusedDateData.value.year === props.minDate.getFullYear()\n    ) {\n        minMonth = props.minDate.getMonth();\n    }\n    if (\n        props.maxDate &&\n        focusedDateData.value.year === props.maxDate.getFullYear()\n    ) {\n        maxMonth = props.maxDate.getMonth();\n    }\n    return computedMonthNames.value.map((name, index) => ({\n        name: name,\n        index: index,\n        disabled: index < minMonth || index > maxMonth,\n    }));\n});\n\nconst computedDayNames = computed(() => {\n    if (Array.isArray(props.dayNames)) return props.dayNames;\n    return getWeekdayNames(props.locale);\n});\n\n/*\n * Returns an array of years for the year dropdown. If earliest/latest\n * dates are set by props, range of years will fall within those dates.\n */\nconst listOfYears = computed(() => {\n    let latestYear = focusedDateData.value.year + props.yearsRange[1];\n    if (props.maxDate && props.maxDate.getFullYear() < latestYear) {\n        latestYear = Math.max(\n            props.maxDate.getFullYear(),\n            focusedDateData.value.year,\n        );\n    }\n\n    let earliestYear = focusedDateData.value.year + props.yearsRange[0];\n    if (props.minDate && props.minDate.getFullYear() > earliestYear) {\n        earliestYear = Math.min(\n            props.minDate.getFullYear(),\n            focusedDateData.value.year,\n        );\n    }\n\n    return Array.from(\n        { length: latestYear - earliestYear + 1 || 1 },\n        (value, index) => earliestYear + index,\n    ).reverse();\n});\n\nconst showPrev = computed(() => {\n    if (!props.minDate) return true;\n    if (isTypeMonth.value)\n        return focusedDateData.value.year > props.minDate.getFullYear();\n\n    const dateToCheck = new Date(\n        focusedDateData.value.year,\n        focusedDateData.value.month,\n    );\n    const date = new Date(\n        props.minDate.getFullYear(),\n        props.minDate.getMonth(),\n    );\n    return dateToCheck > date;\n});\n\n/**\n * Either decrement month by 1 if not January or decrement year by 1\n * and set month to 11 (December) or decrement year when 'month'\n */\nfunction prev(): void {\n    if (props.disabled) return;\n\n    if (isTypeMonth.value) {\n        focusedDateData.value.year -= 1;\n    } else {\n        if (focusedDateData.value.month > 0) {\n            focusedDateData.value.month -= 1;\n        } else {\n            focusedDateData.value.month = 11;\n            focusedDateData.value.year -= 1;\n        }\n    }\n}\n\nconst showNext = computed(() => {\n    if (!props.maxDate) return true;\n    if (isTypeMonth.value)\n        return focusedDateData.value.year < props.maxDate.getFullYear();\n\n    const dateToCheck = new Date(\n        focusedDateData.value.year,\n        focusedDateData.value.month,\n    );\n    const date = new Date(\n        props.maxDate.getFullYear(),\n        props.maxDate.getMonth(),\n    );\n    return dateToCheck < date;\n});\n\n/**\n * Either increment month by 1 if not December or increment year by 1\n * and set month to 0 (January) or increment year when 'month'\n */\nfunction next(): void {\n    if (props.disabled) return;\n    if (isTypeMonth.value) {\n        focusedDateData.value.year += 1;\n    } else {\n        if (focusedDateData.value.month < 11) {\n            focusedDateData.value.month += 1;\n        } else {\n            focusedDateData.value.month = 0;\n            focusedDateData.value.year += 1;\n        }\n    }\n}\n\nfunction formatNative(value: Date | Date[]): string {\n    if (Array.isArray(value)) value = value[0];\n\n    if (!value) return \"\";\n    const date = new Date(value);\n\n    if (isTypeMonth.value) {\n        // Format date into string 'YYYY-MM'\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        return year + \"-\" + ((month < 10 ? \"0\" : \"\") + month);\n    } else {\n        // Format date into string 'YYYY-MM-DD'\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return (\n            year +\n            \"-\" +\n            ((month < 10 ? \"0\" : \"\") + month) +\n            \"-\" +\n            ((day < 10 ? \"0\" : \"\") + day)\n        );\n    }\n}\n\n// --- Event Handler ---\n\n/** Parse string into date */\nfunction onChange(value: string): void {\n    const date = (props.dateParser as any)(value, defaultDateParser);\n\n    if (\n        date &&\n        Array.isArray(date) &&\n        date.length === 2 &&\n        !isNaN(date[0]) &&\n        !isNaN(date[1])\n    ) {\n        vmodel.value = date;\n    } else {\n        vmodel.value = null;\n    }\n}\n\n/** Parse date from string */\nfunction onChangeNativePicker(value: string): void {\n    const s = value ? value.split(\"-\") : [];\n    if (s.length === 3) {\n        const year = parseInt(s[0], 10);\n        const month = parseInt(s[1]) - 1;\n        const day = parseInt(s[2]);\n        vmodel.value = new Date(year, month, day);\n    } else {\n        vmodel.value = null;\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-dpck\"],\n    [\n        \"sizeClass\",\n        \"o-dpck--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\"mobileClass\", \"o-dpck--mobile\", null, isMobile],\n    [\"expandedClass\", \"o-dpck--expanded\", null, computed(() => props.expanded)],\n);\n\nconst headerClasses = defineClasses([\"headerClass\", \"o-dpck__header\"]);\n\nconst headerButtonsClasses = defineClasses(\n    [\"headerButtonsClass\", \"o-dpck__header__buttons\"],\n    [\n        \"headerButtonsSizeClass\",\n        \"o-dpck__header__buttons--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n);\n\nconst prevButtonClasses = defineClasses([\n    \"prevButtonClass\",\n    \"o-dpck__header__previous\",\n]);\n\nconst nextButtonClasses = defineClasses([\n    \"nextButtonClass\",\n    \"o-dpck__header__next\",\n]);\n\nconst listsClasses = defineClasses([\"listsClass\", \"o-dpck__header__list\"]);\n\nconst footerClasses = defineClasses([\"footerClass\", \"o-dpck__footer\"]);\n\nconst dropdownClass = defineClasses([\n    \"dropdownClasses.rootClass\",\n    \"o-tpck__dropdown\",\n]);\n\nconst boxClasses = defineClasses([\"boxClass\", \"o-dpck__box\"]);\nconst boxClassBind = computed(() => getActiveClasses(boxClasses.value));\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: () => pickerRef.value?.focus() });\n</script>\n\n<template>\n    <OPickerWrapper\n        ref=\"pickerRef\"\n        v-model:active=\"isActive\"\n        data-oruga=\"datepicker\"\n        :value=\"vmodel\"\n        :picker-props=\"props\"\n        :formatted-value=\"formattedValue\"\n        :native-type=\"!isTypeMonth ? 'date' : 'month'\"\n        :native-value=\"formatNative(vmodel)\"\n        :native-max=\"formatNative(maxDate)\"\n        :native-min=\"formatNative(minDate)\"\n        :stay-open=\"multiple\"\n        :dropdown-classes=\"dropdownClass\"\n        :root-classes=\"rootClasses\"\n        :box-class=\"boxClassBind\"\n        @change=\"onChange\"\n        @native-change=\"onChangeNativePicker\"\n        @focus=\"$emit('focus', $event)\"\n        @blur=\"$emit('blur', $event)\"\n        @invalid=\"$emit('invalid', $event)\"\n        @icon-click=\"$emit('icon-click', $event)\"\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\n        <template v-if=\"$slots.trigger\" #trigger>\n            <!--\n                @slot Override the trigger\n            -->\n            <slot name=\"trigger\" />\n        </template>\n        <header :class=\"headerClasses\">\n            <!--\n                @slot Override the header\n            -->\n            <slot name=\"header\">\n                <div :class=\"headerButtonsClasses\">\n                    <OButton\n                        v-if=\"!disabled\"\n                        :class=\"prevButtonClasses\"\n                        :disabled=\"!showPrev\"\n                        :aria-label=\"ariaPreviousLabel\"\n                        :icon-pack=\"iconPack\"\n                        :icon-left=\"iconPrev\"\n                        outlined\n                        @click.prevent=\"prev\"\n                        @keydown.enter.prevent=\"prev\"\n                        @keydown.space.prevent=\"prev\" />\n\n                    <OButton\n                        v-if=\"!disabled\"\n                        :class=\"nextButtonClasses\"\n                        :disabled=\"!showNext\"\n                        :aria-label=\"ariaNextLabel\"\n                        :icon-pack=\"iconPack\"\n                        :icon-left=\"iconNext\"\n                        outlined\n                        @click.prevent=\"next\"\n                        @keydown.enter.prevent=\"next\"\n                        @keydown.space.prevent=\"next\" />\n\n                    <div :class=\"listsClasses\">\n                        <o-select\n                            v-if=\"!isTypeMonth\"\n                            v-model=\"focusedDateData.month\"\n                            :disabled=\"disabled\"\n                            :size=\"size\"\n                            v-bind=\"selectClasses\">\n                            <option\n                                v-for=\"month in listOfMonths\"\n                                :key=\"month.name\"\n                                :value=\"month.index\"\n                                :disabled=\"month.disabled\">\n                                {{ month.name }}\n                            </option>\n                        </o-select>\n                        <o-select\n                            v-model=\"focusedDateData.year\"\n                            :disabled=\"disabled\"\n                            :size=\"size\"\n                            v-bind=\"selectClasses\">\n                            <option\n                                v-for=\"year in listOfYears\"\n                                :key=\"year\"\n                                :value=\"year\">\n                                {{ year }}\n                            </option>\n                        </o-select>\n                    </div>\n                </div>\n            </slot>\n        </header>\n        <!--\n            @slot Override the body\n        -->\n        <slot name=\"body\">\n            <o-datepicker-month\n                v-if=\"isTypeMonth\"\n                v-model=\"vmodel\"\n                v-model:focused-date=\"focusedDateData\"\n                :month-names=\"computedMonthNames\"\n                :picker-props=\"props\"\n                @range-start=\"(date) => $emit('range-start', date)\"\n                @range-end=\"(date) => $emit('range-end', date)\" />\n            <o-datepicker-table\n                v-else\n                v-model=\"vmodel\"\n                v-model:focused-date=\"focusedDateData\"\n                :day-names=\"computedDayNames\"\n                :month-names=\"computedMonthNames\"\n                :picker-props=\"props\"\n                @range-start=\"(date) => $emit('range-start', date)\"\n                @range-end=\"(date) => $emit('range-end', date)\" />\n        </slot>\n        <footer v-if=\"$slots.footer\" :class=\"footerClasses\">\n            <!--\n                @slot Define an additional footer\n            -->\n            <slot name=\"footer\" />\n        </footer>\n    </OPickerWrapper>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Datepicker from \"./Datepicker.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export datepicker specific types */\nexport type { DatepickerEvent, FocusedDate } from \"./types\";\n\n/** export datepicker plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Datepicker);\n    },\n} as Plugin;\n\n/** export datepicker components */\nexport { Datepicker as ODatepicker };\n","import { computed } from \"vue\";\nimport { matchWithGroups } from \"../datepicker/utils\";\nimport type { TimepickerProps } from \"./types\";\n\nconst AM = \"AM\";\nconst PM = \"PM\";\nconst HOUR_FORMAT_24 = \"24\";\nconst HOUR_FORMAT_12 = \"12\";\n\nexport function useTimepickerMixins(props: TimepickerProps) {\n    const localeOptions = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                hour: \"numeric\",\n                minute: \"numeric\",\n                second: props.enableSeconds ? \"numeric\" : undefined,\n            }).resolvedOptions() as Intl.DateTimeFormatOptions,\n    );\n\n    const dtf = computed(\n        () =>\n            new Intl.DateTimeFormat(props.locale, {\n                hour: localeOptions.value.hour || \"numeric\",\n                minute: localeOptions.value.minute || \"numeric\",\n                second: props.enableSeconds\n                    ? localeOptions.value.second || \"numeric\"\n                    : undefined,\n                hourCycle: !isHourFormat24.value ? \"h12\" : \"h23\",\n            }),\n    );\n\n    const computedHourFormat = computed(\n        () =>\n            props.hourFormat ||\n            (localeOptions.value.hour12 ? HOUR_FORMAT_12 : HOUR_FORMAT_24),\n    );\n\n    const isHourFormat24 = computed(\n        () => computedHourFormat.value === HOUR_FORMAT_24,\n    );\n\n    const sampleTime = computed(() => {\n        const d = props.timeCreator();\n        d.setHours(10);\n        d.setSeconds(0);\n        d.setMinutes(0);\n        d.setMilliseconds(0);\n        return d;\n    });\n\n    const amString = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = sampleTime.value;\n            d.setHours(10);\n            const dayPeriod = dtf.value\n                .formatToParts(d)\n                .find((part) => part.type === \"dayPeriod\");\n            if (dayPeriod) return dayPeriod.value;\n        }\n        return AM;\n    });\n\n    const pmString = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = sampleTime.value;\n            d.setHours(20);\n            const dayPeriod = dtf.value\n                .formatToParts(d)\n                .find((part) => part.type === \"dayPeriod\");\n            if (dayPeriod) {\n                return dayPeriod.value;\n            }\n        }\n        return PM;\n    });\n\n    const meridiens = computed(() => [amString.value, pmString.value]);\n\n    const hourLiteral = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = sampleTime.value;\n            const parts = dtf.value.formatToParts(d);\n            const literal = parts.find(\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"hour\",\n            );\n            if (literal) return literal.value;\n        }\n        return \":\";\n    });\n\n    const minuteLiteral = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = sampleTime.value;\n            const parts = dtf.value.formatToParts(d);\n            const literal = parts.find(\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"minute\",\n            );\n            if (literal) return literal.value;\n        }\n        return \":\";\n    });\n\n    const secondLiteral = computed(() => {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const d = sampleTime.value;\n            const parts = dtf.value.formatToParts(d);\n            const literal = parts.find(\n                (part, idx) => idx > 0 && parts[idx - 1].type === \"second\",\n            );\n            if (literal) return literal.value;\n        }\n        return undefined;\n    });\n\n    function defaultTimeFormatter(time: Date): string {\n        return dtf.value.format(time);\n    }\n\n    function defaultTimeParser(time: string): Date {\n        if (!time) return null;\n\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const formatRegex = dtf.value\n                .formatToParts(sampleTime.value)\n                .map((part) => {\n                    if (part.type === \"literal\") {\n                        return part.value.replace(/ /g, \"\\\\s?\");\n                    } else if (part.type === \"dayPeriod\") {\n                        return `((?!=<${part.type}>)(${amString.value}|${\n                            pmString.value\n                        }|${AM}|${PM}|${AM.toLowerCase()}|${PM.toLowerCase()})?)`;\n                    }\n                    return `((?!=<${part.type}>)\\\\d+)`;\n                })\n                .join(\"\");\n            const timeGroups = matchWithGroups(formatRegex, time);\n\n            // We do a simple validation for the group.\n            // If it is not valid, it will fallback to Date.parse below\n            timeGroups.hour = timeGroups.hour\n                ? parseInt(timeGroups.hour, 10)\n                : null;\n            timeGroups.minute = timeGroups.minute\n                ? parseInt(timeGroups.minute, 10)\n                : null;\n            timeGroups.second = timeGroups.second\n                ? parseInt(timeGroups.second, 10)\n                : null;\n            if (\n                timeGroups.hour &&\n                timeGroups.hour >= 0 &&\n                timeGroups.hour < 24 &&\n                timeGroups.minute &&\n                timeGroups.minute >= 0 &&\n                timeGroups.minute < 59\n            ) {\n                if (\n                    timeGroups.dayPeriod &&\n                    (timeGroups.dayPeriod.toLowerCase() ===\n                        pmString.value.toLowerCase() ||\n                        timeGroups.dayPeriod.toLowerCase() ===\n                            PM.toLowerCase()) &&\n                    timeGroups.hour < 12\n                ) {\n                    timeGroups.hour += 12;\n                }\n                const date = sampleTime.value;\n                date.setHours(timeGroups.hour);\n                date.setMinutes(timeGroups.minute);\n                date.setSeconds(timeGroups.second || 0);\n                return date;\n            }\n        }\n\n        // Fallback if formatToParts is not supported or if we were not able to parse a valid date\n        let am = false;\n        if (props.hourFormat === HOUR_FORMAT_12) {\n            const dateString12 = time.split(\" \");\n            time = dateString12[0];\n            am = dateString12[1] === amString.value || dateString12[1] === AM;\n        }\n        const timeSplit = time.split(\":\");\n        let hours = parseInt(timeSplit[0], 10);\n        const minutes = parseInt(timeSplit[1], 10);\n        const seconds = props.enableSeconds ? parseInt(timeSplit[2], 10) : 0;\n        if (\n            isNaN(hours) ||\n            hours < 0 ||\n            hours > 23 ||\n            (props.hourFormat === HOUR_FORMAT_12 &&\n                (hours < 1 || hours > 12)) ||\n            isNaN(minutes) ||\n            minutes < 0 ||\n            minutes > 59\n        ) {\n            return null;\n        }\n        const date = sampleTime.value;\n        date.setSeconds(seconds);\n        date.setMinutes(minutes);\n        if (props.hourFormat === HOUR_FORMAT_12) {\n            if (am && hours === 12) {\n                hours = 0;\n            } else if (!am && hours !== 12) {\n                hours += 12;\n            }\n        }\n        date.setHours(hours);\n        return new Date(date.getTime());\n    }\n\n    return {\n        defaultTimeFormatter,\n        defaultTimeParser,\n        pmString,\n        amString,\n        meridiens,\n        isHourFormat24,\n        hourLiteral,\n        minuteLiteral,\n        secondLiteral,\n    };\n}\n","<script setup lang=\"ts\">\nimport { computed, ref, watch, type PropType } from \"vue\";\n\nimport OSelect from \"../select/Select.vue\";\nimport OPickerWrapper from \"../utils/PickerWrapper.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    useVModelBinding,\n    useMatchMedia,\n    usePropBinding,\n    getActiveClasses,\n} from \"@/composables\";\n\nimport { useTimepickerMixins } from \"./useTimepickerMixins\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * An input with a simple dropdown/modal for selecting a time, uses native timepicker for mobile\n * @displayName Timepicker\n * @style _timepicker.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTimepicker\",\n    configField: \"timepicker\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: Date as PropType<Date>, default: undefined },\n    /** The active state of the dropdown */\n    active: { type: Boolean, default: false },\n    /** Min time to select */\n    minTime: { type: Date as PropType<Date>, default: undefined },\n    /** Max time to select */\n    maxTime: { type: Date as PropType<Date>, default: undefined },\n    /** Display datepicker inline */\n    inline: { type: Boolean, default: false },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Makes the input rounded */\n    rounded: { type: Boolean, default: false },\n    /** Same as native input readonly */\n    readonly: { type: Boolean, default: false },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /**\n     * Size of the button\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"timepicker.size\"),\n    },\n    hourFormat: { type: String, default: undefined },\n    incrementHours: { type: Number, default: 1 },\n    incrementMinutes: { type: Number, default: 1 },\n    incrementSeconds: { type: Number, default: 1 },\n    /** Open dropdown on focus */\n    openOnFocus: {\n        type: Boolean,\n        default: () => getOption(\"timepicker.openOnFocus\", true),\n    },\n    /** Close dropdown on click */\n    closeOnClick: {\n        type: Boolean,\n        default: () => getOption(\"timepicker.closeOnClick\", true),\n    },\n    enableSeconds: { type: Boolean, default: false },\n    defaultMinutes: { type: Number, default: undefined },\n    defaultSeconds: { type: Number, default: undefined },\n    /** Date format locale */\n    locale: {\n        type: String,\n        default: () => getOption(\"locale\"),\n    },\n    /** Custom function to format a date into a string */\n    timeFormatter: {\n        type: Function as PropType<(date: Date) => string>,\n        default: (\n            date: Date | Date[],\n            defaultFunction: (date: Date | Date[]) => string,\n        ) => getOption(\"timepicker.timeFormatter\", defaultFunction)(date),\n    },\n    /** Custom function to parse a string into a date */\n    timeParser: {\n        type: Function as PropType<(date: string) => Date>,\n        default: (date: string, defaultFunction: (date: string) => Date) =>\n            getOption(\"timepicker.timeParser\", defaultFunction)(date),\n    },\n    /** time creator function, default is `new Date()` */\n    timeCreator: {\n        type: Function as PropType<() => Date>,\n        default: () => getOption(\"timepicker.timeCreator\", () => new Date())(),\n    },\n    /** Define a list of times which can not be selected */\n    unselectableTimes: {\n        type: [Array, Function] as PropType<Date[] | ((date: Date) => boolean)>,\n        default: () => [],\n    },\n    /** Reset the time inputs when meridian changes */\n    resetOnMeridianChange: {\n        type: Boolean,\n        default: false,\n    },\n    /** Dropdown trapFocus */\n    trapFocus: {\n        type: Boolean,\n        default: () => getOption(\"timepicker.trapFocus\", true),\n    },\n    /** Dropdown position */\n    position: { type: String, default: undefined },\n    /** Enable dropdown mobile modal */\n    mobileModal: {\n        type: Boolean,\n        default: () => getOption(\"timepicker.mobileModal\", true),\n    },\n    /** Enable mobile native input if mobile agent */\n    mobileNative: {\n        type: Boolean,\n        default: () => getOption(\"timepicker.mobileNative\", true),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"timepicker.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"timepicker.icon\", undefined),\n    },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"timepicker.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"timepicker.mobileBreakpoint\"),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"timepicker.teleport\", false),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Timepicker component size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Timepicker component box where you choose the date */\n    boxClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Timepicker separator */\n    separatorClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Timepicker footer */\n    footerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /**\n     * Class configuration for the internal input component\n     * @ignore\n     */\n    inputClasses: {\n        type: Object,\n        default: () => getOption(\"timepicker.inputClasses\", {}),\n    },\n    /**\n     * Class configuration for the internal dropdown component\n     * @ignore\n     */\n    dropdownClasses: {\n        type: Object,\n        default: () => getOption(\"timepicker.dropdownClasses\", {}),\n    },\n    /**\n     * Class configuration for the internal select component\n     * @ignore\n     */\n    selectClasses: {\n        type: Object,\n        default: () => getOption(\"timepicker.selectClasses\", {}),\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Date} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: Date): void;\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n}>();\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst {\n    defaultTimeFormatter,\n    defaultTimeParser,\n    pmString,\n    amString,\n    meridiens,\n    isHourFormat24,\n    hourLiteral,\n    minuteLiteral,\n    secondLiteral,\n} = useTimepickerMixins(props);\n\nconst pickerRef = ref<InstanceType<typeof OPickerWrapper>>();\n\nconst vmodel = useVModelBinding<Date>(props, emits);\n\n/** Dropdown active state */\nconst isActive = usePropBinding<boolean>(\"active\", props, emits);\n\nconst hoursSelected = ref();\nconst minutesSelected = ref();\nconst secondsSelected = ref();\nconst meridienSelected = ref();\n\n/**\n * When v-model is changed:\n *   1. Update internal value.\n *   2. If it's invalid, validate again.\n */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        if (value) {\n            hoursSelected.value = value.getHours();\n            minutesSelected.value = value.getMinutes();\n            secondsSelected.value = value.getSeconds();\n            meridienSelected.value =\n                value.getHours() >= 12 ? pmString.value : amString.value;\n        } else {\n            hoursSelected.value = null;\n            minutesSelected.value = null;\n            secondsSelected.value = null;\n            meridienSelected.value = amString.value;\n        }\n    },\n    { immediate: true },\n);\n\n/** Format date into string */\nconst formattedValue = computed(() =>\n    (props.timeFormatter as any)(props.modelValue, defaultTimeFormatter),\n);\n\nconst nativeStep = computed(() => (props.enableSeconds ? \"1\" : null));\n\nwatch(\n    () => props.hourFormat,\n    () => {\n        if (hoursSelected.value !== null) {\n            meridienSelected.value =\n                hoursSelected.value >= 12 ? pmString.value : amString.value;\n        }\n    },\n);\n\nwatch(\n    () => props.locale,\n    (value) => {\n        // see updateInternalState default\n        if (!value) meridienSelected.value = amString.value;\n    },\n);\n\nfunction formatNumber(value: number, prependZero: boolean): string {\n    return isHourFormat24.value || prependZero ? pad(value) : String(value);\n}\n\nfunction pad(value: number): string {\n    return (value < 10 ? \"0\" : \"\") + value;\n}\n\nconst hours = computed(() => {\n    if (!props.incrementHours || props.incrementHours < 1)\n        throw new Error(\"Hour increment cannot be null or less than 1.\");\n    const hours = [];\n    const numberOfHours = isHourFormat24.value ? 24 : 12;\n    for (let i = 0; i < numberOfHours; i += props.incrementHours) {\n        let value = i;\n        let label = value;\n        if (!isHourFormat24.value) {\n            value = i + 1;\n            label = value;\n            if (meridienSelected.value === amString.value) {\n                if (value === 12) {\n                    value = 0;\n                }\n            } else if (meridienSelected.value === pmString.value) {\n                if (value !== 12) {\n                    value += 12;\n                }\n            }\n        }\n        hours.push({\n            label: formatNumber(label, false),\n            value: value,\n        });\n    }\n    return hours;\n});\n\nconst minutes = computed(() => {\n    if (!props.incrementMinutes || props.incrementMinutes < 1)\n        throw new Error(\"Minute increment cannot be null or less than 1.\");\n    const minutes = [];\n    for (let i = 0; i < 60; i += props.incrementMinutes) {\n        minutes.push({\n            label: formatNumber(i, true),\n            value: i,\n        });\n    }\n    return minutes;\n});\n\nconst seconds = computed(() => {\n    if (!props.incrementSeconds || props.incrementSeconds < 1)\n        throw new Error(\"Second increment cannot be null or less than 1.\");\n    const seconds = [];\n    for (let i = 0; i < 60; i += props.incrementSeconds) {\n        seconds.push({\n            label: formatNumber(i, true),\n            value: i,\n        });\n    }\n    return seconds;\n});\n\nfunction isHourDisabled(hour: number): boolean {\n    let disabled = false;\n    if (props.minTime) {\n        const minHours = props.minTime.getHours();\n        const noMinutesAvailable = minutes.value.every((minute) => {\n            return isMinuteDisabledForHour(hour, minute.value);\n        });\n        disabled = hour < minHours || noMinutesAvailable;\n    }\n    if (props.maxTime) {\n        if (!disabled) {\n            const maxHours = props.maxTime.getHours();\n            disabled = hour > maxHours;\n        }\n    }\n    if (props.unselectableTimes) {\n        if (!disabled) {\n            if (typeof props.unselectableTimes === \"function\") {\n                const date = new Date();\n                date.setHours(hour);\n                date.setMinutes(minutesSelected.value);\n                date.setSeconds(secondsSelected.value);\n                return props.unselectableTimes(date);\n            } else {\n                const unselectable = props.unselectableTimes.filter((time) => {\n                    if (props.enableSeconds && secondsSelected.value !== null) {\n                        return (\n                            time.getHours() === hour &&\n                            time.getMinutes() === minutesSelected.value &&\n                            time.getSeconds() === secondsSelected.value\n                        );\n                    } else if (minutesSelected.value !== null) {\n                        return (\n                            time.getHours() === hour &&\n                            time.getMinutes() === minutesSelected.value\n                        );\n                    }\n                    return false;\n                });\n                if (unselectable.length > 0) {\n                    disabled = true;\n                } else {\n                    disabled = minutes.value.every((minute) => {\n                        return (\n                            (props.unselectableTimes as Date[]).filter(\n                                (time) => {\n                                    return (\n                                        time.getHours() === hour &&\n                                        time.getMinutes() === minute.value\n                                    );\n                                },\n                            ).length > 0\n                        );\n                    });\n                }\n            }\n        }\n    }\n    return disabled;\n}\n\nfunction isMinuteDisabledForHour(hour: number, minute: number): boolean {\n    let disabled = false;\n    if (props.minTime) {\n        const minHours = props.minTime.getHours();\n        const minMinutes = props.minTime.getMinutes();\n        disabled = hour === minHours && minute < minMinutes;\n    }\n    if (props.maxTime) {\n        if (!disabled) {\n            const maxHours = props.maxTime.getHours();\n            const maxMinutes = props.maxTime.getMinutes();\n            disabled = hour === maxHours && minute > maxMinutes;\n        }\n    }\n    return disabled;\n}\n\nfunction isMinuteDisabled(minute: number): boolean {\n    if (hoursSelected.value === null) return false;\n\n    let disabled = false;\n    if (isHourDisabled(hoursSelected.value)) {\n        disabled = true;\n    } else {\n        disabled = isMinuteDisabledForHour(hoursSelected.value, minute);\n    }\n    if (props.unselectableTimes) {\n        if (!disabled) {\n            if (typeof props.unselectableTimes === \"function\") {\n                const date = new Date();\n                date.setHours(hoursSelected.value);\n                date.setMinutes(minute);\n                date.setSeconds(secondsSelected.value);\n                return props.unselectableTimes(date);\n            } else {\n                const unselectable = props.unselectableTimes.filter((time) => {\n                    if (props.enableSeconds && secondsSelected.value !== null) {\n                        return (\n                            time.getHours() === hoursSelected.value &&\n                            time.getMinutes() === minute &&\n                            time.getSeconds() === secondsSelected.value\n                        );\n                    } else {\n                        return (\n                            time.getHours() === hoursSelected.value &&\n                            time.getMinutes() === minute\n                        );\n                    }\n                });\n                disabled = unselectable.length > 0;\n            }\n        }\n    }\n}\n\nfunction isSecondDisabled(second: number): boolean {\n    if (minutesSelected.value == null) return false;\n    let disabled = false;\n\n    if (isMinuteDisabled(minutesSelected.value)) {\n        disabled = true;\n    } else {\n        if (props.minTime) {\n            const minHours = props.minTime.getHours();\n            const minMinutes = props.minTime.getMinutes();\n            const minSeconds = props.minTime.getSeconds();\n            disabled =\n                hoursSelected.value === minHours &&\n                minutesSelected.value === minMinutes &&\n                second < minSeconds;\n        }\n        if (props.maxTime) {\n            if (!disabled) {\n                const maxHours = props.maxTime.getHours();\n                const maxMinutes = props.maxTime.getMinutes();\n                const maxSeconds = props.maxTime.getSeconds();\n                disabled =\n                    hoursSelected.value === maxHours &&\n                    minutesSelected.value === maxMinutes &&\n                    second > maxSeconds;\n            }\n        }\n    }\n    if (props.unselectableTimes) {\n        if (!disabled) {\n            if (typeof props.unselectableTimes === \"function\") {\n                const date = new Date();\n                date.setHours(hoursSelected.value);\n                date.setMinutes(minutesSelected.value);\n                date.setSeconds(second);\n                return props.unselectableTimes(date);\n            } else {\n                const unselectable = props.unselectableTimes.filter((time) => {\n                    return (\n                        time.getHours() === hoursSelected.value &&\n                        time.getMinutes() === minutesSelected.value &&\n                        time.getSeconds() === second\n                    );\n                });\n                disabled = unselectable.length > 0;\n            }\n        }\n    }\n}\n\nfunction isMeridienDisabled(meridienString: string): boolean {\n    const offset = meridienString == \"AM\" ? 0 : 12;\n    for (let i = 0; i < 12; i++) {\n        if (!isHourDisabled(i + offset)) return false;\n    }\n    return true;\n}\n\nfunction updateDateSelected(\n    hours: number,\n    minutes: number,\n    seconds: number,\n    meridiens,\n): void {\n    if (\n        hours != null &&\n        minutes != null &&\n        ((!isHourFormat24.value && meridiens !== null) || isHourFormat24.value)\n    ) {\n        let time: Date = null;\n        if (vmodel.value) {\n            time = new Date(vmodel.value);\n        } else {\n            time = props.timeCreator();\n            time.setMilliseconds(0);\n        }\n        time.setHours(hours);\n        time.setMinutes(minutes);\n        time.setSeconds(seconds);\n        if (!isNaN(time.getTime())) {\n            vmodel.value = new Date(time.getTime());\n        }\n    }\n}\n\n/** Format date into string 'HH-MM-SS'*/\nfunction formatNative(value: Date): string {\n    const date = new Date(value);\n    if (value && !isNaN(date.getTime())) {\n        const hours = date.getHours();\n        const minutes = date.getMinutes();\n        const seconds = date.getSeconds();\n        return (\n            formatNumber(hours, true) +\n            \":\" +\n            formatNumber(minutes, true) +\n            \":\" +\n            formatNumber(seconds, true)\n        );\n    }\n    return \"\";\n}\n\n// --- Event Handler ---\n\nfunction onMeridienChange(value: string): void {\n    if (hoursSelected.value !== null && props.resetOnMeridianChange) {\n        hoursSelected.value = null;\n        minutesSelected.value = null;\n        secondsSelected.value = null;\n        vmodel.value = null;\n    } else if (hoursSelected.value !== null) {\n        if (value === pmString.value) hoursSelected.value += 12;\n        else if (value === amString.value) hoursSelected.value -= 12;\n    }\n    updateDateSelected(\n        hoursSelected.value,\n        minutesSelected.value,\n        props.enableSeconds ? secondsSelected.value : 0,\n        value,\n    );\n}\n\nfunction onHoursChange(value: string): void {\n    if (!minutesSelected.value && typeof props.defaultMinutes !== \"undefined\")\n        minutesSelected.value = props.defaultMinutes;\n    if (!secondsSelected.value && typeof props.defaultSeconds !== \"undefined\")\n        secondsSelected.value = props.defaultSeconds;\n\n    updateDateSelected(\n        parseInt(value, 10),\n        minutesSelected.value,\n        props.enableSeconds ? secondsSelected.value : 0,\n        meridienSelected.value,\n    );\n}\n\nfunction onMinutesChange(value: string): void {\n    if (!secondsSelected.value && props.defaultSeconds)\n        secondsSelected.value = props.defaultSeconds;\n\n    updateDateSelected(\n        hoursSelected.value,\n        parseInt(value, 10),\n        props.enableSeconds ? secondsSelected.value : 0,\n        meridienSelected.value,\n    );\n}\n\nfunction onSecondsChange(value: string): void {\n    updateDateSelected(\n        hoursSelected.value,\n        minutesSelected.value,\n        parseInt(value, 10),\n        meridienSelected.value,\n    );\n}\n\n/** Parse string into date */\nfunction onChange(value: string): void {\n    const date = (props.timeParser as any)(value, defaultTimeParser);\n    vmodel.value = date ? date : null;\n}\n\n/** Parse time from string */\nfunction onChangeNativePicker(date: string): void {\n    if (date) {\n        let time = null;\n        if (vmodel.value) {\n            time = new Date(vmodel.value);\n        } else {\n            time = props.timeCreator();\n            time.setMilliseconds(0);\n        }\n        const t = date.split(\":\");\n        time.setHours(parseInt(t[0], 10));\n        time.setMinutes(parseInt(t[1], 10));\n        time.setSeconds(t[2] ? parseInt(t[2], 10) : 0);\n        vmodel.value = new Date(time.getTime());\n    } else {\n        vmodel.value = null;\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst selectSelectClasses = defineClasses([\n    \"selectClasses.selectClass\",\n    \"o-tpck__select\",\n]);\n\nconst selectPlaceholderClasses = defineClasses([\n    \"selectClasses.placeholderClass\",\n    \"o-tpck__select-placeholder\",\n]);\n\nconst selectBind = computed(() => ({\n    \"select-class\": getActiveClasses(selectSelectClasses.value),\n    \"placeholder-class\": getActiveClasses(selectPlaceholderClasses.value),\n    ...props.selectClasses,\n}));\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-tpck\"],\n    [\n        \"sizeClass\",\n        \"o-tpck--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\"mobileClass\", \"o-tpck--mobile\", null, isMobile],\n);\n\nconst separatorClasses = defineClasses([\"separatorClass\", \"o-tpck__separtor\"]);\n\nconst footerClasses = defineClasses([\"footerClass\", \"o-tpck__footer\"]);\n\nconst dropdownClass = defineClasses([\n    \"dropdownClasses.rootClass\",\n    \"o-tpck__dropdown\",\n]);\n\nconst boxClasses = defineClasses([\"boxClass\", \"o-tpck__box\"]);\nconst boxClassBind = computed(() => getActiveClasses(boxClasses.value));\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: () => pickerRef.value?.focus() });\n</script>\n\n<template>\n    <OPickerWrapper\n        ref=\"pickerRef\"\n        v-model:active=\"isActive\"\n        data-oruga=\"timepicker\"\n        :value=\"vmodel\"\n        :picker-props=\"props\"\n        :formatted-value=\"formattedValue\"\n        native-type=\"time\"\n        :native-value=\"formatNative(vmodel)\"\n        :native-max=\"formatNative(maxTime)\"\n        :native-min=\"formatNative(minTime)\"\n        :native-step=\"nativeStep\"\n        :dropdown-classes=\"dropdownClass\"\n        :root-classes=\"rootClasses\"\n        :box-class=\"boxClassBind\"\n        @change=\"onChange\"\n        @native-change=\"onChangeNativePicker\"\n        @focus=\"$emit('focus', $event)\"\n        @blur=\"$emit('blur', $event)\"\n        @invalid=\"$emit('invalid', $event)\"\n        @icon-click=\"$emit('icon-click', $event)\"\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\n        <template v-if=\"$slots.trigger\" #trigger>\n            <!--\n                @slot Override the trigger\n            -->\n            <slot name=\"trigger\" />\n        </template>\n        <o-select\n            v-bind=\"selectBind\"\n            v-model=\"hoursSelected\"\n            override\n            :disabled=\"disabled\"\n            placeholder=\"00\"\n            @change=\"onHoursChange($event.target.value)\">\n            <option\n                v-for=\"hour in hours\"\n                :key=\"hour.value\"\n                :value=\"hour.value\"\n                :disabled=\"isHourDisabled(hour.value)\">\n                {{ hour.label }}\n            </option>\n        </o-select>\n        <span :class=\"separatorClasses\">{{ hourLiteral }}</span>\n        <o-select\n            v-bind=\"selectBind\"\n            v-model=\"minutesSelected\"\n            override\n            :disabled=\"disabled\"\n            placeholder=\"00\"\n            @change=\"onMinutesChange($event.target.value)\">\n            <option\n                v-for=\"minute in minutes\"\n                :key=\"minute.value\"\n                :value=\"minute.value\"\n                :disabled=\"isMinuteDisabled(minute.value)\">\n                {{ minute.label }}\n            </option>\n        </o-select>\n        <template v-if=\"enableSeconds\">\n            <span :class=\"separatorClasses\">{{ minuteLiteral }}</span>\n            <o-select\n                v-bind=\"selectBind\"\n                v-model=\"secondsSelected\"\n                override\n                :disabled=\"disabled\"\n                placeholder=\"00\"\n                @change=\"onSecondsChange($event.target.value)\">\n                <option\n                    v-for=\"second in seconds\"\n                    :key=\"second.value\"\n                    :value=\"second.value\"\n                    :disabled=\"isSecondDisabled(second.value)\">\n                    {{ second.label }}\n                </option>\n            </o-select>\n            <span :class=\"separatorClasses\">{{ secondLiteral }}</span>\n        </template>\n        <o-select\n            v-if=\"!isHourFormat24\"\n            v-bind=\"selectBind\"\n            v-model=\"meridienSelected\"\n            override\n            :disabled=\"disabled\"\n            @change=\"onMeridienChange($event.target.value)\">\n            <option\n                v-for=\"meridien in meridiens\"\n                :key=\"meridien\"\n                :value=\"meridien\"\n                :disabled=\"isMeridienDisabled(meridien)\">\n                {{ meridien }}\n            </option>\n        </o-select>\n\n        <footer v-if=\"$slots.default\" :class=\"footerClasses\">\n            <!--\n                @slot Define an additional content on footer\n            -->\n            <slot />\n        </footer>\n    </OPickerWrapper>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, ref, watch, type PropType } from \"vue\";\n\nimport ODatepicker from \"../datepicker/Datepicker.vue\";\nimport OTimepicker from \"../timepicker/Timepicker.vue\";\nimport OInput from \"../input/Input.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isMobileAgent } from \"@/utils/helpers\";\nimport { defineClasses, useInputHandler } from \"@/composables\";\n\nimport { matchWithGroups } from \"../datepicker/utils\";\n\nimport type { DatepickerProps } from \"../datepicker/types\";\nimport type { TimepickerProps } from \"../timepicker/types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * An input with a simple dropdown/modal for selecting a date and time, uses native datetimepicker for mobile\n * @displayName Datetimepicker\n * @style _datetimepicker.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ODatetimepicker\",\n    configField: \"datetimepicker\",\n    inheritAttrs: false,\n});\n\nconst AM = \"AM\";\nconst PM = \"PM\";\nconst HOUR_FORMAT_24 = \"24\";\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: Date, default: undefined },\n    /** The active state of the dropdown, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /** Define props for the underlying datepicker component */\n    datepicker: {\n        type: Object as PropType<DatepickerProps>,\n        default: undefined,\n    },\n    /** Define props for the underlying timepicker component */\n    timepicker: {\n        type: Object as PropType<TimepickerProps>,\n        default: undefined,\n    },\n    /** Min date to select */\n    minDatetime: { type: Date, default: undefined },\n    /** Max date to select */\n    maxDatetime: { type: Date, default: undefined },\n    /**\n     * Size of the input control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"datetimepicker.size\"),\n    } /** Makes input full width when inside a grouped or addon field */,\n    expanded: { type: Boolean, default: false },\n    /** Makes the input rounded */\n    rounded: { type: Boolean, default: false },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Same as native input readonly */\n    readonly: { type: Boolean, default: false },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Display datetimepicker inline */\n    inline: { type: Boolean, default: false },\n    /** Open dropdown on focus */\n    openOnFocus: {\n        type: Boolean,\n        default: () => getOption(\"datetimepicker.openOnFocus\", true),\n    },\n    /** Date format locale */\n    locale: {\n        type: String,\n        default: () => getOption(\"locale\"),\n    },\n    /** Custom function to format a date into a string */\n    datetimeFormatter: {\n        type: Function as PropType<(date: Date) => string>,\n        default: (\n            date: Date | Date[],\n            defaultFunction: (date: Date | Date[]) => string,\n        ) => getOption(\"datetimepicker.dateFormatter\", defaultFunction)(date),\n    },\n    /** Custom function to parse a string into a date */\n    datetimeParser: {\n        type: Function as PropType<(date: string) => Date>,\n        default: (date: string, defaultFunction: (date: string) => Date) =>\n            getOption(\"datetimepicker.dateParser\", defaultFunction)(date),\n    },\n    /** Date creator function, default is `new Date()` */\n    datetimeCreator: {\n        type: Function as PropType<(date: Date) => Date>,\n        default: (date: Date) =>\n            getOption(\n                \"datetimepicker.datetimeCreator\",\n                (d: Date) => new Date(d),\n            )(date),\n    },\n    /** Dropdown position */\n    position: { type: String, default: undefined },\n    /** Enable mobile native input if mobile agent */\n    mobileNative: {\n        type: Boolean,\n        default: () => getOption(\"datetimepicker.mobileNative\", true),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"datetimepicker.iconPack\", undefined),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"datetimepicker.icon\", undefined),\n    },\n    /** Icon to be added on the right side */\n    iconRight: {\n        type: String,\n        default: () => getOption(\"datetimepicker.iconRight\", undefined),\n    },\n    /** Make the icon right clickable */\n    iconRightClickable: { type: Boolean, default: false },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"datetimepicker.teleport\", false),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the Datepicker wrapper */\n    datepickerWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Timepicker wrapper */\n    timepickerWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Date | Date[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: Date | Date[]): void;\n    /**\n     * active prop two-way binding\n     * @param value {boolean} updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on range start is selected event\n     * @param value {Date} range start date\n     */\n    (e: \"range-start\", value: Date): void;\n    /**\n     * on range end is selected event\n     * @param value {Date} range end date\n     */\n    (e: \"range-end\", value: Date): void;\n    /**\n     * on month change event\n     * @param value {number} month number\n     */\n    (e: \"change-month\", value: number): void;\n    /**\n     * on year change event\n     * @param value {number} year number\n     */\n    (e: \"change-year\", value: number): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n}>();\n\nconst datepickerRef = ref<InstanceType<typeof ODatepicker>>();\nconst timepickerRef = ref<InstanceType<typeof OTimepicker>>();\nconst nativeInputRef = ref<InstanceType<typeof OInput>>();\n\nconst elementRef = computed(() =>\n    isMobileNative.value ? nativeInputRef.value : datepickerRef.value,\n);\n\n// use form input functionality for native input\nconst { setFocus, onBlur, onFocus, onInvalid } = useInputHandler(\n    elementRef,\n    emits,\n    props,\n);\n\nconst isMobileNative = computed(\n    () => props.mobileNative && isMobileAgent.any(),\n);\n\nwatch([() => isMobileNative.value, () => props.inline], () => {\n    // $refs attached, it's time to refresh datepicker (input)\n    if (datepickerRef.value) datepickerRef.value.$forceUpdate();\n});\n\n/** Dropdown active state */\nconst isActive = defineModel<boolean>(\"active\");\n\nconst vmodel = defineModel<Date>();\n\nfunction updateVModel(value: Date | Date[]): void {\n    if (!value) {\n        vmodel.value = undefined;\n        return;\n    }\n    if (Array.isArray(value)) {\n        updateVModel(value[0]);\n        return;\n    }\n    let date = new Date(value.getTime());\n    if (!props.modelValue) {\n        date = props.datetimeCreator(value);\n    } else {\n        // restore time part\n        if (\n            (value.getDate() !== props.modelValue.getDate() ||\n                value.getMonth() !== props.modelValue.getMonth() ||\n                value.getFullYear() !== props.modelValue.getFullYear()) &&\n            value.getHours() === 0 &&\n            value.getMinutes() === 0 &&\n            value.getSeconds() === 0\n        ) {\n            date.setHours(\n                props.modelValue.getHours(),\n                props.modelValue.getMinutes(),\n                props.modelValue.getSeconds(),\n                0,\n            );\n        }\n    }\n    // check min and max range\n    if (props.minDatetime && date < props.minDatetime) {\n        date = props.minDatetime;\n    } else if (props.maxDatetime && date > props.maxDatetime) {\n        date = props.maxDatetime;\n    }\n    vmodel.value = new Date(date.getTime());\n}\n\nconst minDate = computed(() => {\n    if (!props.minDatetime)\n        return props.datepicker ? props.datepicker.minDate : null;\n    return new Date(\n        props.minDatetime.getFullYear(),\n        props.minDatetime.getMonth(),\n        props.minDatetime.getDate(),\n        0,\n        0,\n        0,\n        0,\n    );\n});\n\nconst maxDate = computed(() => {\n    if (!props.maxDatetime)\n        return props.datepicker ? props.datepicker.maxDate : null;\n    return new Date(\n        props.maxDatetime.getFullYear(),\n        props.maxDatetime.getMonth(),\n        props.maxDatetime.getDate(),\n        0,\n        0,\n        0,\n        0,\n    );\n});\n\n// Only enable min/max time if local (not necessarily UTC) date portion matches\nconst minTime = computed(() => {\n    if (\n        !props.minDatetime ||\n        vmodel.value === null ||\n        typeof vmodel.value === \"undefined\" ||\n        vmodel.value.getFullYear() != props.minDatetime.getFullYear() ||\n        vmodel.value.getMonth() != props.minDatetime.getMonth() ||\n        vmodel.value.getDate() != props.minDatetime.getDate()\n    ) {\n        return props.timepicker ? props.timepicker.minTime : null;\n    }\n    return props.minDatetime;\n});\n\nconst maxTime = computed(() => {\n    if (\n        !props.maxDatetime ||\n        vmodel.value === null ||\n        typeof vmodel.value === \"undefined\" ||\n        vmodel.value.getFullYear() != props.maxDatetime.getFullYear() ||\n        vmodel.value.getMonth() != props.maxDatetime.getMonth() ||\n        vmodel.value.getDate() != props.maxDatetime.getDate()\n    ) {\n        return props.timepicker ? props.timepicker.maxTime : null;\n    }\n    return props.maxDatetime;\n});\n\nconst datepickerSize = computed(() =>\n    props.datepicker?.size ? props.datepicker.size : props.size,\n);\n\nconst timepickerSize = computed(() =>\n    props.timepicker?.size ? props.timepicker.size : props.size,\n);\n\nconst timepickerDisabled = computed(() =>\n    props.timepicker?.disabled ? props.timepicker.disabled : props.disabled,\n);\n\nfunction formatNative(value: Date): string {\n    const date = new Date(value);\n    if (value && !isNaN(date.getTime())) {\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        const hours = date.getHours();\n        const minutes = date.getMinutes();\n        const seconds = date.getSeconds();\n        return (\n            year +\n            \"-\" +\n            ((month < 10 ? \"0\" : \"\") + month) +\n            \"-\" +\n            ((day < 10 ? \"0\" : \"\") + day) +\n            \"T\" +\n            ((hours < 10 ? \"0\" : \"\") + hours) +\n            \":\" +\n            ((minutes < 10 ? \"0\" : \"\") + minutes) +\n            \":\" +\n            ((seconds < 10 ? \"0\" : \"\") + seconds)\n        );\n    }\n    return \"\";\n}\n\n// --- Time Format Feature ---\n\nconst enableSeconds = computed(() =>\n    timepickerRef.value?.enableSeconds\n        ? timepickerRef.value.enableSeconds\n        : false,\n);\n\nconst localeOptions = computed(\n    () =>\n        new Intl.DateTimeFormat(props.locale, {\n            year: \"numeric\",\n            month: \"numeric\",\n            day: \"numeric\",\n            hour: \"numeric\",\n            minute: \"numeric\",\n            second: enableSeconds.value ? \"numeric\" : undefined,\n        }).resolvedOptions() as Intl.DateTimeFormatOptions,\n);\n\nconst isHourFormat24 = computed(\n    () =>\n        props.timepicker?.hourFormat === HOUR_FORMAT_24 ||\n        !localeOptions.value.hour12,\n);\n\nconst dtf = computed(\n    () =>\n        new Intl.DateTimeFormat(props.locale, {\n            year: localeOptions.value.year || \"numeric\",\n            month: localeOptions.value.month || \"numeric\",\n            day: localeOptions.value.day || \"numeric\",\n            hour: localeOptions.value.hour || \"numeric\",\n            minute: localeOptions.value.minute || \"numeric\",\n            second: enableSeconds.value\n                ? localeOptions.value.second || \"numeric\"\n                : undefined,\n            hourCycle: !isHourFormat24.value ? \"h12\" : \"h23\",\n        }),\n);\n\nconst amString = computed(() => {\n    if (\n        dtf.value.formatToParts &&\n        typeof dtf.value.formatToParts === \"function\"\n    ) {\n        const d = props.datetimeCreator(new Date());\n        d.setHours(10);\n        const dayPeriod = dtf.value\n            .formatToParts(d)\n            .find((part) => part.type === \"dayPeriod\");\n        if (dayPeriod) return dayPeriod.value;\n    }\n    return AM;\n});\n\nconst pmString = computed(() => {\n    if (\n        dtf.value.formatToParts &&\n        typeof dtf.value.formatToParts === \"function\"\n    ) {\n        const d = props.datetimeCreator(new Date());\n        d.setHours(20);\n        const dayPeriod = dtf.value\n            .formatToParts(d)\n            .find((part) => part.type === \"dayPeriod\");\n        if (dayPeriod) return dayPeriod.value;\n    }\n    return PM;\n});\n\nfunction defaultDatetimeParser(value: string): Date {\n    function defaultParser(date: string): Date {\n        if (\n            dtf.value.formatToParts &&\n            typeof dtf.value.formatToParts === \"function\"\n        ) {\n            const dayPeriods = [AM, PM, AM.toLowerCase(), PM.toLowerCase()];\n            if (timepickerRef.value) {\n                dayPeriods.push(amString.value);\n                dayPeriods.push(pmString.value);\n            }\n            const parts = this.dtf.formatToParts(new Date());\n            const formatRegex = parts\n                .map((part, idx) => {\n                    if (part.type === \"literal\") {\n                        if (\n                            idx + 1 < parts.length &&\n                            parts[idx + 1].type === \"hour\"\n                        ) {\n                            return `[^\\\\d]+`;\n                        }\n                        return part.value.replace(/ /g, \"\\\\s?\");\n                    } else if (part.type === \"dayPeriod\") {\n                        return `((?!=<${part.type}>)(${dayPeriods.join(\n                            \"|\",\n                        )})?)`;\n                    }\n                    return `((?!=<${part.type}>)\\\\d+)`;\n                })\n                .join(\"\");\n            const datetimeGroups = matchWithGroups(formatRegex, date);\n\n            // We do a simple validation for the group.\n            // If it is not valid, it will fallback to Date.parse below\n            if (\n                datetimeGroups.year &&\n                datetimeGroups.year.length === 4 &&\n                datetimeGroups.month &&\n                datetimeGroups.month <= 12 &&\n                datetimeGroups.day &&\n                datetimeGroups.day <= 31 &&\n                datetimeGroups.hour &&\n                datetimeGroups.hour >= 0 &&\n                datetimeGroups.hour < 24 &&\n                datetimeGroups.minute &&\n                datetimeGroups.minute >= 0 &&\n                datetimeGroups.minute <= 59\n            ) {\n                const d = new Date(\n                    datetimeGroups.year,\n                    datetimeGroups.month - 1,\n                    datetimeGroups.day,\n                    datetimeGroups.hour,\n                    datetimeGroups.minute,\n                    datetimeGroups.second || 0,\n                );\n                return d;\n            }\n        }\n\n        return new Date(Date.parse(date));\n    }\n    const date = (props.datetimeParser as any)(value, defaultParser);\n    return date;\n}\n\nfunction defaultDatetimeFormatter(date: Date): string {\n    return (props.datetimeFormatter as any)(date, (date: Date) =>\n        date ? dtf.value.format(date) : \"\",\n    );\n}\n\n// --- Event Handler ---\n\n/** Parse date from string */\nfunction onChangeNativePicker(event: Event): void {\n    const date = (event.target as HTMLInputElement).value;\n    const s = date ? date.split(/\\D/) : [];\n    if (s.length >= 5) {\n        const year = parseInt(s[0], 10);\n        const month = parseInt(s[1], 10) - 1;\n        const day = parseInt(s[2], 10);\n        const hours = parseInt(s[3], 10);\n        const minutes = parseInt(s[4], 10);\n        // Seconds are omitted intentionally; they are unsupported by input\n        // type=datetime-local and cause the control to fail native validation\n        updateVModel(new Date(year, month, day, hours, minutes));\n    } else {\n        updateVModel(null);\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst datepickerWrapperClasses = defineClasses([\n    \"datepickerWrapperClass\",\n    \"o-dtpck__date\",\n]);\n\nconst timepickerWrapperClasses = defineClasses([\n    \"timepickerWrapperClass\",\n    \"o-dtpck__time\",\n]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <o-datepicker\n        v-if=\"!isMobileNative || inline\"\n        ref=\"datepickerRef\"\n        v-bind=\"{ ...$attrs, ...datepicker }\"\n        v-model:active=\"isActive\"\n        :model-value=\"vmodel\"\n        data-oruga=\"datetimepicker\"\n        :class=\"datepickerWrapperClasses\"\n        :rounded=\"rounded\"\n        :open-on-focus=\"openOnFocus\"\n        :position=\"position\"\n        :inline=\"inline\"\n        :readonly=\"readonly\"\n        :expanded=\"expanded\"\n        :close-on-click=\"false\"\n        :date-formatter=\"defaultDatetimeFormatter\"\n        :date-parser=\"defaultDatetimeParser\"\n        :min-date=\"minDate\"\n        :max-date=\"maxDate\"\n        :icon=\"icon\"\n        :icon-right=\"iconRight\"\n        :icon-right-clickable=\"iconRightClickable\"\n        :icon-pack=\"iconPack\"\n        :size=\"datepickerSize\"\n        :placeholder=\"placeholder\"\n        :range=\"false\"\n        :disabled=\"disabled\"\n        :mobile-native=\"isMobileNative\"\n        :locale=\"locale\"\n        :teleport=\"teleport\"\n        @update:model-value=\"updateVModel\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n        @change-month=\"$emit('change-month', $event)\"\n        @change-year=\"$emit('change-year', $event)\"\n        @icon-click=\"$emit('icon-click', $event)\"\n        @icon-right-click=\"$emit('icon-right-click', $event)\">\n        <template #footer>\n            <div :class=\"timepickerWrapperClasses\">\n                <o-timepicker\n                    ref=\"timepickerRef\"\n                    v-bind=\"timepicker\"\n                    v-model=\"vmodel\"\n                    inline\n                    :readonly=\"readonly\"\n                    :min-time=\"minTime\"\n                    :max-time=\"maxTime\"\n                    :size=\"timepickerSize\"\n                    :disabled=\"timepickerDisabled\"\n                    :mobile-native=\"isMobileNative\"\n                    :locale=\"locale\" />\n            </div>\n            <template v-if=\"$slots.footer !== undefined\">\n                <!--\n                    @slot Define an additional footer\n                -->\n                <slot name=\"footer\" />\n            </template>\n        </template>\n    </o-datepicker>\n\n    <!-- Native Picker -->\n    <o-input\n        v-else\n        v-bind=\"$attrs\"\n        ref=\"nativeInputRef\"\n        type=\"datetime-local\"\n        autocomplete=\"off\"\n        :value=\"formatNative(vmodel)\"\n        :max=\"formatNative(maxDate)\"\n        :min=\"formatNative(minDate)\"\n        :placeholder=\"placeholder\"\n        :size=\"datepickerSize\"\n        :icon-pack=\"iconPack\"\n        :icon=\"icon\"\n        :rounded=\"rounded\"\n        :disabled=\"disabled\"\n        :readonly=\"false\"\n        :use-html5-validation=\"false\"\n        @change=\"onChangeNativePicker\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n        @invalid=\"onInvalid\" />\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Datetimepicker from \"./Datetimepicker.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export datetimepicker plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Datetimepicker);\n    },\n} as Plugin;\n\n/** export datetimepicker components */\nexport { Datetimepicker as ODatetimepicker };\n","import type { App, Plugin } from \"vue\";\n\nimport Dropdown from \"./Dropdown.vue\";\nimport DropdownItem from \"./DropdownItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export dropdown plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Dropdown);\n        registerComponent(app, DropdownItem);\n    },\n} as Plugin;\n\n/** export dropdown components */\nexport { Dropdown as ODropdown, DropdownItem as ODropdownItem };\n","import type { App, Plugin } from \"vue\";\n\nimport Field from \"./Field.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export field plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Field);\n    },\n} as Plugin;\n\n/** export field components */\nexport { Field as OField };\n","import type { App, Plugin } from \"vue\";\n\nimport Icon from \"./Icon.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export icon plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Icon);\n    },\n} as Plugin;\n\n/** export icon components */\nexport { Icon as OIcon };\n","import type { App, Plugin } from \"vue\";\n\nimport Input from \"./Input.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export input plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Input);\n    },\n} as Plugin;\n\n/** export input components */\nexport { Input as OInput };\n","<script setup lang=\"ts\">\nimport { ref, onMounted, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    useProgrammaticComponent,\n    usePropBinding,\n} from \"@/composables\";\n\nimport type { ComponentClass, ProgrammaticInstance } from \"@/types\";\n\n/**\n * A simple loading overlay\n * @displayName Loading\n * @style _loading.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OLoading\",\n    configField: \"loading\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether loading is active or not, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /** Loader will overlay the full page. */\n    fullPage: { type: Boolean, default: true },\n    /** Notification label, unnecessary when default slot is used. */\n    label: { type: String, default: undefined },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"loading.animation\", \"fade\"),\n    },\n    /** Is Loading cancable by pressing escape or clicking outside. */\n    cancelable: { type: Boolean, default: false },\n    /** Callback function to call after user canceled (pressed escape / clicked outside). */\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\n    /** Callback function to call after close (programmatically close or user canceled). */\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\n    /** Icon name to show, unnecessary when default slot is used. */\n    icon: {\n        type: String,\n        default: () => getOption(\"loading.icon\", \"loading\"),\n    },\n    /** Enable spin effect on icon */\n    iconSpin: {\n        type: Boolean,\n        default: () => getOption(\"loading.iconSpin\", true),\n    },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    iconSize: {\n        type: String,\n        default: () => getOption(\"loading.iconSize\", \"medium\"),\n    },\n    /**\n     * DOM element where the loading component will be created on (for programmatic usage).\n     * Note that this also changes fullPage to false.\n     */\n    container: {\n        type: [Object, String] as PropType<string | HTMLElement>,\n        default: () => getOption(\"loading.container\", \"body\"),\n    },\n    /**\n     * This is used internally for programmatic usage\n     * @ignore\n     */\n    programmatic: {\n        type: Object as PropType<ProgrammaticInstance>,\n        default: undefined,\n    },\n    /**\n     * This is used internally for programmatic usage.\n     * @ignore\n     */\n    promise: { type: Promise, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the root element when fullpage */\n    fullPageClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the loading overlay */\n    overlayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the loading icon */\n    iconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the loading label */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * fullPage prop two-way binding\n     * @param value {boolean} - updated fullPage prop\n     */\n    (e: \"update:fullPage\", value: boolean): void;\n    /**\n     * on component close event\n     * @param value {any} - close event data\n     */\n    (e: \"close\", ...args: any[]): void;\n}>();\n\nconst rootRef = ref();\n\nconst displayInFullPage = usePropBinding(\"fullPage\", props, emits);\n\n/** add programmatic usage to this component */\nconst { isActive, close, cancel } = useProgrammaticComponent(\n    rootRef,\n    props,\n    emits,\n    {\n        cancelOptions: [\"escape\", \"outside\"],\n    },\n);\n\nonMounted(() => {\n    if (props.programmatic && props.container) displayInFullPage.value = false;\n});\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-load\"],\n    [\"fullPageClass\", \"o-load--fullpage\", null, displayInFullPage],\n);\n\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-load__overlay\"]);\n\nconst iconClasses = defineClasses([\"iconClass\", \"o-load__icon\"]);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-load__label\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ close, promise: props.promise });\n</script>\n\n<template>\n    <transition :name=\"animation\">\n        <div\n            v-if=\"isActive\"\n            ref=\"rootRef\"\n            data-oruga=\"loading\"\n            role=\"dialog\"\n            :class=\"rootClasses\">\n            <div\n                :class=\"overlayClasses\"\n                :tabindex=\"-1\"\n                aria-hidden=\"true\"\n                @click=\"cancel('outside')\" />\n            <!-- \n                @slot Override icon and label\n                @binding {close} close - function to close the component\n            -->\n            <slot :close=\"close\">\n                <o-icon\n                    :icon=\"icon\"\n                    :spin=\"iconSpin\"\n                    :size=\"iconSize\"\n                    :class=\"iconClasses\"\n                    both />\n                <span v-if=\"label\" :class=\"labelClasses\">\n                    {{ label }}\n                </span>\n            </slot>\n        </div>\n    </transition>\n</template>\n","export default class InstanceRegistry<T> {\n    entries: Array<T>;\n\n    constructor() {\n        this.entries = [];\n    }\n\n    add(entry: T): void {\n        this.entries.push(entry);\n    }\n\n    remove(entry: T): void {\n        const index = this.entries.indexOf(entry);\n        this.entries.splice(index, 1);\n    }\n\n    walk(callback: (value: T) => boolean | void): void {\n        // Walk a copy of the array so that the callback is allowed to remove the instance\n        this.entries = [...this.entries].filter((e) => {\n            const ret = callback(e);\n            return !(ret === true);\n        });\n    }\n}\n","import { createVNode, render } from \"vue\";\n\nimport Loading from \"./Loading.vue\";\nimport type { LoadingProps } from \"./types\";\n\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\nimport { VueInstance } from \"@/utils/plugins\";\nimport { merge } from \"@/utils/helpers\";\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\n\ndeclare module \"../../index\" {\n    interface OrugaProgrammatic {\n        loading: typeof LoadingProgrammatic;\n    }\n}\n\nconst instances = new InstanceRegistry<typeof Loading>();\n\ntype ProgrammaticProps = Readonly<\n    string | (LoadingProps & OrugaOptions[\"loading\"])\n>;\n\nconst LoadingProgrammatic = {\n    open(params: ProgrammaticProps): ProgrammaticExpose {\n        const componentParams =\n            typeof params === \"string\"\n                ? {\n                      label: params,\n                  }\n                : { ...params };\n\n        let slot;\n        if (Array.isArray(componentParams.label)) {\n            slot = componentParams.label;\n            delete componentParams.label;\n        }\n\n        const defaultParams = {\n            programmatic: { instances },\n            active: true, // set the active state to true\n        };\n\n        const propsData = merge(defaultParams, componentParams);\n        propsData.promise = new Promise((p1, p2) => {\n            propsData.programmatic.resolve = p1;\n            propsData.programmatic.reject = p2;\n        });\n\n        const defaultSlot = () => slot;\n\n        const app = VueInstance;\n        const vnode = createVNode(Loading, propsData, defaultSlot);\n        vnode.appContext = app._context;\n        render(vnode, document.createElement(\"div\"));\n\n        // return exposed functionalities\n        return vnode.component.exposed as ProgrammaticExpose;\n    },\n    closeAll(...args: any[]): void {\n        instances.walk((entry) => entry.exposed.close(...args));\n    },\n};\n\nexport default LoadingProgrammatic;\n","import type { App, Plugin } from \"vue\";\n\nimport Loading from \"./Loading.vue\";\nimport LoadingProgrammatic from \"./LoadingProgrammatic\";\n\nimport {\n    registerComponent,\n    registerComponentProgrammatic,\n} from \"@/utils/plugins\";\n\n/** export loading specific types */\nexport type { LoadingProps } from \"./types\";\n\n/** export loading plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Loading);\n        registerComponentProgrammatic(app, \"loading\", LoadingProgrammatic);\n    },\n} as Plugin;\n\n/** export loading components */\nexport { LoadingProgrammatic, Loading as OLoading };\n","<script setup lang=\"ts\">\nimport { ref, computed, toRaw, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    useProviderParent,\n    type ProviderItem,\n} from \"@/composables\";\n\nimport type { MenuComponent, MenuItemComponent } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * A simple menu\n * @displayName Menu\n * @requires ./MenuItem.vue\n * @style _menu.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OMenu\",\n    configField: \"menu\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Menu label */\n    label: { type: String, default: undefined },\n    /** If sub menu items are collapsible */\n    accordion: { type: Boolean, default: true },\n    /** If the menu items are clickable */\n    activable: { type: Boolean, default: true },\n    /**\n     * Role attribute to be passed to the list container for better accessibility.\n     * Use menu only in situations where your dropdown is related to a navigation menu.\n     * @values list, menu, dialog\n     */\n    ariaRole: {\n        type: String,\n        default: getOption(\"menu.ariaRole\", \"menu\"),\n        validator: (value: string) =>\n            [\"menu\", \"list\", \"dialog\"].indexOf(value) > -1,\n    },\n    /** Icon to be shown */\n    icon: { type: String, default: undefined },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"menu.iconPack\"),\n    },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    iconSize: {\n        type: String,\n        default: () => getOption(\"menu.iconSize\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu list */\n    listClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu list label */\n    listLabelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst rootRef = ref();\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed<MenuComponent>(() => ({\n    activable: props.activable,\n    accordion: props.accordion,\n    resetMenu,\n}));\n\n/** Provide functionalities and data to child item components */\nconst { childItems } = useProviderParent<MenuItemComponent>(rootRef, {\n    data: provideData,\n});\n\nfunction resetMenu(excludedItems: ProviderItem[] = []): void {\n    childItems.value.forEach((item) => {\n        if (!excludedItems.includes(toRaw(item))) item.data.value.reset();\n    });\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses([\"rootClass\", \"o-menu\"]);\n\nconst listClasses = defineClasses([\"listClass\", \"o-menu__list\"]);\n\nconst labelClasses = defineClasses([\"listLabelClass\", \"o-menu__label\"]);\n</script>\n\n<template>\n    <div ref=\"rootRef\" data-oruga=\"menu\" :class=\"rootClasses\">\n        <div v-if=\"label || $slots.label\" :class=\"labelClasses\">\n            <!-- \n                @slot Override icon and label\n            -->\n            <slot name=\"label\">\n                <o-icon\n                    v-if=\"icon\"\n                    :icon=\"icon\"\n                    :pack=\"iconPack\"\n                    :size=\"iconSize\" />\n                <span>{{ label }}</span>\n            </slot>\n        </div>\n        <ul :class=\"listClasses\" :role=\"ariaRole\">\n            <!--\n                @slot Place menu items here \n            -->\n            <slot />\n        </ul>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { ref, computed, toRaw, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    usePropBinding,\n    useProviderChild,\n    useProviderParent,\n    type ProviderItem,\n} from \"@/composables\";\n\nimport type {\n    MenuComponent,\n    MenuItemComponent,\n    MenuItemProvider,\n} from \"./types\";\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * A menu list item\n * @displayName Menu Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OMenuItem\",\n    configField: \"menu\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** The active state of the menu item, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /** Menu item label */\n    label: { type: String, default: undefined },\n    /** Menu item will be expanded */\n    expanded: { type: Boolean, default: false },\n    /** Menu item will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Icon to be shown */\n    icon: { type: String, default: undefined },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"menu.iconPack\"),\n    },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    iconSize: {\n        type: String,\n        default: () => getOption(\"menu.iconSize\"),\n    },\n    /** Transition name to apply on menu list */\n    animation: {\n        type: String,\n        default: () => getOption(\"menu.animation\", \"slide\"),\n    },\n    /** Menu item tag name */\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"menu.menuTag\", \"a\"),\n    },\n    /**\n     * Role attribute to be passed to the list item for better accessibility.\n     * @values listitem, menuitem\n     */\n    ariaRole: {\n        type: String,\n        default: getOption(\"menu.itemAriaRole\", \"menuitem\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the menu item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the active menu item */\n    itemActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the disabled menu item */\n    itemDisabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the icon of menu item */\n    itemIconTextClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the menu item when is a submenu */\n    itemSubmenuClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the root element of menu item */\n    itemWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {boolean} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: boolean): void;\n    /**\n     * expanded prop two-way binding\n     * @param value {boolean} updated expanded prop\n     */\n    (e: \"update:expanded\", value: boolean): void;\n}>();\n\nconst providedData = computed<MenuItemComponent>(() => ({\n    reset,\n}));\n\n// Inject functionalities and data from the parent menu component\nconst { parent, item } = useProviderChild<MenuComponent>({\n    data: providedData,\n});\n\n// Inject functionalities and data from the parent menu-item component\nconst providedItem = useProviderChild<MenuItemProvider>({\n    key: \"menu-item\",\n    needParent: false,\n});\n\nconst itemParent = computed(() => providedItem.parent?.value);\n\nconst isActive = usePropBinding(\"active\", props, emits, { passive: true });\n\nconst isExpanded = usePropBinding(\"expanded\", props, emits, { passive: true });\n\n/** template identifier */\nconst identifier = computed(() =>\n    itemParent.value\n        ? `menu-item-${providedItem.item.value.identifier}`\n        : `menu-${item.value.identifier}`,\n);\n\nfunction onClick(): void {\n    if (props.disabled) return;\n    triggerReset();\n    isExpanded.value = props.expanded || !isExpanded.value;\n    if (parent.value.activable) isActive.value = true;\n}\n\nfunction triggerReset(child?: ProviderItem): void {\n    // The point of this method is to collect references to the clicked item and any parent,\n    // this way we can skip resetting those elements.\n    if (itemParent.value?.triggerReset) {\n        itemParent.value.triggerReset(toRaw(item.value));\n    }\n    // else if not a sub item reset parent menu\n    else if (parent.value.resetMenu) {\n        parent.value.resetMenu([toRaw(item.value), child]);\n    }\n}\n\nfunction reset(): void {\n    if (parent.value.accordion) isExpanded.value = false;\n    if (parent.value.activable) isActive.value = false;\n}\n\nconst rootRef = ref();\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed<MenuItemProvider>(() => ({\n    triggerReset,\n}));\n\n/** Provide functionalities and data to child item components */\nuseProviderParent(rootRef, { key: \"menu-item\", data: provideData });\n\n// --- Computed Component Classes ---\n\nconst itemClasses = defineClasses(\n    [\"itemClass\", \"o-menu__item\"],\n    [\"itemActiveClass\", \"o-menu__item--active\", null, isActive],\n    [\n        \"itemDisabledClass\",\n        \"o-menu__item--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\n        \"itemIconTextClass\",\n        \"o-menu__item--icon-text\",\n        null,\n        computed(() => !!props.icon),\n    ],\n);\n\nconst submenuClasses = defineClasses([\n    \"itemSubmenuClass\",\n    \"o-menu__item__submenu\",\n]);\n\nconst wrapperClasses = defineClasses([\n    \"itemWrapperClass\",\n    \"o-menu__item__wrapper\",\n]);\n</script>\n\n<template>\n    <li\n        ref=\"rootRef\"\n        :role=\"ariaRole\"\n        :class=\"wrapperClasses\"\n        :data-id=\"identifier\"\n        data-oruga=\"menu-item\"\n        aria-roledescription=\"item\">\n        <component\n            :is=\"tag\"\n            v-bind=\"$attrs\"\n            :class=\"itemClasses\"\n            @click=\"onClick()\">\n            <o-icon\n                v-if=\"icon\"\n                :icon=\"icon\"\n                :pack=\"iconPack\"\n                :size=\"iconSize\" />\n            <!-- \n                @slot Override label\n                @binding {boolean} expanded - item expanded state\n                @binding {boolean} active - item active state\n            -->\n            <slot name=\"label\" :expanded=\"isExpanded\" :active=\"isActive\">\n                <span>{{ label }}</span>\n            </slot>\n        </component>\n\n        <!-- sub menu items -->\n        <template v-if=\"$slots.default\">\n            <transition :name=\"animation\">\n                <ul v-show=\"isExpanded\" :class=\"submenuClasses\">\n                    <!--\n                        @slot Place menu items here \n                    -->\n                    <slot />\n                </ul>\n            </transition>\n        </template>\n    </li>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Menu from \"./Menu.vue\";\nimport MenuItem from \"./MenuItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export menu plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Menu);\n        registerComponent(app, MenuItem);\n    },\n} as Plugin;\n\n/** export menu components */\nexport { Menu as OMenu, MenuItem as OMenuItem };\n","<script setup lang=\"ts\">\nimport {\n    ref,\n    computed,\n    watch,\n    nextTick,\n    onBeforeUnmount,\n    type Component,\n    type PropType,\n} from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { vTrapFocus } from \"@/directives/trapFocus\";\nimport { getOption } from \"@/utils/config\";\nimport { removeElement, toCssDimension } from \"@/utils/helpers\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    defineClasses,\n    getActiveClasses,\n    useMatchMedia,\n    useProgrammaticComponent,\n} from \"@/composables\";\n\nimport type { ComponentClass, ProgrammaticInstance } from \"@/types\";\n\n/**\n * Classic modal overlay to include any content you may need\n * @displayName Modal\n * @style _modal.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OModal\",\n    configField: \"modal\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether modal is active or not, use v-model:active to make it two-way binding */\n    active: { type: Boolean, default: false },\n    /** Display modal as full screen */\n    fullScreen: { type: Boolean, default: false },\n    /** Text content, unnecessary when default slot is used */\n    content: { type: String, default: undefined },\n    /** Width of the Modal */\n    width: {\n        type: [String, Number],\n        default: () => getOption(\"modal.width\", 960),\n    },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"modal.animation\", \"zoom-out\"),\n    },\n    /**\n     * Is Modal cancleable by clicking 'X', pressing escape or clicking outside\n     * @values escape, x, outside, button, true, false\n     */\n    cancelable: {\n        type: [Array, Boolean] as PropType<string[] | boolean>,\n        default: () =>\n            getOption(\"modal.cancelable\", [\"escape\", \"x\", \"outside\", \"button\"]),\n    },\n    /** Callback function to call after user canceled (clicked 'X' / pressed escape / clicked outside) */\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\n    /** Callback function to call after close (programmatically close or user canceled) */\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\n    /**\n     * Use `clip` to remove the body scrollbar, `keep` to have a non scrollable scrollbar to avoid shifting background,\n     * but will set body to position fixed, might break some layouts.\n     * @values keep, clip\n     */\n    scroll: {\n        type: String,\n        default: () => getOption(\"modal.scroll\", \"keep\"),\n        validator: (value: string) => [\"keep\", \"clip\"].indexOf(value) >= 0,\n    },\n    /** Trap focus inside the modal */\n    trapFocus: {\n        type: Boolean,\n        default: () => getOption(\"modal.trapFocus\", true),\n    },\n    /**\n     * Role attribute to be passed to the div wrapper for better accessibility.\n     * @values dialog, alertdialog\n     */\n    ariaRole: {\n        type: String,\n        default: () => getOption(\"modal.ariaRole\"),\n        validator: (value: string) =>\n            [\"dialog\", \"alertdialog\"].indexOf(value) >= 0,\n    },\n    /** Accessibility aria-label to be passed to the div wrapper element */\n    ariaLabel: { type: String, default: () => getOption(\"modal.ariaLabel\") },\n    /** Destroy modal on hide */\n    destroyOnHide: {\n        type: Boolean,\n        default: () => getOption(\"modal.destroyOnHide\", false),\n    },\n    /** Automatically focus modal when active */\n    autoFocus: {\n        type: Boolean,\n        default: () => getOption(\"modal.autoFocus\", true),\n    },\n    /** Close icon name */\n    closeIcon: {\n        type: String,\n        default: () => getOption(\"modal.closeIcon\", \"close\"),\n    },\n    /**\n     * Size of close icon\n     * @values small, medium, large\n     */\n    closeIconSize: {\n        type: String,\n        default: () => getOption(\"modal.closeIconSize\", \"medium\"),\n    },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"modal.mobileBreakpoint\"),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"modal.teleport\", false),\n    },\n    /**\n     * Component to be injected, used to open a component modal programmatically.\n     * Close modal within the component by emitting a 'close' event — emits('close')\n     */\n    component: {\n        type: [Object, Function] as PropType<Component>,\n        default: undefined,\n    },\n    /** Props to be binded to the injected component */\n    props: { type: Object, default: undefined },\n    /** Events to be binded to the injected component */\n    events: { type: Object, default: () => ({}) },\n    /** DOM element where the modal component will be created on (for programmatic usage) */\n    container: {\n        type: [Object, String] as PropType<string | HTMLElement>,\n        default: () => getOption(\"modal.container\", \"body\"),\n    },\n    /**\n     * This is used internally for programmatic usage\n     * @ignore\n     */\n    programmatic: {\n        type: Object as PropType<ProgrammaticInstance>,\n        default: undefined,\n    },\n    /**\n     * This is used internally for programmatic usage\n     * @ignore\n     */\n    promise: { type: Promise, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of modal component when its active */\n    activeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the modal overlay */\n    overlayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the modal content */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the close button */\n    closeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the modal when fullscreen */\n    fullScreenClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of modal component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the modal when scroll is clip */\n    scrollClipClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the modal when scroll is not clip */\n    noScrollClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on component close event\n     * @param value {any} - close event data\n     */\n    (e: \"close\", ...args: any[]): void;\n}>();\n\nconst rootRef = ref();\n\n/** add programmatic usage to this component */\nconst { isActive, close, cancel } = useProgrammaticComponent(\n    rootRef,\n    props,\n    emits,\n    {\n        destroyOnHide: props.destroyOnHide,\n        cancelOptions: getOption(\"modal.cancelable\", [\n            \"escape\",\n            \"x\",\n            \"outside\",\n            \"button\",\n        ]),\n    },\n);\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst _teleport = computed(() =>\n    typeof props.teleport === \"boolean\"\n        ? { to: \"body\", disabled: !props.teleport }\n        : { to: props.teleport, disabled: false },\n);\n\nconst savedScrollTop = ref(null);\nconst isAnimating = ref(!props.active);\n\nwatch(isActive, (value) => {\n    handleScroll();\n    if (value && rootRef.value && props.autoFocus)\n        nextTick(() => rootRef.value.focus());\n    // mark the modal as destoyed after it get closed\n    if (!value && props.destroyOnHide)\n        // wait for transition finish\n        setTimeout(() => removeElement(rootRef.value));\n});\n\nconst showX = computed(() =>\n    Array.isArray(props.cancelable)\n        ? props.cancelable.indexOf(\"x\") >= 0\n        : props.cancelable,\n);\n\nconst customStyle = computed(() =>\n    !props.fullScreen ? { maxWidth: toCssDimension(props.width) } : null,\n);\n\nonBeforeUnmount(() => {\n    if (isClient) {\n        // reset scroll\n        const scrollto = savedScrollTop.value\n            ? savedScrollTop.value\n            : document.documentElement.scrollTop;\n        if (scrollClass.value) {\n            document.body.classList.remove(...scrollClass.value);\n            document.documentElement.classList.remove(...scrollClass.value);\n        }\n        document.documentElement.scrollTop = scrollto;\n        document.body.style.top = null;\n    }\n});\n\nfunction handleScroll(): void {\n    if (!isClient) return;\n\n    if (props.scroll === \"clip\") {\n        if (scrollClass.value) {\n            if (isActive.value)\n                document.documentElement.classList.add(...scrollClass.value);\n            else\n                document.documentElement.classList.remove(...scrollClass.value);\n        }\n        return;\n    }\n\n    savedScrollTop.value = savedScrollTop.value\n        ? savedScrollTop.value\n        : document.documentElement.scrollTop;\n\n    if (scrollClass.value) {\n        if (isActive.value) document.body.classList.add(...scrollClass.value);\n        else document.body.classList.remove(...scrollClass.value);\n    }\n\n    if (isActive.value) {\n        document.body.style.top = `-${savedScrollTop.value}px`;\n        return;\n    }\n\n    document.documentElement.scrollTop = savedScrollTop.value;\n    document.body.style.top = null;\n    savedScrollTop.value = null;\n}\n\n/** Transition after-enter hook */\nfunction afterEnter(): void {\n    isAnimating.value = false;\n}\n\n/** Transition before-leave hook */\nfunction beforeLeave(): void {\n    isAnimating.value = true;\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-modal\"],\n    [\"mobileClass\", \"o-modal--mobile\", null, isMobile],\n    [\"activeClass\", \"o-modal--active\", null, isActive],\n);\n\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-modal__overlay\"]);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-modal__content\"],\n    [\n        \"fullScreenClass\",\n        \"o-modal__content--full-screen\",\n        null,\n        computed(() => props.fullScreen),\n    ],\n);\n\nconst closeClasses = defineClasses([\"closeClass\", \"o-modal__close\"]);\n\nconst scrollClasses = defineClasses([\"scrollClipClass\", \"o-clipped\"]);\nconst noScrollClasses = defineClasses([\"noScrollClass\", \"o-noscroll\"]);\n\nconst scrollClass = computed(() =>\n    getActiveClasses(\n        props.scroll === \"clip\" ? scrollClasses.value : noScrollClasses.value,\n    ),\n);\n\n// computed ref must be computed at least once for programmatic usage\nscrollClass.value;\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ close, promise: props.promise });\n</script>\n\n<template>\n    <Teleport :to=\"_teleport.to\" :disabled=\"_teleport.disabled\">\n        <transition\n            :name=\"animation\"\n            @after-enter=\"afterEnter\"\n            @before-leave=\"beforeLeave\">\n            <div\n                v-show=\"isActive\"\n                v-bind=\"$attrs\"\n                ref=\"rootRef\"\n                v-trap-focus=\"trapFocus\"\n                data-oruga=\"modal\"\n                :class=\"rootClasses\"\n                :tabindex=\"-1\"\n                :role=\"ariaRole\"\n                :aria-label=\"ariaLabel\"\n                :aria-modal=\"isActive\">\n                <div\n                    :class=\"overlayClasses\"\n                    tabindex=\"-1\"\n                    aria-hidden=\"true\"\n                    @click=\"cancel('outside')\" />\n\n                <div :class=\"contentClasses\" :style=\"customStyle\">\n                    <!-- injected component for programmatic usage -->\n                    <component\n                        v-bind=\"$props.props\"\n                        :is=\"component\"\n                        v-if=\"component\"\n                        v-on=\"$props.events\"\n                        @close=\"close\" />\n                    <!--\n                        @slot Modal default content, default is content prop\n                        @binding {(...args): void} close - function to close the component\n                    -->\n                    <slot v-else :close=\"close\">\n                        <div v-if=\"content\">{{ content }}</div>\n                    </slot>\n\n                    <o-icon\n                        v-if=\"showX\"\n                        v-show=\"!isAnimating\"\n                        clickable\n                        both\n                        :class=\"closeClasses\"\n                        :icon=\"closeIcon\"\n                        :size=\"closeIconSize\"\n                        @click=\"cancel('x')\" />\n                </div>\n            </div>\n        </transition>\n    </Teleport>\n</template>\n","import { createVNode, render } from \"vue\";\n\nimport Modal from \"./Modal.vue\";\nimport type { ModalProps } from \"./types\";\n\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\nimport { VueInstance } from \"@/utils/plugins\";\nimport { merge } from \"@/utils/helpers\";\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\n\ndeclare module \"../../index\" {\n    interface OrugaProgrammatic {\n        modal: typeof ModalProgrammatic;\n    }\n}\n\nconst instances = new InstanceRegistry<typeof Modal>();\n\ntype ProgrammaticProps = Readonly<\n    string | (ModalProps & OrugaOptions[\"modal\"])\n>;\n\nconst ModalProgrammatic = {\n    open(params: ProgrammaticProps): ProgrammaticExpose {\n        const componentParams =\n            typeof params === \"string\"\n                ? {\n                      content: params,\n                  }\n                : { ...params };\n\n        let slot;\n        if (Array.isArray(componentParams.content)) {\n            slot = componentParams.content;\n            delete componentParams.content;\n        }\n\n        const defaultParams = {\n            programmatic: { instances },\n            active: true, // set the active state to true\n        };\n\n        const propsData = merge(defaultParams, componentParams);\n        propsData.promise = new Promise((p1, p2) => {\n            propsData.programmatic.resolve = p1;\n            propsData.programmatic.reject = p2;\n        });\n\n        const defaultSlot = () => slot;\n\n        const app = VueInstance;\n        const vnode = createVNode(Modal, propsData, defaultSlot);\n        vnode.appContext = app._context;\n        render(vnode, document.createElement(\"div\"));\n\n        // return exposed functionalities\n        return vnode.component.exposed as ProgrammaticExpose;\n    },\n    closeAll(...args: any[]): void {\n        instances.walk((entry) => entry.exposed.close(...args));\n    },\n};\n\nexport default ModalProgrammatic;\n","import type { App, Plugin } from \"vue\";\n\nimport Modal from \"./Modal.vue\";\nimport ModalProgrammatic from \"./ModalProgrammatic\";\n\nimport {\n    registerComponent,\n    registerComponentProgrammatic,\n} from \"@/utils/plugins\";\n\n/** export modal specific types */\nexport type { ModalProps } from \"./types\";\n\n/** export modal plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Modal);\n        registerComponentProgrammatic(app, \"modal\", ModalProgrammatic);\n    },\n} as Plugin;\n\n/** export modal components */\nexport { ModalProgrammatic, Modal as OModal };\n","<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses, usePropBinding } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Bold notification blocks to alert your users of something\n * @displayName Notification\n * @requires ./NotificationNotice.vue\n * @style _notification.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ONotification\",\n    configField: \"notification\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether modal is active or not, use v-model:active to make it two-way binding */\n    active: { type: Boolean, default: true },\n    /**\n     * Type (color) of the notification\n     * @values info, success, warning, danger\n     */\n    type: {\n        type: String,\n        default: undefined,\n        validator: (value: string) =>\n            [\"info\", \"success\", \"warning\", \"danger\", undefined].indexOf(value) >\n            -1,\n    },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"notification.variant\"),\n    },\n    /**\n     * Which position the notification will appear when programmatically\n     * @values top-right, top, top-left, bottom-right, bottom, bottom-left\n     */\n    position: {\n        type: String,\n        default: () => getOption(\"notification.position\", \"top\"),\n        validator: (value: string) =>\n            [\n                \"top-right\",\n                \"top\",\n                \"top-left\",\n                \"bottom-right\",\n                \"bottom\",\n                \"bottom-left\",\n            ].indexOf(value) > -1,\n    },\n    /** Message text (can contain HTML), unnecessary when default slot is used */\n    message: {\n        type: [String, Array] as PropType<string | string[]>,\n        default: undefined,\n    },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"notification.animation\", \"fade\"),\n    },\n    /** Accessibility label for the close button */\n    ariaCloseLabel: {\n        type: String,\n        default: () => getOption(\"notification.ariaCloseLabel\", \"Close\"),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"notification.iconPack\"),\n    },\n    /** Icon name to use */\n    icon: { type: String, default: undefined },\n    /**\n     * Icon size\n     * @values small, medium, large\n     */\n    iconSize: {\n        type: String,\n        default: () => getOption(\"notification.iconSize\", \"large\"),\n    },\n    /** Add close button to the item that closes the notification */\n    closable: { type: Boolean, default: false },\n    /** Close icon name */\n    closeIcon: {\n        type: String,\n        default: () => getOption(\"notification.closeIcon\", \"close\"),\n    },\n    /**\n     * Size of close icon\n     * @values small, medium, large\n     */\n    closeIconSize: {\n        type: String,\n        default: () => getOption(\"notification.closeIconSize\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the close button container */\n    closeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the content element */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the icon on the left */\n    iconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the element when positioned */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the notification variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the wrapper element */\n    wrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on component close event\n     * @param value {any} - close event data\n     */\n    (e: \"close\", ...args: any[]): void;\n}>();\n\nconst isActive = usePropBinding<boolean>(\"active\", props, emits, {\n    passive: true,\n});\n\n/** Icon name (MDI) based on type. */\nconst computedIcon = computed(() => {\n    if (props.icon) return props.icon;\n\n    switch (props.type) {\n        case \"info\":\n            return \"information\";\n        case \"success\":\n            return \"check-circle\";\n        case \"warning\":\n            return \"alert\";\n        case \"danger\":\n            return \"alert-circle\";\n        default:\n            return null;\n    }\n});\n\n/** Close the Message and emit events. */\nfunction close(...args: any[]): void {\n    isActive.value = false;\n    emits(\"close\", ...args);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-notification\"],\n    [\n        \"variantClass\",\n        \"o-notification--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"positionClass\",\n        \"o-notification--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n);\n\nconst wrapperClasses = defineClasses([\n    \"wrapperClass\",\n    \"o-notification__wrapper\",\n]);\n\nconst iconClasses = defineClasses([\"iconClass\", \"o-notification__icon\"]);\n\nconst contentClasses = defineClasses([\n    \"contentClass\",\n    \"o-notification__content\",\n]);\n\nconst closeClasses = defineClasses([\"closeClass\", \"o-notification__close\"]);\n</script>\n\n<template>\n    <transition :name=\"animation\">\n        <article\n            v-show=\"isActive\"\n            v-bind=\"$attrs\"\n            :class=\"rootClasses\"\n            data-oruga=\"notification\">\n            <button\n                v-if=\"closable\"\n                :class=\"closeClasses\"\n                type=\"button\"\n                :aria-label=\"ariaCloseLabel\"\n                @click=\"close({ action: 'close', method: 'x' })\">\n                <o-icon\n                    clickable\n                    :pack=\"iconPack\"\n                    both\n                    :icon=\"closeIcon\"\n                    :size=\"closeIconSize\" />\n            </button>\n\n            <!--\n                @slot Notification inner content, outside of the message container\n                @binding {(...args): void} close - function to close the notification\n            -->\n            <slot name=\"inner\" :close=\"close\" />\n\n            <div v-if=\"$slots.default || message\" :class=\"wrapperClasses\">\n                <o-icon\n                    v-if=\"computedIcon\"\n                    :icon=\"computedIcon\"\n                    :pack=\"iconPack\"\n                    :class=\"iconClasses\"\n                    both\n                    :size=\"iconSize\"\n                    aria-hidden />\n                <div :class=\"contentClasses\">\n                    <!--\n                        @slot Notification default content, default is message prop\n                        @binding {(...args): void} close - function to close the notification\n                    -->\n                    <slot :close=\"close\">\n                        <span v-if=\"message\" v-html=\"message\" />\n                    </slot>\n                </div>\n            </div>\n        </article>\n    </transition>\n</template>\n","<script setup lang=\"ts\">\nimport {\n    computed,\n    ref,\n    onMounted,\n    onBeforeMount,\n    watch,\n    type PropType,\n    type Component,\n} from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    defineClasses,\n    getActiveClasses,\n    useProgrammaticComponent,\n} from \"@/composables\";\n\nimport type { NotifcationProps } from \"./types\";\nimport type { ProgrammaticInstance, ComponentClass } from \"@/types\";\n\n/**\n * Notification Notice is an extension of the Notification component and is used for the programmatic usage\n * @displayName Notification Notice\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ONotificationNotice\",\n    configField: \"notification\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether notification is active or not, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: true },\n    /**\n     * Which position the notification will appear when programmatically.\n     * @values top-right, top, top-left, bottom-right, bottom, bottom-left\n     */\n    position: {\n        type: String,\n        default: () => getOption(\"notification.position\", \"top\"),\n        validator: (value: string) =>\n            [\n                \"top-right\",\n                \"top\",\n                \"top-left\",\n                \"bottom-right\",\n                \"bottom\",\n                \"bottom-left\",\n            ].indexOf(value) > -1,\n    },\n    /** Hide notification after duration (in miliseconds) */\n    duration: {\n        type: Number,\n        default: () => getOption(\"notification.duration\", 2000),\n    },\n    /** Show the Notification infinitely until it is dismissed. */\n    infinite: { type: Boolean, default: false },\n    /** If notice should queue with others notices (snackbar/toast/notification). */\n    queue: {\n        type: Boolean,\n        default: () => getOption(\"notification.queue\"),\n    },\n    /** Callback function to call after user canceled (pressed escape / clicked outside). */\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\n    /** Callback function to call after close (programmatically close or user canceled). */\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\n    /**\n     * Component to be injected.\n     * Close notification within the component by emitting a 'close' event — $emit('close').\n     */\n    component: {\n        type: [Object, Function] as PropType<Component>,\n        default: undefined,\n    },\n    /** Props to be binded to the injected component. */\n    props: { type: Object, default: undefined },\n    /** Events to be binded to the injected component. */\n    events: { type: Object, default: () => ({}) },\n    /**\n     * DOM element the toast will be created on (for programmatic usage).\n     * Note that this also changes the position of the toast from fixed to absolute.\n     * Meaning that the container should be fixed.\n     */\n    container: {\n        type: [Object, String] as PropType<string | HTMLElement>,\n        default: () => getOption(\"notification.container\", \"body\"),\n    },\n    /**\n     * Props passed to the internal notification component.\n     * @ignore\n     */\n    notification: {\n        type: Object as PropType<NotifcationProps>,\n        default: () => ({}),\n    },\n    /**\n     * This is used internally for programmatic usage.\n     * @ignore\n     */\n    programmatic: {\n        type: Object as PropType<ProgrammaticInstance>,\n        default: undefined,\n    },\n    /**\n     * This is used internally for programmatic usage.\n     * @ignore\n     */\n    promise: { type: Promise, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Root class of the notice */\n    noticeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the notice when positioned */\n    noticePositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the custom container element */\n    noticeCustomContainerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on component close event\n     * @param value {any} - close event data\n     */\n    (e: \"close\", ...args: any[]): void;\n}>();\n\nconst notificationRef = ref();\n\n/** add programmatic usage to this component */\nconst { isActive, close, container } = useProgrammaticComponent(\n    () => notificationRef.value.$el,\n    props,\n    emits,\n    {\n        cancelOptions: [\"escape\", \"x\"],\n    },\n);\n\nconst parentTop = ref(null);\nconst parentBottom = ref(null);\n\nconst timer = ref();\n\nwatch(\n    () => isActive,\n    (value) => {\n        if (value) setAutoClose();\n        else if (timer.value) clearTimeout(timer.value);\n    },\n);\n\n/** Create or inject notice dom container elements. */\nonBeforeMount(() => {\n    if (\n        noticeClasses.value &&\n        positionBottomClasses.value &&\n        positionTopClasses.value\n    ) {\n        const rootClasses = getActiveClasses(noticeClasses.value);\n        const topClasses = getActiveClasses(positionTopClasses.value);\n        const bottomClasses = getActiveClasses(positionBottomClasses.value);\n\n        parentTop.value = container.value.querySelector(\n            `.${rootClasses.join(\".\")}.${topClasses.join(\".\")}`,\n        );\n        parentBottom.value = container.value.querySelector(\n            `.${rootClasses.join(\".\")}.${bottomClasses.join(\".\")}`,\n        );\n\n        if (parentTop.value && parentBottom.value) return;\n\n        if (!parentTop.value) {\n            parentTop.value = document.createElement(\"div\");\n            parentTop.value.className = `${rootClasses.join(\n                \" \",\n            )} ${topClasses.join(\" \")}`;\n        }\n\n        if (!parentBottom.value) {\n            parentBottom.value = document.createElement(\"div\");\n            parentBottom.value.className = `${rootClasses.join(\n                \" \",\n            )} ${bottomClasses.join(\" \")}`;\n        }\n\n        container.value.appendChild(parentTop.value);\n        container.value.appendChild(parentBottom.value);\n\n        if (container.value.tagName !== \"BODY\") {\n            const classes = getActiveClasses(\n                noticeCustomContainerClasses.value,\n            );\n            if (classes?.length)\n                classes\n                    .filter((c) => !!c)\n                    .forEach((c: string) => {\n                        parentTop.value.classList.add(c);\n                        parentBottom.value.classList.add(c);\n                    });\n        }\n    }\n});\n\nonMounted(() => {\n    showNotice();\n    setAutoClose();\n});\n\nconst correctParent = computed(() => {\n    switch (props.position) {\n        case \"top-right\":\n        case \"top\":\n        case \"top-left\":\n            return parentTop.value;\n\n        case \"bottom-right\":\n        case \"bottom\":\n        case \"bottom-left\":\n            return parentBottom.value;\n        default:\n            return null;\n    }\n});\n\nconst shouldQueue = computed(() =>\n    props.queue\n        ? parentTop.value.childElementCount > 0 ||\n          parentBottom.value.childElementCount > 0\n        : false,\n);\n\nfunction showNotice(): void {\n    if (shouldQueue.value) correctParent.value.innerHTML = \"\";\n    correctParent.value.insertAdjacentElement(\n        \"afterbegin\",\n        notificationRef.value.$el,\n    );\n    isActive.value = true;\n}\n\n/** Set timer to auto close message */\nfunction setAutoClose(): void {\n    if (!props.infinite) {\n        // clear old timer\n        if (timer.value) clearTimeout(timer.value);\n        // set new timer\n        timer.value = setTimeout(() => {\n            if (isActive.value)\n                handleClose({ action: \"close\", method: \"timeout\" });\n        }, props.duration);\n    }\n}\n\nfunction handleClose(...args: any[]): void {\n    clearTimeout(timer.value);\n    close(...args);\n}\n\n// --- Computed Component Classes ---\n\nconst noticeClasses = defineClasses([\"noticeClass\", \"o-notices\"]);\n\nconst positionTopClasses = defineClasses([\n    \"noticePositionClass\",\n    \"o-notices--\",\n    \"top\",\n]);\nconst positionBottomClasses = defineClasses([\n    \"noticePositionClass\",\n    \"o-notices--\",\n    \"bottom\",\n]);\n\nconst noticeCustomContainerClasses = defineClasses([\n    \"noticeCustomContainerClass\",\n    \"o-notices__custom-container\",\n]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ close: handleClose, promise: props.promise });\n</script>\n\n<template>\n    <o-notification\n        v-bind=\"notification\"\n        ref=\"notificationRef\"\n        v-model:active=\"isActive\"\n        :position=\"position\"\n        @close=\"handleClose\">\n        <template #inner=\"{ close }\">\n            <!-- injected component for programmatic usage -->\n            <component\n                v-bind=\"$props.props\"\n                :is=\"component\"\n                v-if=\"component\"\n                v-on=\"$props.events\"\n                @close=\"close\" />\n        </template>\n        <slot />\n    </o-notification>\n</template>\n","import { createVNode, render } from \"vue\";\n\nimport NotificationNotice from \"./NotificationNotice.vue\";\nimport type { NotifcationNoticeProps, NotifcationProps } from \"./types\";\n\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\nimport { VueInstance } from \"@/utils/plugins\";\nimport { merge } from \"@/utils/helpers\";\nimport { getOption } from \"@/utils/config\";\nimport type {\n    OrugaOptions,\n    ProgrammaticExpose,\n    ProgrammaticInstance,\n} from \"@/types\";\n\ndeclare module \"../../index\" {\n    interface OrugaProgrammatic {\n        notification: typeof NotificationProgrammatic;\n    }\n}\n\nconst instances = new InstanceRegistry<typeof NotificationNotice>();\n\ntype ProgrammaticProps = Readonly<\n    | string\n    | (NotifcationNoticeProps &\n          NotifcationProps &\n          OrugaOptions[\"notification\"] &\n          Record<string, unknown>)\n>;\n\nconst NotificationProgrammatic = {\n    open(params: ProgrammaticProps): ProgrammaticExpose {\n        const componentParams =\n            typeof params === \"string\"\n                ? {\n                      message: params,\n                  }\n                : { ...params };\n\n        let slot;\n        if (Array.isArray(componentParams.message)) {\n            slot = componentParams.message;\n            delete componentParams.message;\n        }\n\n        const defaultParams = {\n            programmatic: { instances } as ProgrammaticInstance<\n                typeof NotificationNotice\n            >,\n            active: true, // set the active state to true\n            position: getOption(\"notification.position\", \"top-right\"),\n        };\n\n        const notificationParams = componentParams.notification\n            ? componentParams.notification\n            : componentParams;\n\n        const propsData = merge(defaultParams, componentParams);\n        propsData.notification = merge({}, notificationParams);\n        propsData.promise = new Promise((p1, p2) => {\n            propsData.programmatic.resolve = p1;\n            propsData.programmatic.reject = p2;\n        });\n\n        const defaultSlot = () => slot;\n\n        const app = VueInstance;\n        const vnode = createVNode(NotificationNotice, propsData, defaultSlot);\n        vnode.appContext = app._context;\n        render(vnode, document.createElement(\"div\"));\n\n        // return exposed functionalities\n        return vnode.component.exposed as ProgrammaticExpose;\n    },\n    closeAll(...args: any[]): void {\n        instances.walk((entry) => entry.exposed.close(...args));\n    },\n};\n\nexport default NotificationProgrammatic;\n","import type { App, Plugin } from \"vue\";\n\nimport Notification from \"./Notification.vue\";\nimport NotificationProgrammatic from \"./NotificationProgrammatic\";\n\nimport {\n    registerComponent,\n    registerComponentProgrammatic,\n} from \"@/utils/plugins\";\n\n/** export notification specific types */\nexport type { NotifcationNoticeProps, NotifcationProps } from \"./types\";\n\n/** export notification plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Notification);\n        registerComponentProgrammatic(\n            app,\n            \"notification\",\n            NotificationProgrammatic,\n        );\n    },\n} as Plugin;\n\n/** export notification components */\nexport { Notification as ONotification, NotificationProgrammatic };\n","<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport type { ClassBind, DynamicComponent } from \"@/types\";\n\ndefineOptions({\n    isOruga: true,\n    name: \"OPaginationButton\",\n    configField: \"pagination\",\n});\n\nconst props = defineProps({\n    number: { type: Number, default: undefined },\n    isCurrent: { type: Boolean, default: false },\n    click: {\n        type: Function as PropType<(event: Event) => void>,\n        required: true,\n    },\n    ariaLabel: { type: String, default: undefined },\n    disabled: { type: Boolean, default: false },\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: \"button\" as DynamicComponent,\n    },\n    class: { type: String, default: undefined },\n    linkClass: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n    linkCurrentClass: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n});\n\n// --- Computed Component Classes ---\n\nconst linkClasses = computed(() => [\n    ...props.linkClass,\n    props.class,\n    ...(props.isCurrent ? props.linkCurrentClass : []),\n]);\n</script>\n\n<template>\n    <component\n        :is=\"tag\"\n        role=\"button\"\n        :tabindex=\"disabled ? null : 0\"\n        :disabled=\"disabled\"\n        :class=\"linkClasses\"\n        v-bind=\"$attrs\"\n        :aria-label=\"ariaLabel\"\n        :aria-current=\"isCurrent\"\n        @click.prevent=\"click\"\n        @keydown.enter.prevent=\"click\">\n        <slot>{{ number }}</slot>\n    </component>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, watch, nextTick, type PropType } from \"vue\";\n\nimport OPaginationButton from \"./PaginationButton.vue\";\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses, useMatchMedia, usePropBinding } from \"@/composables\";\n\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * A responsive and flexible pagination\n * @displayName Pagination\n * @style _pagination.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OPagination\",\n    configField: \"pagination\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Total count of items */\n    total: { type: Number, default: undefined },\n    /** Items count for each page */\n    perPage: {\n        type: [Number, String],\n        default: () => getOption(\"pagination.perPage\", 20),\n    },\n    /** Current page number, use v-model:current to make it two-way binding. */\n    current: { type: Number, default: 1 },\n    /** Number of pagination items to show before current page. */\n    rangeBefore: { type: Number, default: 1 },\n    /** Number of pagination items to show after current page. */\n    rangeAfter: { type: Number, default: 1 },\n    /**\n     * Pagination size\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"pagination.size\"),\n    },\n    /** Simple style */\n    simple: {\n        type: Boolean,\n        default: () => getOption(\"pagination.simple\", false),\n    },\n    /** Rounded button style */\n    rounded: {\n        type: Boolean,\n        default: () => getOption(\"pagination.rounded\", false),\n    },\n    /**\n     * Buttons order\n     * @values centered, right, left\n     */\n    order: {\n        type: String,\n        default: () => getOption(\"pagination.order\", \"right\"),\n        validator: (value: string) =>\n            [\"centered\", \"right\", \"left\"].indexOf(value) >= 0,\n    },\n    /** Pagination button tag name */\n    buttonTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () =>\n            getOption<DynamicComponent>(\"pagination.buttonTag\", \"button\"),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"pagination.iconPack\"),\n    },\n    /** Icon to use for previous button */\n    iconPrev: {\n        type: String,\n        default: () => getOption(\"pagination.iconPrev\", \"chevron-left\"),\n    },\n    /** Icon to use for next button */\n    iconNext: {\n        type: String,\n        default: () => getOption(\"pagination.iconNext\", \"chevron-right\"),\n    },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"pagination.mobileBreakpoint\"),\n    },\n    /** Accessibility label for the next page button. */\n    ariaNextLabel: {\n        type: String,\n        default: () => getOption(\"pagination.ariaNextLabel\", \"Next page\"),\n    },\n    /** Accessibility label for the previous page button. */\n    ariaPreviousLabel: {\n        type: String,\n        default: () =>\n            getOption(\"pagination.ariaPreviousLabel\", \"Previous page\"),\n    },\n    /** Accessibility label for the page button. */\n    ariaPageLabel: {\n        type: String,\n        default: () => getOption(\"pagination.ariaPageLabel\", \"page\"),\n    },\n    /** Accessibility label for the current page button. */\n    ariaCurrentLabel: {\n        type: String,\n        default: () => getOption(\"pagination.ariaCurrentLabel\", \"Current page\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the prev button */\n    prevButtonClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the next button */\n    nextButtonClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the pagination list */\n    listClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the pagination list items */\n    listItemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the link button */\n    linkClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the current link */\n    linkCurrentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the pagination ellipsis */\n    ellipsisClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the info in `simple` mode */\n    infoClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the pagination order */\n    orderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the pagination in `simple` mode */\n    simpleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the pagination when rounded */\n    roundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the disabled link */\n    linkDisabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class for the pagination size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of pagination component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * current prop two-way binding\n     * @param value {number} updated current prop\n     */\n    (e: \"update:current\", value: number): void;\n    /**\n     * on current change event\n     * @param value {number} current value\n     */\n    (e: \"change\", event: number): void;\n}>();\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst current = usePropBinding(\"current\", props, emits);\n\n/** Total page size (count). */\nconst pageCount = computed(() =>\n    Math.ceil(props.total / Number(props.perPage)),\n);\n\n/** If current page is trying to be greater than page count, set to last. */\nwatch(\n    () => pageCount.value,\n    (value) => {\n        if (props.current > value) last();\n    },\n);\n\n/** First item of the page (count). */\nconst firstItem = computed(() => {\n    const perPage = Number(props.perPage);\n    const firstItem = props.current * perPage - perPage + 1;\n    return firstItem >= 0 ? firstItem : 0;\n});\n\n/** Check if previous button is available. */\nconst hasPrev = computed(() => props.current > 1);\n\n/** Check if first page button should be visible. */\nconst hasFirst = computed(() => props.current >= 2 + props.rangeBefore);\n\n/** Check if first ellipsis should be visible. */\nconst hasFirstEllipsis = computed(() => props.current >= props.rangeBefore + 4);\n\n/** Check if last page button should be visible. */\nconst hasLast = computed(\n    () => props.current <= pageCount.value - (1 + props.rangeAfter),\n);\n\n/** Check if last ellipsis should be visible. */\nconst hasLastEllipsis = computed(\n    () => props.current < pageCount.value - (2 + props.rangeAfter),\n);\n\n/** Check if next button is available. */\nconst hasNext = computed(() => props.current < pageCount.value);\n\n/**\n * Get near pages, 1 before and 1 after the current.\n * Also add the click event to the array.\n */\nconst pagesInRange = computed<ReturnType<typeof getPage>[]>(() => {\n    if (props.simple) return;\n\n    let left = Math.max(1, props.current - props.rangeBefore);\n    if (left - 1 === 2) {\n        left--; // Do not show the ellipsis if there is only one to hide\n    }\n    let right = Math.min(props.current + props.rangeAfter, pageCount.value);\n    if (pageCount.value - right === 2) {\n        right++; // Do not show the ellipsis if there is only one to hide\n    }\n\n    const pages = [];\n    for (let i = left; i <= right; i++) {\n        pages.push(getPage(i));\n    }\n    return pages;\n});\n\n/** Get properties for a page */\nfunction getPage(\n    num: number,\n    ariaLabel?: string,\n): {\n    number: number;\n    isCurrent: boolean;\n    click: (event: Event) => void;\n    ariaLabel: string;\n    tag: DynamicComponent;\n} {\n    return {\n        number: num,\n        isCurrent: props.current === num,\n        click: (event: Event): void => changePage(num, event),\n        ariaLabel: ariaLabel || getAriaPageLabel(num, props.current === num),\n        tag: props.buttonTag,\n    };\n}\n\n/** Get text for aria-label according to page number. */\nfunction getAriaPageLabel(pageNumber: number, isCurrent: boolean): string {\n    if (props.ariaPageLabel && (!isCurrent || !props.ariaCurrentLabel))\n        return props.ariaPageLabel + \" \" + pageNumber + \".\";\n    else if (props.ariaPageLabel && isCurrent && props.ariaCurrentLabel)\n        return (\n            props.ariaCurrentLabel +\n            \", \" +\n            props.ariaPageLabel +\n            \" \" +\n            pageNumber +\n            \".\"\n        );\n    return null;\n}\n\n/** Previous button click listener. */\nfunction prev(event?: Event): void {\n    changePage(props.current - 1, event);\n}\n\n/** Next button click listener. */\nfunction next(event?: Event): void {\n    changePage(props.current + 1, event);\n}\n\n/** First button click listener. */\nfunction first(event?: Event): void {\n    changePage(1, event);\n}\n\n/** Last button click listener. */\nfunction last(event?: Event): void {\n    changePage(pageCount.value, event);\n}\n\nfunction changePage(page: number, event: Event): void {\n    if (props.current === page || page < 1 || page > pageCount.value) return;\n    emits(\"change\", page);\n    current.value = page;\n\n    // Set focus on element to keep tab order\n    if (event && event.target)\n        nextTick(() => (event.target as HTMLElement).focus());\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-pag\"],\n    [\n        \"orderClass\",\n        \"o-pag--\",\n        computed(() => props.order),\n        computed(() => !!props.order),\n    ],\n    [\n        \"sizeClass\",\n        \"o-pag--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\"simpleClass\", \"o-pag--simple\", null, computed(() => props.simple)],\n    [\"mobileClass\", \"o-pag--mobile\", null, isMobile],\n);\n\nconst prevBtnClasses = defineClasses(\n    [\"prevButtonClass\", \"o-pag__previous\"],\n    [\n        \"linkDisabledClass\",\n        \"o-pag__link--disabled\",\n        null,\n        computed(() => !hasPrev.value),\n    ],\n);\n\nconst nextBtnClasses = defineClasses(\n    [\"nextButtonClass\", \"o-pag__next\"],\n    [\n        \"linkDisabledClass\",\n        \"o-pag__link--disabled\",\n        null,\n        computed(() => !hasNext.value),\n    ],\n);\n\nconst infoClasses = defineClasses([\"infoClass\", \"o-pag__info\"]);\n\nconst ellipsisClasses = defineClasses([\"ellipsisClass\", \"o-pag__ellipsis\"]);\n\nconst listClasses = defineClasses([\"listClass\", \"o-pag__list\"]);\n\nconst linkClasses = defineClasses(\n    [\"linkClass\", \"o-pag__link\"],\n    [\n        \"roundedClass\",\n        \"o-pag__link--rounded\",\n        null,\n        computed(() => props.rounded),\n    ],\n);\n\nconst linkCurrentClasses = defineClasses([\n    \"linkCurrentClass\",\n    \"o-pag__link--current\",\n]);\n\nconst listItemClasses = defineClasses([\"listItemClass\", \"o-pag__item\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ last, first, prev, next });\n</script>\n\n<template>\n    <nav :class=\"rootClasses\" data-oruga=\"pagination\">\n        <!-- \n            @slot Previous button slot\n            @binding {number} number - page number \n            @binding {boolean} isCurrent - if page is current\n            @binding {(event:Event): void} click - onClick handler\n            @binding {string} ariaLabel - aria-label attribute\n        -->\n        <slot name=\"previous\" v-bind=\"getPage(current - 1, ariaPreviousLabel)\">\n            <o-pagination-button\n                v-bind=\"getPage(current - 1, ariaPreviousLabel)\"\n                :class=\"prevBtnClasses\"\n                :link-class=\"linkClasses\"\n                :link-current-class=\"linkCurrentClasses\">\n                <o-icon\n                    :icon=\"iconPrev\"\n                    :pack=\"iconPack\"\n                    both\n                    aria-hidden=\"true\" />\n            </o-pagination-button>\n        </slot>\n        <!-- \n            @slot Next button slot\n            @binding {number} number - page number \n            @binding {boolean} isCurrent - if page is current\n            @binding {(event:Event): void} click - onClick handler\n            @binding {string} ariaLabel - aria-label attribute\n        -->\n        <slot name=\"next\" v-bind=\"getPage(current + 1, ariaNextLabel)\">\n            <o-pagination-button\n                v-bind=\"getPage(current + 1, ariaNextLabel)\"\n                :class=\"nextBtnClasses\"\n                :link-class=\"linkClasses\"\n                :link-current-class=\"linkCurrentClasses\">\n                <o-icon\n                    :icon=\"iconNext\"\n                    :pack=\"iconPack\"\n                    both\n                    aria-hidden=\"true\" />\n            </o-pagination-button>\n        </slot>\n\n        <small v-if=\"simple\" :class=\"infoClasses\">\n            <template v-if=\"perPage == 1\">\n                {{ firstItem }} / {{ total }}\n            </template>\n            <template v-else>\n                {{ firstItem }}-{{ Math.min(current * Number(perPage), total) }}\n                /\n                {{ total }}\n            </template>\n        </small>\n\n        <ul v-else :class=\"listClasses\">\n            <!--First-->\n            <li v-if=\"hasFirst\" :class=\"listItemClasses\">\n                <slot v-bind=\"getPage(1)\">\n                    <o-pagination-button\n                        v-bind=\"getPage(1)\"\n                        :link-class=\"linkClasses\"\n                        :link-current-class=\"linkCurrentClasses\" />\n                </slot>\n            </li>\n            <li v-if=\"hasFirstEllipsis\" :class=\"listItemClasses\">\n                <span :class=\"ellipsisClasses\">&hellip;</span>\n            </li>\n\n            <!--Pages-->\n            <li\n                v-for=\"page in pagesInRange\"\n                :key=\"page.number\"\n                :class=\"listItemClasses\">\n                <slot v-bind=\"page\">\n                    <o-pagination-button\n                        v-bind=\"page\"\n                        :link-class=\"linkClasses\"\n                        :link-current-class=\"linkCurrentClasses\" />\n                </slot>\n            </li>\n\n            <!--Last-->\n            <li v-if=\"hasLastEllipsis\" :class=\"listItemClasses\">\n                <span :class=\"ellipsisClasses\">&hellip;</span>\n            </li>\n            <li v-if=\"hasLast\" :class=\"listItemClasses\">\n                <!-- \n                    @slot Pagination button slot\n                    @binding {number} number - page number \n                    @binding {boolean} isCurrent - if page is current\n                    @binding {(event:Event): void} click - onClick handler\n                    @binding {string} ariaLabel - aria-label attribute\n                -->\n                <slot v-bind=\"getPage(pageCount)\">\n                    <o-pagination-button\n                        v-bind=\"getPage(pageCount)\"\n                        :link-class=\"linkClasses\"\n                        :link-current-class=\"linkCurrentClasses\" />\n                </slot>\n            </li>\n        </ul>\n    </nav>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Pagination from \"./Pagination.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export pagination plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Pagination);\n    },\n} as Plugin;\n\n/** export pagination components */\nexport { Pagination as OPagination };\n","<script setup lang=\"ts\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { uuid } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    useVModelBinding,\n    useInputHandler,\n} from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Select an option from a set\n * @displayName Radio\n * @style _radio.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"ORadio\",\n    configField: \"radio\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number, Boolean], default: undefined },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"radio.variant\"),\n    },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"radio.size\"),\n    },\n    /** Input label, unnecessary when default slot is used */\n    label: { type: String, default: undefined },\n    /** Same as native value */\n    nativeValue: { type: [String, Number, Boolean], default: undefined },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Same as native required */\n    required: { type: Boolean, default: false },\n    /** Same as native name */\n    name: { type: String, default: undefined },\n    /** Accessibility label to establish relationship between the checkbox and control label */\n    ariaLabelledby: { type: String, default: () => uuid() },\n    /** Same as native autocomplete options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"radio.autocomplete\", \"off\"),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when radio is disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the root element when checked */\n    checkedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the native input element */\n    inputClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the native input element when checked */\n    inputCheckedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the radio label */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the radio size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the radio variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string, number, boolean} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number | boolean): void;\n    /**\n     * on input change event\n     * @param value {string, number, boolean} input value\n     * @param event {Event} native event\n     */\n    (e: \"input\", value: string | number | boolean, event: Event): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n}>();\n\nconst inputRef = ref();\n\n// use form input functionalities\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\n    inputRef,\n    emits,\n    props,\n);\n\nconst vmodel = useVModelBinding<string | number | boolean>(props, emits);\n\nconst isChecked = computed(() => vmodel.value === props.nativeValue);\n\nfunction onInput(event: Event): void {\n    emits(\"input\", vmodel.value, event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-radio\"],\n    [\"checkedClass\", \"o-radio--checked\", null, isChecked],\n    [\n        \"sizeClass\",\n        \"o-radio--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"disabledClass\",\n        \"o-radio--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\n        \"variantClass\",\n        \"o-radio--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst inputClasses = defineClasses(\n    [\"inputClass\", \"o-radio__input\"],\n    [\"inputCheckedClass\", \"o-radio__input--checked\", null, isChecked],\n);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-radio__label\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <label\n        ref=\"label\"\n        :class=\"rootClasses\"\n        data-oruga=\"radio\"\n        role=\"radio\"\n        :aria-checked=\"isChecked\"\n        @click.stop=\"setFocus\"\n        @keydown.prevent.enter=\"setFocus\">\n        <input\n            v-bind=\"$attrs\"\n            ref=\"inputRef\"\n            v-model=\"vmodel\"\n            type=\"radio\"\n            data-oruga-input=\"radio\"\n            :class=\"inputClasses\"\n            :disabled=\"disabled\"\n            :required=\"required\"\n            :name=\"name\"\n            :autocomplete=\"autocomplete\"\n            :value=\"nativeValue\"\n            :aria-labelledby=\"ariaLabelledby\"\n            @click.stop\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"onInput\" />\n\n        <span\n            v-if=\"label || $slots.default\"\n            :id=\"ariaLabelledby\"\n            :class=\"labelClasses\">\n            <!--\n                @slot Override the label, default is label prop \n            -->\n            <slot>{{ label }}</slot>\n        </span>\n    </label>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Radio from \"./Radio.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export radio plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Radio);\n    },\n} as Plugin;\n\n/** export radio components */\nexport { Radio as ORadio };\n","import type { App, Plugin } from \"vue\";\n\nimport Select from \"./Select.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export select specific types */\nexport type { OptionsItem } from \"./types\";\n\n/** export select plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Select);\n    },\n} as Plugin;\n\n/** export select components */\nexport { Select as OSelect };\n","<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { toCssDimension } from \"@/utils/helpers\";\nimport { defineClasses } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * A placeholder for content to load\n * @displayName Skeleton\n * @style _skeleton.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSkeleton\",\n    configField: \"skeleton\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Show or hide loader\t */\n    active: { type: Boolean, default: true },\n    /** Show a loading animation */\n    animated: {\n        type: Boolean,\n        default: () => getOption(\"skeleton.animated\", true),\n    },\n    /** Custom width */\n    width: { type: [Number, String], default: undefined },\n    /** Custom height */\n    height: { type: [Number, String], default: undefined },\n    /** Show a circle shape */\n    circle: { type: Boolean, default: false },\n    /** Enable rounded style */\n    rounded: {\n        type: Boolean,\n        default: () => getOption(\"skeleton.rounded\", true),\n    },\n    /** Number of shapes to display */\n    count: { type: Number, default: 1 },\n    /**\n     * Size of skeleton\n     * @values small, medium, large\n     */\n    size: { type: String, default: undefined },\n    /**\n     * Skeleton position in relation to the element\n     * @values left, centered, right\n     */\n    position: {\n        type: String as PropType<\"left\" | \"centered\" | \"right\">,\n        default: \"left\",\n        validator: (value: string) =>\n            [\"left\", \"centered\", \"right\"].indexOf(value) > -1,\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the skeleton animation */\n    animationClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the skeleton position */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the skeleton item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the skeleton item rounded */\n    itemRoundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the skeleton size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst itemStyle = computed(() => ({\n    height: toCssDimension(props.height),\n    width: toCssDimension(props.width),\n    borderRadius: props.circle ? \"50%\" : null,\n}));\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-sklt\"],\n    [\n        \"positionClass\",\n        \"o-sklt--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n);\n\nconst itemClasses = defineClasses(\n    [\"itemClass\", \"o-sklt__item\"],\n    [\n        \"itemRoundedClass\",\n        \"o-sklt__item--rounded\",\n        null,\n        computed(() => props.rounded),\n    ],\n    [\n        \"animationClass\",\n        \"o-sklt__item--animated\",\n        null,\n        computed(() => props.animated),\n    ],\n    [\n        \"sizeClass\",\n        \"o-sklt__item--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n);\n</script>\n\n<template>\n    <div v-if=\"active\" data-oruga=\"skeleton\" :class=\"rootClasses\">\n        <div\n            v-for=\"i in count\"\n            :key=\"i\"\n            :class=\"itemClasses\"\n            :style=\"itemStyle\" />\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Skeleton from \"./Skeleton.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export skeleton plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Skeleton);\n    },\n} as Plugin;\n\n/** export skeleton components */\nexport { Skeleton as OSkeleton };\n","<script setup lang=\"ts\">\nimport {\n    ref,\n    computed,\n    watch,\n    onMounted,\n    onBeforeUnmount,\n    type Component,\n    type PropType,\n} from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    defineClasses,\n    getActiveClasses,\n    useClickOutside,\n    useMatchMedia,\n    useProgrammaticComponent,\n} from \"@/composables\";\n\nimport type { ComponentClass, ProgrammaticInstance } from \"@/types\";\n\n/**\n * A sidebar to use as left/right overlay or static\n * @displayName Sidebar\n * @style _sidebar.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSidebar\",\n    configField: \"sidebar\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether siedbar is active or not, use v-model:active to make it two-way binding. */\n    active: { type: Boolean, default: false },\n    /**\n     * Color of the sidebar\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"sidebar.variant\"),\n    },\n    /** Show an overlay like modal */\n    overlay: { type: Boolean, default: getOption(\"sidebar.overlay\", false) },\n    /** Display the Sidebear inline */\n    inline: { type: Boolean, default: false },\n    /**\n     * Sidebar position\n     * @values top, right, bottom, left\n     */\n    position: {\n        type: String as PropType<\"top\" | \"right\" | \"bottom\" | \"left\">,\n        default: () => getOption(\"sidebar.position\", \"left\"),\n    },\n    /** Show sidebar in fullheight */\n    fullheight: {\n        type: Boolean,\n        default: getOption(\"sidebar.fullheight\", false),\n    },\n    /** Show sidebar in fullwidth */\n    fullwidth: {\n        type: Boolean,\n        default: getOption(\"sidebar.fullwidth\", false),\n    },\n    /** Show a small sidebar */\n    reduce: { type: Boolean, default: getOption(\"sidebar.reduce\", false) },\n    /**\n     * Custom layout on mobile\n     * @values fullwidth, reduced, hidden\n     */\n    mobile: {\n        type: String,\n        default: getOption(\"sidebar.mobile\"),\n        validator: (value: string) =>\n            [\"fullwidth\", \"reduced\", \"hidden\"].indexOf(value) >= 0,\n    },\n    /** Expand sidebar on hover when reduced or mobile is reduce */\n    expandOnHover: {\n        type: Boolean,\n        default: getOption(\"sidebar.expandOnHover\", false),\n    },\n    /** Custom animation (transition name) */\n    animation: {\n        type: String,\n        default: () => getOption(\"sidebar.animation\"),\n    },\n    /**\n     * Is Sidebar cancleable by pressing escape or clicking outside.\n     * @values escape, outside, true, false\n     */\n    cancelable: {\n        type: [Array, Boolean] as PropType<string[] | boolean>,\n        default: () => getOption(\"sidebar.cancelable\", [\"escape\", \"outside\"]),\n    },\n    /** Callback function to call after user canceled (pressed escape / clicked outside) */\n    onCancel: { type: Function as PropType<() => void>, default: () => {} },\n    /** Callback function to call after close (programmatically close or user canceled) */\n    onClose: { type: Function as PropType<() => void>, default: () => {} },\n    /**\n     * Use `clip` to remove the body scrollbar, `keep` to have a non scrollable scrollbar to avoid shifting background,\n     * but will set body to position fixed, might break some layouts.\n     * @values keep, clip\n     */\n    scroll: {\n        type: String,\n        default: () => getOption(\"sidebar.scroll\", \"clip\"),\n        validator: (value: string) => [\"clip\", \"keep\"].indexOf(value) >= 0,\n    },\n    /** Destroy sidebar on hide */\n    destroyOnHide: {\n        type: Boolean,\n        default: () => getOption(\"sidebar.destroyOnHide\", false),\n    },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"sidebar.mobileBreakpoint\"),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"sidebar.teleport\", false),\n    },\n    /**\n     * Component to be injected, used to open a component sidebar programmatically.\n     * Close sidebar within the component by emitting a 'close' event — emits('close')\n     */\n    component: {\n        type: [Object, Function] as PropType<Component>,\n        default: undefined,\n    },\n    /** Props to be binded to the injected component. */\n    props: { type: Object, default: undefined },\n    /** Events to be binded to the injected component. */\n    events: { type: Object, default: () => ({}) },\n    /** DOM element where the sidebar component will be created on (for programmatic usage). */\n    container: {\n        type: [Object, String] as PropType<string | HTMLElement>,\n        default: () => getOption(\"sidebar.container\", \"body\"),\n    },\n    /**\n     * This is used internally for programmatic usage.\n     * @ignore\n     */\n    programmatic: {\n        type: Object as PropType<ProgrammaticInstance>,\n        default: undefined,\n    },\n    /**\n     * This is used internally for programmatic usage.\n     * @ignore\n     */\n    promise: { type: Promise, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of sidebar component when its active */\n    activeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of sidebar when teleported */\n    teleportClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar overlay */\n    overlayClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar content */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar position */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar when is fullheight */\n    fullheightClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar when is fullwidth */\n    fullwidthClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar when its inlined */\n    inlineClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar when reduced */\n    reduceClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar when expanded on hover */\n    expandOnHoverClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of sidebar component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the body when sidebar clipped */\n    crollClipClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the body when sidebar is not clipped */\n    noScrollClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar content when sidebar is hidden */\n    hiddenClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sidebar content when sidebar is visible */\n    visibleClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /**\n     * on component close event\n     * @param value {any} - close event data\n     */\n    (e: \"close\", ...args: any[]): void;\n}>();\n\nconst rootRef = ref();\nconst sidebarContent = ref();\n\n/** add programmatic usage to this component */\nconst { isActive, close, cancel } = useProgrammaticComponent(\n    rootRef,\n    props,\n    emits,\n    {\n        destroyOnHide: props.destroyOnHide,\n        cancelOptions: getOption(\"sidebar.cancelable\", [\"escape\", \"outside\"]),\n    },\n);\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst savedScrollTop = ref(null);\nconst isAnimating = ref(!props.active);\n\nwatch(isActive, (value) => {\n    if (props.overlay) handleScroll();\n    if (value) addHandler();\n    else removeHandler();\n});\n\nconst _teleport = computed(() =>\n    typeof props.teleport === \"boolean\"\n        ? { to: \"body\", disabled: !props.teleport }\n        : { to: props.teleport, disabled: false },\n);\n\nconst transitionName = computed(() => {\n    if (props.animation) return props.animation;\n\n    const vertical = props.position === \"top\" || props.position === \"bottom\";\n    const right = props.position === \"right\";\n    const open = right ? !isActive.value : isActive.value;\n\n    return open\n        ? vertical\n            ? \"slide-down\"\n            : \"slide-next\"\n        : vertical\n          ? \"slide-up\"\n          : \"slide-prev\";\n});\n\nconst hideOnMobile = computed(\n    () => props.mobile === \"hidden\" && isMobile.value,\n);\n\nonMounted(() => {\n    if (props.active) addHandler();\n});\n\nonBeforeUnmount(() => {\n    removeHandler();\n    if (isClient) {\n        if (props.overlay) {\n            // reset scroll\n            const scrollto = savedScrollTop.value\n                ? savedScrollTop.value\n                : document.documentElement.scrollTop;\n            if (scrollClass.value) {\n                document.body.classList.remove(...scrollClass.value);\n                document.documentElement.classList.remove(...scrollClass.value);\n            }\n            document.documentElement.scrollTop = scrollto;\n            document.body.style.top = null;\n        }\n    }\n});\n\nlet removeOutsideListener = null;\n\n/** add outside click event listener */\nfunction addHandler(): void {\n    if (isClient && !props.overlay) {\n        removeOutsideListener = useClickOutside(sidebarContent, clickedOutside);\n    }\n}\n\n/** remove outside click event listener */\nfunction removeHandler(): void {\n    if (removeOutsideListener !== null) removeOutsideListener();\n}\n\n/** Close fixed sidebar if clicked outside. */\nfunction clickedOutside(event: Event): void {\n    if (props.inline || !isActive.value || isAnimating.value) return;\n    if (props.overlay || !event.composedPath().includes(sidebarContent.value))\n        event.preventDefault();\n    cancel(\"outside\");\n}\n\nfunction handleScroll(): void {\n    if (!isClient) return;\n\n    if (props.scroll === \"clip\") {\n        if (scrollClass.value?.length) {\n            if (isActive.value) {\n                document.documentElement.classList.add(...scrollClass.value);\n            } else {\n                document.documentElement.classList.remove(...scrollClass.value);\n            }\n        }\n        return;\n    }\n\n    savedScrollTop.value = savedScrollTop.value\n        ? savedScrollTop.value\n        : document.documentElement.scrollTop;\n\n    if (scrollClass.value) {\n        if (isActive.value) document.body.classList.add(...scrollClass.value);\n        else document.body.classList.remove(...scrollClass.value);\n    }\n\n    if (isActive.value) {\n        document.body.style.top = `-${savedScrollTop.value}px`;\n        return;\n    }\n\n    document.documentElement.scrollTop = savedScrollTop.value;\n    document.body.style.top = null;\n    savedScrollTop.value = null;\n}\n\n/** Transition after-enter hook */\nfunction afterEnter(): void {\n    isAnimating.value = false;\n}\n\n/** Transition before-leave hook */\nfunction beforeLeave(): void {\n    isAnimating.value = true;\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-side\"],\n    [\"mobileClass\", \"o-side--mobile\", null, isMobile],\n    [\"activeClass\", \"o-side--active\", null, isActive],\n    [\n        \"teleportClass\",\n        \"o-side--teleport\",\n        null,\n        computed(() => !!props.teleport),\n    ],\n    [\"inlineClass\", \"o-side--inline\", null, computed(() => props.inline)],\n);\n\nconst overlayClasses = defineClasses([\"overlayClass\", \"o-side__overlay\"]);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-side__content\"],\n    [\n        \"variantClass\",\n        \"o-side__content--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"positionClass\",\n        \"o-side__content--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n    [\n        \"fullheightClass\",\n        \"o-side__content--fullheight\",\n        null,\n        computed(() => props.fullheight),\n    ],\n    [\n        \"fullwidthClass\",\n        \"o-side__content--fullwidth\",\n        null,\n        computed(\n            () =>\n                props.fullwidth ||\n                (props.mobile === \"fullwidth\" && isMobile.value),\n        ),\n    ],\n    [\n        \"reduceClass\",\n        \"o-side__content--reduced\",\n        null,\n        computed(\n            () =>\n                props.reduce || (props.mobile === \"reduced\" && isMobile.value),\n        ),\n    ],\n    [\n        \"expandOnHoverClass\",\n        \"o-side__content--reduced-expand\",\n        null,\n        computed(\n            () =>\n                props.expandOnHover &&\n                (!isMobile.value || props.mobile !== \"fullwidth\"),\n        ),\n    ],\n    [\"visibleClass\", \"o-side__content--visible\", null, isActive],\n    [\n        \"hiddenClass\",\n        \"o-side__content--hidden\",\n        null,\n        computed(() => !isActive.value),\n    ],\n);\n\nconst scrollClasses = defineClasses([\"scrollClipClass\", \"o-clipped\"]);\nconst noScrollClasses = defineClasses([\"noScrollClass\", \"o-noscroll\"]);\n\nconst scrollClass = computed(() =>\n    getActiveClasses(\n        props.scroll === \"clip\" ? scrollClasses.value : noScrollClasses.value,\n    ),\n);\n\n// computed ref must be computed at least once for programmatic usage\nscrollClass.value;\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ close, promise: props.promise });\n</script>\n\n<template>\n    <Teleport :to=\"_teleport.to\" :disabled=\"_teleport.disabled\">\n        <div\n            v-show=\"!hideOnMobile\"\n            ref=\"rootRef\"\n            v-bind=\"$attrs\"\n            :class=\"rootClasses\"\n            data-oruga=\"sidebar\">\n            <div\n                v-if=\"overlay && isActive\"\n                :class=\"overlayClasses\"\n                :tabindex=\"-1\"\n                aria-hidden=\"true\"\n                @click=\"(evt) => clickedOutside(evt)\" />\n            <transition\n                :name=\"transitionName\"\n                @after-enter=\"afterEnter\"\n                @before-leave=\"beforeLeave\">\n                <div\n                    v-show=\"isActive\"\n                    ref=\"sidebarContent\"\n                    :class=\"contentClasses\">\n                    <!--\n                        @slot Sidebar default content, default is component prop\n                        @binding {(...args):void} close - function to close the component\n                    -->\n                    <slot :close=\"close\">\n                        <!-- injected component for programmatic usage -->\n                        <component\n                            v-bind=\"$props.props\"\n                            :is=\"component\"\n                            v-if=\"component\"\n                            v-on=\"$props.events\"\n                            @close=\"close\" />\n                    </slot>\n                </div>\n            </transition>\n        </div>\n    </Teleport>\n</template>\n","import { createVNode, render } from \"vue\";\n\nimport Sidebar from \"./Sidebar.vue\";\nimport type { SidebarProps } from \"./types\";\n\nimport InstanceRegistry from \"@/utils/InstanceRegistry\";\nimport { VueInstance } from \"@/utils/plugins\";\nimport { merge } from \"@/utils/helpers\";\nimport type { OrugaOptions, ProgrammaticExpose } from \"@/types\";\n\ndeclare module \"../../index\" {\n    interface OrugaProgrammatic {\n        sidebar: typeof SidebarProgrammatic;\n    }\n}\n\nconst instances = new InstanceRegistry<typeof Sidebar>();\n\ntype ProgrammaticProps = Readonly<SidebarProps & OrugaOptions[\"sidebar\"]>;\n\nconst SidebarProgrammatic = {\n    open(params: ProgrammaticProps): ProgrammaticExpose {\n        const defaultParams = {\n            programmatic: { instances },\n            active: true, // set the active state to true\n        };\n\n        const propsData = merge(defaultParams, params);\n        propsData.promise = new Promise((p1, p2) => {\n            propsData.programmatic.resolve = p1;\n            propsData.programmatic.reject = p2;\n        });\n\n        const app = VueInstance;\n        const vnode = createVNode(Sidebar, propsData);\n        vnode.appContext = app._context;\n        render(vnode, document.createElement(\"div\"));\n        // return exposed functionalities\n        return vnode.component.exposed as ProgrammaticExpose;\n    },\n    closeAll(...args: any[]): void {\n        instances.walk((entry) => entry.exposed.close(...args));\n    },\n};\n\nexport default SidebarProgrammatic;\n","import type { App, Plugin } from \"vue\";\n\nimport Sidebar from \"./Sidebar.vue\";\nimport SidebarProgrammatic from \"./SidebarProgrammatic\";\n\nimport {\n    registerComponent,\n    registerComponentProgrammatic,\n} from \"@/utils/plugins\";\n\n/** export sidebar specific types */\nexport type { SidebarProps } from \"./types\";\n\n/** export sidebar plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Sidebar);\n        registerComponentProgrammatic(app, \"sidebar\", SidebarProgrammatic);\n    },\n} as Plugin;\n\n/** export sidebar components */\nexport { SidebarProgrammatic, Sidebar as OSidebar };\n","<script setup lang=\"ts\">\nimport { ref, computed, watch, nextTick, type PropType } from \"vue\";\n\nimport PositionWrapper from \"../utils/PositionWrapper.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isClient } from \"@/utils/ssr\";\nimport {\n    defineClasses,\n    usePropBinding,\n    useEventListener,\n    useClickOutside,\n} from \"@/composables\";\n\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * Display a brief helper text to your user\n * @displayName Tooltip\n * @style _tooltip.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTooltip\",\n    configField: \"tooltip\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Whether tooltip is active or not, use v-model:active to make it two-way binding */\n    active: { type: Boolean, default: false },\n    /** Tooltip text, unnecessary when content slot is used */\n    label: { type: String, default: undefined },\n    /**\n     * Color of the tooltip\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"tooltip.variant\"),\n    },\n    /**\n     * Position of the Tooltip relative to the trigger\n     * @values auto, top, bottom, left, right, top-right, top-left, bottom-left, bottom-right\n     */\n    position: {\n        type: String,\n        default: () => getOption(\"tooltip.position\", \"auto\"),\n        validator: (value: string) =>\n            [\n                \"auto\",\n                \"top\",\n                \"bottom\",\n                \"left\",\n                \"right\",\n                \"top-right\",\n                \"top-left\",\n                \"bottom-left\",\n                \"bottom-right\",\n            ].indexOf(value) > -1,\n    },\n    /** Tooltip will be always active */\n    always: { type: Boolean, default: false },\n    /** Tooltip will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Tooltip default animation */\n    animation: {\n        type: String,\n        default: () => getOption(\"tooltip.animation\", \"fade\"),\n    },\n    /** Tooltip will be multilined */\n    multiline: { type: Boolean, default: false },\n    /** Tooltip trigger tag name */\n    triggerTag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"tooltip.triggerTag\", \"div\"),\n    },\n    /**\n     * Tooltip trigger events\n     * @values hover, click, focus, contextmenu\n     */\n    triggers: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"tooltip.triggers\", [\"hover\"]),\n        validator: (values: string[]) =>\n            values.filter(\n                (value) =>\n                    [\"click\", \"hover\", \"contextmenu\", \"focus\"].indexOf(value) >\n                    -1,\n            ).length === values.length,\n    },\n    /** Tooltip delay before it appears (number in ms) */\n    delay: { type: Number, default: undefined },\n    /**\n     * Tooltip auto close options (pressing escape, clicking the content or outside)\n     * @values true, false, content, outside, escape\n     */\n    closeable: {\n        type: [Array, Boolean] as PropType<string[] | boolean>,\n        default: () =>\n            getOption(\"tooltip.closeable\", [\"escape\", \"outside\", \"content\"]),\n    },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"dropdown.teleport\", false),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when the dropdown is teleported */\n    teleportClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip content */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip trigger position */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip trigger */\n    triggerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip content when is multiline */\n    multilineClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip trigger when is always visible */\n    alwaysClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip arrow */\n    arrowClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip arrow position */\n    arrowPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * active prop two-way binding\n     * @param value {boolean} - updated active prop\n     */\n    (e: \"update:active\", value: boolean): void;\n    /** on active change to false event */\n    (e: \"close\"): void;\n    /** on active change to true event */\n    (e: \"open\"): void;\n}>();\n\nconst isActive = usePropBinding<boolean>(\"active\", props, emits, {\n    passive: true,\n});\n\nwatch(isActive, (value) => {\n    if (value) emits(\"open\");\n    else emits(\"close\");\n});\n\nconst timer = ref();\n\nconst autoPosition = ref(props.position);\n\n/** update autoPosition on prop change */\nwatch(\n    () => props.position,\n    (v) => (autoPosition.value = v),\n);\n\n// --- Event Handler ---\n\nconst contentRef = ref<HTMLElement>();\nconst triggerRef = ref<HTMLElement>();\n\nconst eventCleanups = ref([]);\n\nwatch(isActive, (value) => {\n    // on active set event handler\n    if (value && isClient) {\n        setTimeout(() => {\n            if (cancelOptions.value.indexOf(\"outside\") >= 0) {\n                // set outside handler\n                eventCleanups.value.push(\n                    useClickOutside(contentRef, onClickedOutside, [triggerRef]),\n                );\n            }\n\n            if (cancelOptions.value.indexOf(\"escape\") >= 0) {\n                // set keyup handler\n                eventCleanups.value.push(\n                    useEventListener(\"keyup\", onKeyPress, document, {\n                        immediate: true,\n                    }),\n                );\n            }\n        });\n    } else if (!value) {\n        // on close cleanup event handler\n        eventCleanups.value.forEach((fn) => fn());\n        eventCleanups.value.length = 0;\n    }\n});\n\nconst cancelOptions = computed<string[]>(() =>\n    typeof props.closeable === \"boolean\"\n        ? props.closeable\n            ? [\"escape\", \"outside\", \"content\"]\n            : []\n        : props.closeable,\n);\n\n/** Close tooltip if clicked outside. */\nfunction onClickedOutside(): void {\n    if (!isActive.value || props.always) return;\n    if (cancelOptions.value.indexOf(\"outside\") < 0) return;\n    isActive.value = false;\n}\n\n/** Keypress event that is bound to the document */\nfunction onKeyPress(event: KeyboardEvent): void {\n    if (isActive.value && (event.key === \"Escape\" || event.key === \"Esc\")) {\n        if (cancelOptions.value.indexOf(\"escape\") < 0) return;\n        isActive.value = false;\n    }\n}\n\nfunction onClick(): void {\n    if (props.triggers.indexOf(\"click\") < 0) return;\n    // if not active, toggle after clickOutside event\n    // this fixes toggling programmatic\n    nextTick(() => setTimeout(() => open()));\n}\n\nfunction onContextMenu(event: Event): void {\n    if (props.triggers.indexOf(\"contextmenu\") < 0) return;\n    event.preventDefault();\n    open();\n}\n\nfunction onFocus(): void {\n    if (props.triggers.indexOf(\"focus\") < 0) return;\n    open();\n}\n\nfunction onHover(): void {\n    if (props.triggers.indexOf(\"hover\") < 0) return;\n    open();\n}\n\nfunction open(): void {\n    if (props.disabled) return;\n    if (props.delay) {\n        timer.value = setTimeout(() => {\n            isActive.value = true;\n            timer.value = null;\n        }, props.delay);\n    } else {\n        isActive.value = true;\n    }\n}\n\nfunction onClose(): void {\n    if (cancelOptions.value.indexOf(\"content\") < 0) return;\n    isActive.value = !props.closeable;\n    if (timer.value && props.closeable) clearTimeout(timer.value);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-tip\"],\n    [\n        \"teleportClass\",\n        \"o-tip--teleport\",\n        null,\n        computed(() => !!props.teleport),\n    ],\n);\n\nconst triggerClasses = defineClasses([\"triggerClass\", \"o-tip__trigger\"]);\n\nconst arrowClasses = defineClasses(\n    [\"arrowClass\", \"o-tip__arrow\"],\n    [\n        \"arrowPositionClass\",\n        \"o-tip__arrow--\",\n        autoPosition,\n        computed(() => !!autoPosition.value),\n    ],\n    [\n        \"variantArrowClass\",\n        \"o-tip__arrow--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-tip__content\"],\n    [\n        \"positionClass\",\n        \"o-tip__content--\",\n        autoPosition,\n        computed(() => !!autoPosition.value),\n    ],\n    [\n        \"variantClass\",\n        \"o-tip__content--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"multilineClass\",\n        \"o-tip__content--multiline\",\n        null,\n        computed(() => props.multiline),\n    ],\n    [\n        \"alwaysClass\",\n        \"o-tip__content--always\",\n        null,\n        computed(() => props.always),\n    ],\n);\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"tooltip\">\n        <PositionWrapper\n            v-model:position=\"autoPosition\"\n            :teleport=\"teleport\"\n            :class=\"rootClasses\"\n            :trigger=\"triggerRef\"\n            :content=\"contentRef\"\n            default-position=\"top\"\n            :disabled=\"!isActive\">\n            <transition :name=\"animation\">\n                <div\n                    v-show=\"isActive || (always && !disabled)\"\n                    ref=\"contentRef\"\n                    :class=\"contentClasses\">\n                    <span :class=\"arrowClasses\"></span>\n\n                    <!--\n                        @slot Tooltip content, default is label prop\n                    -->\n                    <slot name=\"content\">{{ label }}</slot>\n                </div>\n            </transition>\n        </PositionWrapper>\n        <component\n            :is=\"triggerTag\"\n            ref=\"triggerRef\"\n            :class=\"triggerClasses\"\n            aria-haspopup=\"true\"\n            @click=\"onClick\"\n            @contextmenu=\"onContextMenu\"\n            @mouseenter=\"onHover\"\n            @focus.capture=\"onFocus\"\n            @blur.capture=\"onClose\"\n            @mouseleave=\"onClose\">\n            <!--\n                @slot Tooltip trigger slot\n                @binding {boolean} active - tooltip active state\n            -->\n            <slot :active=\"isActive\" />\n        </component>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport OTooltip from \"../tooltip/Tooltip.vue\";\n\nimport { isClient } from \"@/utils/ssr\";\n\nimport type { SliderProps } from \"./types\";\nimport type { ClassBind } from \"@/types\";\n\n/**\n * @displayName Slider Thumb\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSliderThumb\",\n    configField: \"slider\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** parent slider component props  */\n    sliderProps: { type: Object as PropType<SliderProps>, required: true },\n    modelValue: { type: Number, required: true },\n    sliderSize: { type: Function as PropType<() => number>, required: true },\n    thumbWrapperClasses: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n    thumbClasses: {\n        type: Array as PropType<ClassBind[]>,\n        required: true,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {number | number[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: number | number[]): void;\n    /** on value change event */\n    (e: \"change\"): void;\n    /** on drag start event */\n    (e: \"dragstart\"): void;\n    /** on drag end event */\n    (e: \"dragend\"): void;\n}>();\n\n/** the computed picker contains all chared props from the datepicker and the timepicker  */\nconst slider = computed<SliderProps>(() => props.sliderProps);\n\nconst isFocused = ref(false);\nconst dragging = ref(false);\nconst startX = ref(0);\nconst startPosition = ref(0);\nconst newPosition = ref(null);\nconst oldValue = ref(props.modelValue);\n\nconst tooltip = computed(() => slider.value.tooltip);\nconst tooltipAlways = computed(() => slider.value.tooltipAlways);\nconst disabled = computed(() => slider.value.disabled);\nconst max = computed(() => slider.value.max);\nconst min = computed(() => slider.value.min);\nconst step = computed(() => slider.value.step);\nconst indicator = computed(() => slider.value.indicator);\n\nconst ariaLabel = computed(() =>\n    Array.isArray(slider.value.ariaLabel)\n        ? slider.value.ariaLabel[0]\n        : slider.value.ariaLabel,\n);\n\nconst precision = computed(() => {\n    const precisions = [min.value, max.value, step.value].map((item) => {\n        const decimal = (\"\" + item).split(\".\")[1];\n        return decimal ? decimal.length : 0;\n    });\n    return Math.max(...precisions);\n});\n\nconst computedTooltipVariant = computed(() =>\n    slider.value.tooltipVariant\n        ? slider.value.tooltipVariant\n        : slider.value.variant,\n);\n\nconst currentPosition = computed(\n    () =>\n        `${((props.modelValue - min.value) / (max.value - min.value)) * 100}%`,\n);\n\nconst wrapperStyle = computed(() => ({ left: currentPosition.value }));\n\nconst formattedValue = computed(() => {\n    if (typeof slider.value.customFormatter !== \"undefined\")\n        return slider.value.customFormatter(props.modelValue);\n\n    if (slider.value.format === \"percent\")\n        return new Intl.NumberFormat(slider.value.locale, {\n            style: \"percent\",\n        }).format((props.modelValue - min.value) / (max.value - min.value));\n\n    return new Intl.NumberFormat(slider.value.locale).format(props.modelValue);\n});\n\nfunction onFocus(): void {\n    isFocused.value = true;\n}\n\nfunction onBlur(): void {\n    isFocused.value = false;\n}\n\nfunction onButtonDown(event): void {\n    if (disabled.value) return;\n    event.preventDefault();\n    onDragStart(event);\n\n    if (isClient) {\n        document.addEventListener(\"mousemove\", onDragging);\n        document.addEventListener(\"touchmove\", onDragging);\n        document.addEventListener(\"mouseup\", onDragEnd);\n        document.addEventListener(\"touchend\", onDragEnd);\n        document.addEventListener(\"contextmenu\", onDragEnd);\n    }\n}\n\nfunction onLeftKeyDown(): void {\n    if (disabled.value || props.modelValue === min.value) return;\n    newPosition.value =\n        parseFloat(currentPosition.value) -\n        (step.value / (max.value - min.value)) * 100;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onRightKeyDown(): void {\n    if (disabled.value || props.modelValue === max.value) return;\n    newPosition.value =\n        parseFloat(currentPosition.value) +\n        (step.value / (max.value - min.value)) * 100;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onHomeKeyDown(): void {\n    if (disabled.value || props.modelValue === min.value) return;\n    newPosition.value = 0;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onEndKeyDown(): void {\n    if (disabled.value || props.modelValue === max.value) return;\n    newPosition.value = 100;\n    setPosition(newPosition.value);\n    emits(\"change\");\n}\n\nfunction onDragStart(event): void {\n    dragging.value = true;\n    emits(\"dragstart\");\n    if (event.type === \"touchstart\") event.clientX = event.touches[0].clientX;\n\n    startX.value = event.clientX;\n    startPosition.value = parseFloat(currentPosition.value);\n    newPosition.value = startPosition.value;\n}\n\nfunction onDragging(event): void {\n    if (dragging.value) {\n        if (event.type === \"touchmove\")\n            event.clientX = event.touches[0].clientX;\n\n        const diff =\n            ((event.clientX - startX.value) / props.sliderSize()) * 100;\n        newPosition.value = startPosition.value + diff;\n        setPosition(newPosition.value);\n    }\n}\n\nfunction onDragEnd(): void {\n    dragging.value = false;\n    emits(\"dragend\");\n    if (props.modelValue !== oldValue.value) emits(\"change\");\n\n    setPosition(newPosition.value);\n    if (isClient) {\n        document.removeEventListener(\"mousemove\", onDragging);\n        document.removeEventListener(\"touchmove\", onDragging);\n        document.removeEventListener(\"mouseup\", onDragEnd);\n        document.removeEventListener(\"touchend\", onDragEnd);\n        document.removeEventListener(\"contextmenu\", onDragEnd);\n    }\n}\n\nfunction setPosition(percent: number): void {\n    if (percent === null || isNaN(percent)) return;\n    if (percent < 0) percent = 0;\n    else if (percent > 100) percent = 100;\n\n    const stepLength = 100 / ((max.value - min.value) / step.value);\n    const steps = Math.round(percent / stepLength);\n    let value =\n        ((steps * stepLength) / 100) * (max.value - min.value) + min.value;\n    value = parseFloat(value.toFixed(precision.value));\n    emits(\"update:modelValue\", value);\n\n    if (!dragging.value && value !== oldValue.value) oldValue.value = value;\n}\n\ndefineExpose({ setPosition });\n</script>\n\n<template>\n    <div\n        :class=\"thumbWrapperClasses\"\n        :style=\"wrapperStyle\"\n        data-oruga=\"slider-thumb\">\n        <o-tooltip\n            :label=\"formattedValue\"\n            :variant=\"computedTooltipVariant\"\n            :disabled=\"disabled || !tooltip\"\n            :always=\"tooltipAlways || dragging || isFocused\">\n            <div\n                v-bind=\"$attrs\"\n                :class=\"thumbClasses\"\n                :tabindex=\"disabled ? null : 0\"\n                role=\"slider\"\n                :aria-label=\"ariaLabel\"\n                :aria-valuenow=\"modelValue\"\n                :aria-valuemin=\"min\"\n                :aria-valuemax=\"max\"\n                :aria-disabled=\"disabled\"\n                aria-orientation=\"horizontal\"\n                @mousedown=\"onButtonDown\"\n                @touchstart=\"onButtonDown\"\n                @focus=\"onFocus\"\n                @blur=\"onBlur\"\n                @keydown.left.prevent=\"onLeftKeyDown\"\n                @keydown.right.prevent=\"onRightKeyDown\"\n                @keydown.down.prevent=\"onLeftKeyDown\"\n                @keydown.up.prevent=\"onRightKeyDown\"\n                @keydown.home.prevent=\"onHomeKeyDown\"\n                @keydown.end.prevent=\"onEndKeyDown\">\n                <span v-if=\"indicator\">{{ formattedValue }}</span>\n            </div>\n        </o-tooltip>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, type PropType } from \"vue\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { SliderComponent } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * @displayName Slider Tick\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSliderTick\",\n    configField: \"slider\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Value of single tick */\n    value: { type: Number, required: true },\n    /** Tick label */\n    label: { type: String, default: undefined },\n    tickClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when slider tick is hidden */\n    tickHiddenClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of tick label */\n    tickLabelClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\n// Inject functionalities and data from the parent carousel component\nconst { parent } = useProviderChild<SliderComponent>();\n\nconst position = computed(() => {\n    const pos =\n        ((props.value - parent.value.min) /\n            (parent.value.max - parent.value.min)) *\n        100;\n    return pos >= 0 && pos <= 100 ? pos : 0;\n});\n\nconst hidden = computed(\n    () => props.value === parent.value.min || props.value === parent.value.max,\n);\n\nconst tickStyle = computed(() => ({ left: position.value + \"%\" }));\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"tickClass\", \"o-slide__tick\"],\n    [\"tickHiddenClass\", \"o-slide__tick--hidden\", null, hidden],\n);\n\nconst tickLabelClasses = defineClasses([\n    \"tickLabelClass\",\n    \"o-slide__tick-label\",\n]);\n</script>\n\n<template>\n    <div :class=\"rootClasses\" :style=\"tickStyle\" data-oruga=\"slider-tick\">\n        <span v-if=\"$slots.default\" :class=\"tickLabelClasses\">\n            <!-- \n                @slot Override tick content, default is label prop\n             -->\n            <slot> {{ label }} </slot>\n        </span>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, ref, watch, type PropType } from \"vue\";\n\nimport OSliderThumb from \"./SliderThumb.vue\";\nimport OSliderTick from \"./SliderTick.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { defineClasses, useProviderParent } from \"@/composables\";\n\nimport type { SliderComponent } from \"./types\";\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * A slider to select a value or range from a given range\n * @displayName Slider\n * @requires ./SliderTick.vue\n * @style _slider.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSlider\",\n    configField: \"slider\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: {\n        type: [Number, Array] as PropType<number | number[]>,\n        default: 0,\n    },\n    /** Minimum value */\n    min: { type: Number, default: 0 },\n    /** Maximum  value */\n    max: { type: Number, default: 100 },\n    /** Step interval of ticks */\n    step: { type: Number, default: 1 },\n    /**\n     * Color of the slider\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"slider.variant\"),\n    },\n    /**\n     * Vertical size of slider\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"slider.size\"),\n    },\n    /** Show tick marks */\n    ticks: { type: Boolean, default: false },\n    /** Show tooltip when thumb is being dragged */\n    tooltip: {\n        type: Boolean,\n        default: () => getOption(\"slider.tooltip\", true),\n    },\n    /**\n     * Color of the tooltip\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    tooltipVariant: {\n        type: String,\n        default: () => getOption(\"slider.tooltipVariant\"),\n    },\n    /** Tooltip displays always */\n    tooltipAlways: { type: Boolean, default: false },\n    /** Rounded thumb */\n    rounded: {\n        type: Boolean,\n        default: () => getOption(\"slider.rounded\", false),\n    },\n    /** Slider will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Update v-model only when dragging is finished */\n    lazy: { type: Boolean, default: false },\n    /** Function to format the tooltip label for display */\n    customFormatter: { type: Function, default: undefined },\n    /** Increases slider size on focus */\n    biggerSliderFocus: { type: Boolean, default: false },\n    /** Show indicators */\n    indicator: { type: Boolean, default: false },\n    /**\n     * Define v-model format\n     * @values row, percent\n     */\n    format: {\n        type: String,\n        default: () => getOption(\"slider.format\", \"raw\"),\n        validator: (value: string) => [\"raw\", \"percent\"].indexOf(value) >= 0,\n    },\n    /** Date format locale */\n    locale: {\n        type: [String, Array] as PropType<string | string[]>,\n        default: () => getOption(\"locale\"),\n    },\n    /** Accessibility aria-label to to be passed to the slider thumb element. */\n    ariaLabel: {\n        type: [String, Array] as PropType<string | string[]>,\n        default: () => getOption(\"slider.ariaLabel\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the vertical slider size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the slider track */\n    trackClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the filled part of the slider */\n    fillClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when the slider is rounded */\n    thumbRoundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when the thumb gets dragged */\n    thumbDraggingClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when slider is disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the thumb wrapper */\n    thumbWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the thumb */\n    thumbClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the slider variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of slider tick */\n    tickClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when slider tick is hidden */\n    tickHiddenClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of tick label */\n    tickLabelClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class to display on the wrapper element when the slider is dragged */\n    thumbWrapperDraggingClass: {\n        type: [String, Function, Array] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {number | number[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: number | number[]): void;\n    /**\n     * on value change event\n     * @param value {number | number[]} updated modelValue prop\n     */\n    (e: \"change\", value: number | number[]): void;\n    /**\n     * on dragging event\n     * @param value {number | number[]} updated modelValue prop\n     * */\n    (e: \"dragging\", value: number | number[]): void;\n    /** on drag start event */\n    (e: \"dragstart\"): void;\n    /** on drag end event */\n    (e: \"dragend\"): void;\n}>();\n\nfunction emitValue(event: any): void {\n    const val = isRange.value\n        ? [minValue.value, maxValue.value]\n        : valueStart.value || 0;\n    emits(event, val);\n}\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed<SliderComponent>(() => ({\n    max: props.max,\n    min: props.min,\n}));\n\n/** Provide functionalities and data to child item components */\nuseProviderParent(undefined, { data: provideData });\n\nconst sliderRef = ref();\nconst thumbStartRef = ref();\nconst thumbEndRef = ref();\n\nconst valueStart = ref<number>(null);\nconst valueEnd = ref<number>(null);\nconst dragging = ref(false);\nconst isRange = ref(false);\n\nconst isThumbReversed = ref();\nconst isTrackClickDisabled = ref();\n\nsetValues(props.modelValue);\n\nwatch([valueStart, valueEnd], () => onInternalValueUpdate());\n\n/** When min, max or v-model is changed set the new active step. */\nwatch([() => props.min, () => props.max, () => props.modelValue], () =>\n    setValues(props.modelValue),\n);\n\nconst tickValues = computed(() => {\n    if (!props.ticks || props.min > props.max || props.step === 0) return [];\n    const result = [];\n    for (let i = props.min + props.step; i < props.max; i = i + props.step) {\n        result.push(i);\n    }\n    return result;\n});\n\nconst minValue = computed(() => Math.min(valueStart.value, valueEnd.value));\n\nconst maxValue = computed(() => Math.max(valueStart.value, valueEnd.value));\n\nconst barSize = computed(() =>\n    isRange.value\n        ? `${\n              (100 * (maxValue.value - minValue.value)) /\n              (props.max - props.min)\n          }%`\n        : `${\n              (100 * (valueStart.value - props.min)) / (props.max - props.min)\n          }%`,\n);\n\nconst barStart = computed(() =>\n    isRange.value\n        ? `${(100 * (minValue.value - props.min)) / (props.max - props.min)}%`\n        : \"0%\",\n);\n\nconst barStyle = computed(() => ({\n    width: barSize.value,\n    left: barStart.value,\n}));\n\nfunction setValues(newValue: number | number[]): void {\n    if (props.min > props.max) return;\n\n    if (Array.isArray(newValue)) {\n        isRange.value = true;\n        const smallValue =\n            typeof newValue[0] !== \"number\" || isNaN(newValue[0])\n                ? props.min\n                : Math.min(Math.max(props.min, newValue[0]), props.max);\n        const largeValue =\n            typeof newValue[1] !== \"number\" || isNaN(newValue[1])\n                ? props.max\n                : Math.max(Math.min(props.max, newValue[1]), props.min);\n        valueStart.value = isThumbReversed.value ? largeValue : smallValue;\n        valueEnd.value = isThumbReversed.value ? smallValue : largeValue;\n    } else {\n        isRange.value = false;\n        valueStart.value = isNaN(newValue)\n            ? props.min\n            : Math.min(props.max, Math.max(props.min, newValue));\n        valueEnd.value = null;\n    }\n}\n\nfunction onInternalValueUpdate(): void {\n    if (isRange.value)\n        isThumbReversed.value = valueStart.value > valueEnd.value;\n    if (!props.lazy || !dragging.value) emitValue(\"update:modelValue\");\n    if (dragging.value) emitValue(\"dragging\");\n}\n\nfunction sliderSize(): number {\n    return sliderRef.value.getBoundingClientRect().width;\n}\n\nfunction onSliderClick(event: MouseEvent): void {\n    if (props.disabled || isTrackClickDisabled.value) return;\n    const sliderOffsetLeft = sliderRef.value.getBoundingClientRect().left;\n    const percent = ((event.clientX - sliderOffsetLeft) / sliderSize()) * 100;\n    const targetValue = props.min + (percent * (props.max - props.min)) / 100;\n    const diffFirst = Math.abs(targetValue - valueStart.value);\n    if (!isRange.value) {\n        if (diffFirst < props.step / 2) return;\n        thumbStartRef.value.setPosition(percent);\n    } else {\n        const diffSecond = Math.abs(targetValue - valueEnd.value);\n        if (diffFirst <= diffSecond) {\n            if (diffFirst < props.step / 2) return;\n            thumbStartRef.value.setPosition(percent);\n        } else {\n            if (diffSecond < props.step / 2) return;\n            thumbEndRef.value.setPosition(percent);\n        }\n    }\n    emitValue(\"change\");\n}\n\nfunction onDragStart(): void {\n    dragging.value = true;\n    emits(\"dragstart\");\n}\n\nfunction onDragEnd(): void {\n    isTrackClickDisabled.value = true;\n    // avoid triggering onSliderClick after dragend\n    setTimeout(() => (isTrackClickDisabled.value = false));\n    dragging.value = false;\n    emits(\"dragend\");\n    if (props.lazy) emitValue(\"update:modelValue\");\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-slide\"],\n    [\n        \"sizeClass\",\n        \"o-slide--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"disabledClass\",\n        \"o-slide--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n);\n\nconst trackClasses = defineClasses([\"trackClass\", \"o-slide__track\"]);\n\nconst fillClasses = defineClasses(\n    [\"fillClass\", \"o-slide__fill\"],\n    [\n        \"variantClass\",\n        \"o-slide__fill--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst thumbClasses = defineClasses(\n    [\"thumbClass\", \"o-slide__thumb\"],\n    [\"thumbDraggingClass\", \"o-slide__thumb--dragging\", null, dragging],\n    [\n        \"thumbRoundedClass\",\n        \"o-slide__thumb--rounded\",\n        null,\n        computed(() => props.rounded),\n    ],\n);\n\nconst thumbWrapperClasses = defineClasses(\n    [\"thumbWrapperClass\", \"o-slide__thumb-wrapper\"],\n    [\n        \"thumbWrapperDraggingClass\",\n        \"o-slide__thumb-wrapper--dragging\",\n        null,\n        dragging,\n    ],\n);\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"slider\" @click=\"onSliderClick\">\n        <div ref=\"sliderRef\" :class=\"trackClasses\">\n            <div :class=\"fillClasses\" :style=\"barStyle\" />\n            <template v-if=\"ticks\">\n                <o-slider-tick\n                    v-for=\"(val, key) in tickValues\"\n                    :key=\"key\"\n                    :value=\"val\"\n                    :tick-class=\"tickClass\"\n                    :tick-hidden-class=\"tickHiddenClass\"\n                    :tick-label-class=\"tickLabelClass\" />\n            </template>\n\n            <!--\n                @slot Define additional slider ticks here\n             -->\n            <slot />\n\n            <o-slider-thumb\n                ref=\"thumbStartRef\"\n                v-model=\"valueStart\"\n                :slider-props=\"props\"\n                :slider-size=\"sliderSize\"\n                :thumb-classes=\"thumbClasses\"\n                :thumb-wrapper-classes=\"thumbWrapperClasses\"\n                @change=\"emitValue('change')\"\n                @dragstart=\"onDragStart\"\n                @dragend=\"onDragEnd\" />\n\n            <o-slider-thumb\n                v-if=\"isRange\"\n                ref=\"thumbEndRef\"\n                v-model=\"valueEnd\"\n                :slider-props=\"props\"\n                :slider-size=\"sliderSize\"\n                :thumb-classes=\"thumbClasses\"\n                :thumb-wrapper-classes=\"thumbWrapperClasses\"\n                @change=\"emitValue('change')\"\n                @dragstart=\"onDragStart\"\n                @dragend=\"onDragEnd\" />\n        </div>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Slider from \"./Slider.vue\";\nimport SliderTick from \"./SliderTick.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export slider specific types */\nexport type * from \"./types\";\n\n/** export slider plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Slider);\n        registerComponent(app, SliderTick);\n    },\n} as Plugin;\n\n/** export slider components */\nexport { Slider as OSlider, SliderTick as OSliderTick };\n","<script setup lang=\"ts\">\nimport { computed, toValue, nextTick, ref, watch, type PropType } from \"vue\";\n\nimport OButton from \"../button/Button.vue\";\nimport OIcon from \"../icon/Icon.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isDefined } from \"@/utils/helpers\";\nimport { defineClasses, useProviderParent, useMatchMedia } from \"@/composables\";\n\nimport type { StepItem, StepItemComponent, StepsComponent } from \"./types\";\nimport type { ComponentClass, ClassBind } from \"@/types\";\n\n/**\n * Responsive horizontal process steps\n * @displayName Steps\n * @requires ./StepItem.vue\n * @style _steps.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSteps\",\n    configField: \"steps\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number], default: undefined },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"steps.variant\"),\n    },\n    /**\n     * Tab size\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"steps.size\"),\n    },\n    /** Show tab in vertical layout */\n    vertical: { type: Boolean, default: false },\n    /**\n     * Position of the tab\n     * @values left, centered, right\n     */\n    position: {\n        type: String,\n        default: undefined,\n        validator: (value: string) =>\n            [\"left\", \"centered\", \"right\"].indexOf(value) >= 0,\n    },\n    /**\n     * Icon pack to use for the navigation\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"steps.iconPack\"),\n    },\n    /** Icon to use for navigation button */\n    iconPrev: {\n        type: String,\n        default: () => getOption(\"steps.iconPrev\", \"chevron-left\"),\n    },\n    /** Icon to use for navigation button */\n    iconNext: {\n        type: String,\n        default: () => getOption(\"steps.iconNext\", \"chevron-right\"),\n    },\n    /**\n     * Next and previous buttons below the component. You can use this property if you want to use your own custom navigation items.\n     */\n    hasNavigation: { type: Boolean, default: true },\n    /** Step navigation is animated */\n    animated: {\n        type: Boolean,\n        default: () => getOption(\"steps.animated\", true),\n    },\n    /**\n     * Transition animation name\n     * @values [next, prev], [right, left, down, up]\n     */\n    animation: {\n        type: Array as PropType<Array<string>>,\n        default: () =>\n            getOption(\"tabs.animation\", [\n                \"slide-next\",\n                \"slide-prev\",\n                \"slide-down\",\n                \"slide-up\",\n            ]),\n        validator: (value: Array<string>) =>\n            value.length === 2 || value.length === 4,\n    },\n    /** Apply animation on the initial render */\n    animateInitially: {\n        type: Boolean,\n        default: () => getOption(\"steps.animateInitially\", false),\n    },\n    /**\n     * Position of the marker label\n     * @values bottom, right, left\n     */\n    labelPosition: {\n        type: String,\n        default: () => getOption(\"steps.labelPosition\", \"bottom\"),\n        validator: (value: string) =>\n            [\"bottom\", \"right\", \"left\"].indexOf(value) > -1,\n    },\n    /** Rounded step markers */\n    rounded: { type: Boolean, default: true },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"steps.mobileBreakpoint\"),\n    },\n    /** Accessibility next button aria label */\n    ariaNextLabel: {\n        type: String,\n        default: () => getOption(\"steps.ariaNextLabel\"),\n    },\n    /** Accessibility previous button aria label  */\n    ariaPreviousLabel: {\n        type: String,\n        default: () => getOption(\"steps.ariaPreviousLabel\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Size of the steps */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tooltip trigger */\n    verticalClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component when is vertical and its position changes */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the steps container */\n    stepsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Steps component when animation gets triggered */\n    animatedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps markers trigger when are rounded */\n    stepMarkerRoundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component dividers */\n    stepDividerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component marker */\n    stepMarkerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component content */\n    stepContentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component content when transition is happening */\n    stepContentTransitioningClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component navigation element */\n    stepNavigationClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component link */\n    stepLinkClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Steps component link when clickable */\n    stepLinkClickableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Step component link label */\n    stepLinkLabelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Step component link label when positioned */\n    stepLinkLabelPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of steps component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number): void;\n    /**\n     * on tab change event\n     * @param value {string | number} new tab value\n     * @param value {string | number} old tab value\n     */\n    (e: \"change\", newValue: string | number, oldValue: string | number): void;\n}>();\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst rootRef = ref();\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed<StepsComponent>(() => ({\n    activeValue: vmodel.value,\n    vertical: props.vertical,\n    animated: props.animated,\n    animation: props.animation,\n    animateInitially: props.animateInitially,\n}));\n\n/** Provide functionalities and data to child item components */\nconst { sortedItems } = useProviderParent<StepItemComponent>(rootRef, {\n    data: provideData,\n});\n\nconst items = computed<StepItem[]>(() =>\n    sortedItems.value.map((column) => ({\n        index: column.index,\n        identifier: column.identifier,\n        ...toValue(column.data),\n    })),\n);\n\nconst vmodel = defineModel<string | number>();\n\n/** When v-model is changed set the new active tab. */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        if (vmodel.value !== value) performAction(value);\n    },\n);\n\nconst activeItem = computed(() =>\n    isDefined(vmodel.value)\n        ? items.value.find((item) => item.value === vmodel.value) ||\n          items.value[0]\n        : items.value[0],\n);\n\nconst isTransitioning = computed(() =>\n    items.value.some((item) => item.isTransitioning),\n);\n\n/** Check if previous button is available. */\nconst hasPrev = computed(() => !!prevItem.value);\n\n/** Check if next button is available. */\nconst hasNext = computed(() => !!nextItem.value);\n\n/** Retrieves the previous visible item */\nconst prevItem = computed(() => {\n    if (!activeItem.value) return null;\n\n    let prevItem = null;\n    for (let idx = items.value.indexOf(activeItem.value) - 1; idx >= 0; idx--) {\n        if (items.value[idx].visible) {\n            prevItem = items.value[idx];\n            break;\n        }\n    }\n    return prevItem;\n});\n\n/** Retrieves the next visible item */\nconst nextItem = computed(() => {\n    let nextItem = null;\n    let idx = activeItem.value ? items.value.indexOf(activeItem.value) + 1 : 0;\n    for (; idx < items.value.length; idx++) {\n        if (items.value[idx].visible) {\n            nextItem = items.value[idx];\n            break;\n        }\n    }\n    return nextItem;\n});\n\n/**\n * Return if the step should be clickable or not.\n */\nfunction isItemClickable(item: StepItem): boolean {\n    if (item.clickable === undefined)\n        return item.index < activeItem.value?.index;\n    return item.clickable;\n}\n\n/** Previous button click listener. */\nfunction prev(): void {\n    if (hasPrev.value) itemClick(prevItem.value);\n}\n\n/** Previous button click listener. */\nfunction next(): void {\n    if (hasNext.value) itemClick(nextItem.value);\n}\n\n/** Item click listener, emit input event and change active child. */\nfunction itemClick(item: StepItem): void {\n    if (vmodel.value !== item.value) performAction(item.value);\n}\n\n/** Activate next child and deactivate prev child */\nfunction performAction(newId: number | string): void {\n    const oldId = activeItem.value.value;\n    const oldItem = activeItem.value;\n    const newItem =\n        items.value.find((item) => item.value === newId) || items.value[0];\n\n    if (oldItem && newItem) {\n        oldItem.deactivate(newItem.index);\n        newItem.activate(oldItem.index);\n    }\n\n    nextTick(() => {\n        vmodel.value = newId;\n        emits(\"change\", newId, oldId);\n    });\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-steps__wrapper\"],\n    [\n        \"sizeClass\",\n        \"o-steps--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"verticalClass\",\n        \"o-steps__wrapper-vertical\",\n        null,\n        computed(() => props.vertical),\n    ],\n    [\n        \"positionClass\",\n        \"o-steps__wrapper-position-\",\n        computed(() => props.position),\n        computed(() => props.position && props.vertical),\n    ],\n    [\"mobileClass\", \"o-steps--mobile\", null, isMobile],\n);\n\nconst wrapperClasses = defineClasses(\n    [\"stepsClass\", \"o-steps\"],\n    [\n        \"animatedClass\",\n        \"o-steps--animated\",\n        null,\n        computed(() => props.animated),\n    ],\n);\n\nconst stepDividerClasses = defineClasses([\n    \"stepDividerClass\",\n    \"o-steps__divider\",\n]);\n\nconst stepMarkerClasses = defineClasses(\n    [\"stepMarkerClass\", \"o-steps__marker\"],\n    [\n        \"stepMarkerRoundedClass\",\n        \"o-steps__marker--rounded\",\n        null,\n        computed(() => props.rounded),\n    ],\n);\n\nconst stepContentClasses = defineClasses(\n    [\"stepContentClass\", \"o-steps__content\"],\n    [\n        \"stepContentTransitioningClass\",\n        \"o-steps__content-transitioning\",\n        null,\n        isTransitioning,\n    ],\n);\n\nconst stepNavigationClasses = defineClasses([\n    \"stepNavigationClass\",\n    \"o-steps__navigation\",\n]);\n\nconst stepLinkLabelClasses = defineClasses([\n    \"stepLinkLabelClass\",\n    \"o-steps__title\",\n]);\n\nfunction stepLinkClasses(childItem: StepItem): ClassBind[] {\n    const classes = defineClasses(\n        [\"stepLinkClass\", \"o-steps__link\"],\n        [\n            \"stepLinkLabelPositionClass\",\n            \"o-steps__link-label-\",\n            props.labelPosition,\n            !!props.labelPosition,\n        ],\n        [\n            \"stepLinkClickableClass\",\n            \"o-steps__link-clickable\",\n            null,\n            isItemClickable(childItem),\n        ],\n    );\n\n    return classes.value;\n}\n\nfunction itemClasses(childItem: (typeof items.value)[number]): ClassBind[] {\n    const classes = defineClasses(\n        [\"itemHeaderClass\", \"o-steps__nav-item\"],\n        [\n            \"itemHeaderVariantClass\",\n            \"o-steps__nav-item--\",\n            childItem.variant || props.variant,\n            !!childItem.variant || !!props.variant,\n        ],\n        [\n            \"itemHeaderActiveClass\",\n            \"o-steps__nav-item-active\",\n            null,\n            childItem.value === activeItem.value.value,\n        ],\n        [\n            \"itemHeaderPreviousClass\",\n            \"o-steps__nav-item-previous\",\n            null,\n            activeItem.value.index > childItem.index,\n        ],\n    );\n\n    const headerClass = { [childItem.headerClass || \"\"]: true };\n    return [headerClass, ...classes.value];\n}\n</script>\n\n<template>\n    <div :class=\"rootClasses\" data-oruga=\"steps\">\n        <ol\n            :class=\"wrapperClasses\"\n            :aria-orientation=\"vertical ? 'vertical' : 'horizontal'\">\n            <li\n                v-for=\"(childItem, index) in items\"\n                v-show=\"childItem.visible\"\n                :key=\"childItem.value\"\n                :class=\"itemClasses(childItem)\"\n                :aria-selected=\"childItem.value === activeItem.value\">\n                <span v-if=\"index > 0\" :class=\"stepDividerClasses\"> </span>\n\n                <component\n                    :is=\"childItem.tag\"\n                    role=\"button\"\n                    :tabindex=\"isItemClickable(childItem) ? 0 : null\"\n                    :class=\"stepLinkClasses(childItem)\"\n                    @click=\"isItemClickable(childItem) && itemClick(childItem)\"\n                    @keydown.enter=\"\n                        isItemClickable(childItem) && itemClick(childItem)\n                    \">\n                    <div :class=\"stepMarkerClasses\">\n                        <o-icon\n                            v-if=\"childItem.icon\"\n                            :icon=\"childItem.icon\"\n                            :pack=\"childItem.iconPack\"\n                            :size=\"size\" />\n                        <span v-else-if=\"childItem.step\">\n                            {{ childItem.step }}\n                        </span>\n                    </div>\n\n                    <div :class=\"stepLinkLabelClasses\">\n                        {{ childItem.label }}\n                    </div>\n                </component>\n            </li>\n        </ol>\n\n        <section :class=\"stepContentClasses\">\n            <!--\n                @slot Place step items here\n            -->\n            <slot />\n        </section>\n\n        <!--\n            @slot Override step navigation\n            @binding {{disabled: boolean, action: (): void }} previous - previous button configs\n            @binding {{disabled: boolean, action: (): void }} next - next button configs\n        -->\n        <slot\n            name=\"navigation\"\n            :previous=\"{ disabled: !hasPrev, action: prev }\"\n            :next=\"{ disabled: !hasNext, action: next }\">\n            <nav v-if=\"hasNavigation\" :class=\"stepNavigationClasses\">\n                <o-button\n                    role=\"button\"\n                    :icon-left=\"iconPrev\"\n                    :icon-pack=\"iconPack\"\n                    icon-both\n                    :disabled=\"!hasPrev\"\n                    :aria-label=\"ariaPreviousLabel\"\n                    @click.prevent=\"prev\" />\n\n                <o-button\n                    role=\"button\"\n                    :icon-left=\"iconNext\"\n                    :icon-pack=\"iconPack\"\n                    icon-both\n                    :disabled=\"!hasNext\"\n                    :aria-label=\"ariaNextLabel\"\n                    @click.prevent=\"next\" />\n            </nav>\n        </slot>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, toRaw, ref, useSlots, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isEqual, uuid } from \"@/utils/helpers\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { StepsComponent, StepItemComponent } from \"./types\";\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * @displayName Step Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OStepItem\",\n    configField: \"steps\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Item value (it will be used as v-model of wrapper component) */\n    value: { type: [String, Number], default: () => uuid() },\n    /** Item label */\n    label: { type: String, default: undefined },\n    /** Step marker content (when there is no icon) */\n    step: { type: [String, Number], default: undefined },\n    /**\n     * Default style for the step.\n     * This will override parent type.\n     * Could be used to set a completed step to \"success\" for example\n     */\n    variant: { type: String, default: undefined },\n    /**\n     * Item can be used directly to navigate.\n     * If undefined, previous steps are clickable while the others are not\n     */\n    clickable: { type: Boolean, default: undefined },\n    /** Show/hide item */\n    visible: { type: Boolean, default: true },\n    /** Icon on the left */\n    icon: {\n        type: String,\n        default: () => getOption(\"steps.icon\"),\n    },\n    /** Icon pack */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"steps.iconPack\"),\n    },\n    /** Step item tag name */\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"steps.itemTag\", \"button\"),\n    },\n    /** Role attribute to be passed to the div wrapper for better accessibility */\n    ariaRole: {\n        type: String,\n        default: () => getOption(\"steps.ariaRole\", \"tab\"),\n    },\n    /** Sets a class to the item header */\n    headerClass: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the content item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the nav item */\n    itemHeaderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the nav item when active */\n    itemHeaderActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the nav item behind the active one */\n    itemHeaderPreviousClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the nav item with variant (default value by parent steps component) */\n    itemHeaderVariantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /** on tab item activate event */\n    (e: \"activate\"): void;\n    /** on tab item deactivate event */\n    (e: \"deactivate\"): void;\n}>();\n\nconst slots = useSlots();\n\nconst providedData = computed<StepItemComponent>(() => ({\n    ...toRaw(props),\n    $slots: slots,\n    isTransitioning: isTransitioning.value,\n    activate,\n    deactivate,\n}));\n\n// Inject functionalities and data from the parent carousel component\nconst { parent, item } = useProviderChild<StepsComponent>({\n    data: providedData,\n});\n\nconst transitionName = ref();\n\nconst isActive = computed(() => isEqual(props.value, parent.value.activeValue));\n\nconst isTransitioning = ref(false);\n\nconst nextAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 2 : 0;\n    return parent.value.animation[idx];\n});\n\nconst prevAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 3 : 1;\n    return parent.value.animation[idx];\n});\n\n/** Activate element, alter animation name based on the index. */\nfunction activate(oldIndex: number): void {\n    transitionName.value =\n        item.value.index < oldIndex ? nextAnimation.value : prevAnimation.value;\n\n    // emit event\n    emits(\"activate\");\n}\n\n/** Deactivate element, alter animation name based on the index. */\nfunction deactivate(newIndex: number): void {\n    transitionName.value =\n        newIndex < item.value.index ? nextAnimation.value : prevAnimation.value;\n\n    // emit event\n    emits(\"deactivate\");\n}\n\n/** Transition after-enter hook */\nfunction afterEnter(): void {\n    isTransitioning.value = true;\n}\n\n/** Transition before-leave hook */\nfunction beforeLeave(): void {\n    isTransitioning.value = true;\n}\n\n// --- Computed Component Classes ---\n\nconst elementClasses = defineClasses([\"itemClass\", \"o-steps__item\"]);\n</script>\n\n<template>\n    <Transition\n        :disabled=\"!parent.animated\"\n        :name=\"transitionName\"\n        :appear=\"parent.animateInitially\"\n        @after-enter=\"afterEnter\"\n        @before-leave=\"beforeLeave\">\n        <div\n            v-show=\"isActive && visible\"\n            ref=\"rootRef\"\n            :class=\"elementClasses\"\n            :data-id=\"`steps-${item.identifier}`\"\n            data-oruga=\"steps-item\"\n            :tabindex=\"isActive ? 0 : -1\"\n            :role=\"ariaRole\"\n            aria-roledescription=\"item\">\n            <!-- \n                @slot Step item content\n            -->\n            <slot />\n        </div>\n    </Transition>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Steps from \"./Steps.vue\";\nimport StepItem from \"./StepItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export steps specific types */\nexport type * from \"./types\";\n\n/** export steps plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Steps);\n        registerComponent(app, StepItem);\n    },\n} as Plugin;\n\n/** export steps components */\nexport { Steps as OSteps, StepItem as OStepItem };\n","<script setup lang=\"ts\">\nimport { computed, ref, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { uuid } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    useVModelBinding,\n    useInputHandler,\n} from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Switch between two opposing states\n * @displayName Switch\n * @style _switch.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OSwitch\",\n    configField: \"switch\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number, Boolean], default: undefined },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"switch.variant\"),\n    },\n    /**\n     * Color of the switch when is passive\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    passiveVariant: {\n        type: String,\n        default: () => getOption(\"switch.passiveVariant\"),\n    },\n    /**\n     * Size of the control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"switch.size\"),\n    },\n    /** Input label, unnecessary when default slot is used */\n    label: { type: String, default: undefined },\n    /** Same as native value */\n    nativeValue: { type: [String, Number, Boolean], default: undefined },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Same as native required */\n    required: { type: Boolean, default: false },\n    /** Name attribute on native checkbox */\n    name: { type: String, default: undefined },\n    /** Overrides the returned value when it's checked */\n    trueValue: { type: [String, Number, Boolean], default: true },\n    /** Overrides the returned value when it's not checked */\n    falseValue: { type: [String, Number, Boolean], default: false },\n    /** Rounded style */\n    rounded: { type: Boolean, default: true },\n    /** Label position */\n    position: { type: String, default: \"right\" },\n    /** Accessibility label to establish relationship between the switch and control label' */\n    ariaLabelledby: { type: String, default: () => uuid() },\n    /** Same as native autocomplete options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"switch.autocomplete\", \"off\"),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class when switch is disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the outer switch check */\n    switchClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the outer switch check when checked */\n    switchCheckedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the inner switch check */\n    switchCheckClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the switch when rounded */\n    roundedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the switch passive variant */\n    passiveVariantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of switch label position */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Root class of the native input checkbox */\n    inputClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the native input element when checked */\n    inputCheckedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the switch label */\n    labelClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the switch size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the switch variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number | boolean} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number | boolean): void;\n    /**\n     * on input change event\n     * @param value {string, number, boolean} input value\n     * @param event {Event} native event\n     */\n    (e: \"input\", value: string | number | boolean, event: Event): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n}>();\n\nconst inputRef = ref();\n\n// use form input functionalities\nconst { onBlur, onFocus, onInvalid, setFocus } = useInputHandler(\n    inputRef,\n    emits,\n    props,\n);\n\nconst vmodel = useVModelBinding<string | number | boolean>(props, emits, {\n    passive: true,\n});\n\nconst isChecked = computed(\n    () =>\n        vmodel.value === props.trueValue ||\n        (Array.isArray(vmodel.value) &&\n            vmodel.value.includes(props.nativeValue)),\n);\n\nfunction onInput(event: Event): void {\n    emits(\"input\", vmodel.value, event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-switch\"],\n    [\n        \"sizeClass\",\n        \"o-switch--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"disabledClass\",\n        \"o-switch--disabled\",\n        null,\n        computed(() => props.disabled),\n    ],\n    [\n        \"variantClass\",\n        \"o-switch--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n    [\n        \"positionClass\",\n        \"o-switch--\",\n        computed(() => props.position),\n        computed(() => !!props.position),\n    ],\n    [\n        \"passiveVariantClass\",\n        \"o-switch--\",\n        computed(() => props.passiveVariant + \"-passive\"),\n        computed(() => !!props.passiveVariant),\n    ],\n);\n\nconst inputClasses = defineClasses(\n    [\"inputClass\", \"o-switch__input\"],\n    [\"inputCheckedClass\", \"o-switch__input--checked\", null, isChecked],\n);\n\nconst switchClasses = defineClasses(\n    [\"switchClass\", \"o-switch__check\"],\n    [\"switchCheckedClass\", \"o-switch__check--checked\", null, isChecked],\n    [\"roundedClass\", \"o-switch--rounded\", null, computed(() => props.rounded)],\n);\n\nconst switchCheckClasses = defineClasses(\n    [\"switchCheckClass\", \"o-switch__check-switch\"],\n    [\"roundedClass\", \"o-switch--rounded\", null, computed(() => props.rounded)],\n);\n\nconst labelClasses = defineClasses([\"labelClass\", \"o-switch__label\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <label\n        ref=\"label\"\n        :class=\"rootClasses\"\n        data-oruga=\"switch\"\n        role=\"switch\"\n        :aria-checked=\"isChecked\"\n        @click=\"setFocus\"\n        @keydown.prevent.enter=\"setFocus\">\n        <input\n            v-bind=\"$attrs\"\n            ref=\"inputRef\"\n            v-model=\"vmodel\"\n            type=\"checkbox\"\n            role=\"switch\"\n            data-oruga-input=\"switch\"\n            :class=\"inputClasses\"\n            :disabled=\"disabled\"\n            :required=\"required\"\n            :name=\"name\"\n            :autocomplete=\"autocomplete\"\n            :value=\"nativeValue\"\n            :true-value=\"trueValue\"\n            :false-value=\"falseValue\"\n            :aria-labelledby=\"ariaLabelledby\"\n            @click.stop\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @invalid=\"onInvalid\"\n            @input=\"onInput\" />\n\n        <span :class=\"switchClasses\">\n            <span :class=\"switchCheckClasses\"></span>\n        </span>\n\n        <span\n            v-if=\"label || $slots.default\"\n            :id=\"ariaLabelledby\"\n            :class=\"labelClasses\">\n            <!--\n                @slot Override the label, default is label prop \n            -->\n            <slot>{{ label }}</slot>\n        </span>\n    </label>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Switch from \"./Switch.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export switch plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Switch);\n    },\n} as Plugin;\n\n/** export switch components */\nexport { Switch as OSwitch };\n","import type { DefineComponent, PropType } from \"vue\";\nimport { defineComponent, h } from \"vue\";\nimport type { DynamicComponent } from \"@/types\";\n\n/** This components renders a specific slot and only the slot of another component */\nexport default defineComponent({\n    name: \"OSlotComponent\",\n    props: {\n        /** Component to be get the slot from */\n        component: { type: Object, required: true },\n        /** Slot name */\n        name: { type: String, default: \"default\" },\n        /** Props passed to the slot */\n        props: { type: Object, default: () => {} },\n        /** Tag name of the slot wrapper element */\n        tag: {\n            type: [String, Object, Function] as PropType<DynamicComponent>,\n            default: \"div\" as DynamicComponent,\n        },\n    },\n    render() {\n        const slot = (this.component as DefineComponent).$slots[this.name]\n            ? (this.component as DefineComponent).$slots[this.name](this.props)\n            : {};\n\n        return h(this.tag, {}, slot);\n    },\n});\n","<script setup lang=\"ts\">\nimport { computed, watch, ref, type PropType } from \"vue\";\n\nimport OButton from \"../button/Button.vue\";\nimport OSelect from \"../select/Select.vue\";\nimport OIcon from \"../icon/Icon.vue\";\nimport OField from \"../field/Field.vue\";\n\nimport { getValueByPath } from \"@/utils/helpers\";\n\nimport type { TableColumn } from \"./types\";\nimport type { ClassBind } from \"@/types\";\n\ndefineOptions({\n    isOruga: true,\n    name: \"OTableMobileSort\",\n    configField: \"table\",\n});\n\nconst props = defineProps({\n    currentSortColumn: {\n        type: Object as PropType<TableColumn>,\n        default: undefined,\n    },\n    columns: {\n        type: Array as PropType<TableColumn[]>,\n        default: undefined,\n    },\n    placeholder: { type: String, default: undefined },\n    iconPack: { type: String, default: undefined },\n    sortIcon: { type: String, default: \"arrow-up\" },\n    sortIconSize: { type: String, default: \"small\" },\n    isAsc: { type: Boolean, default: false },\n    mobileSortClasses: { type: Array as PropType<ClassBind[]>, required: true },\n});\n\nconst emits = defineEmits<{\n    (e: \"sort\", column: TableColumn, event: Event);\n}>();\n\nconst mobileSort = ref<string>(\n    getValueByPath(props.currentSortColumn, \"identifier\"),\n);\n\nconst showPlaceholder = computed(\n    () =>\n        !props.columns ||\n        !props.columns.some(\n            (column) =>\n                getValueByPath(column, \"identifier\") === mobileSort.value,\n        ),\n);\n\nconst sortableColumns = computed(() =>\n    props.columns ? props.columns.filter((c) => c.sortable) : [],\n);\n\nconst isCurrentSort = computed(\n    () =>\n        getValueByPath(props.currentSortColumn, \"identifier\") ===\n        mobileSort.value,\n);\n\nwatch(mobileSort, (value) => {\n    if (props.currentSortColumn.identifier === value) return;\n    sort();\n});\n\nwatch(\n    () => props.currentSortColumn,\n    (column) => {\n        mobileSort.value = getValueByPath(column, \"identifier\");\n    },\n);\n\nfunction sort(event?: Event): void {\n    const column = sortableColumns.value.filter(\n        (c) => getValueByPath(c, \"identifier\") === mobileSort.value,\n    )[0];\n    emits(\"sort\", column, event);\n}\n</script>\n\n<template>\n    <div :class=\"mobileSortClasses\">\n        <o-field>\n            <o-select v-model=\"mobileSort\" expanded>\n                <template v-if=\"placeholder\">\n                    <option\n                        v-show=\"showPlaceholder\"\n                        :value=\"{}\"\n                        selected\n                        disabled\n                        hidden>\n                        {{ placeholder }}\n                    </option>\n                </template>\n                <option\n                    v-for=\"(column, index) in sortableColumns\"\n                    :key=\"index\"\n                    :value=\"column.identifier\">\n                    {{ column.label }}\n                </option>\n            </o-select>\n            <o-button @click=\"sort($event)\">\n                <o-icon\n                    v-show=\"isCurrentSort\"\n                    :icon=\"sortIcon\"\n                    :pack=\"iconPack\"\n                    :size=\"sortIconSize\"\n                    both\n                    :rotation=\"!isAsc ? 180 : 0\" />\n            </o-button>\n        </o-field>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { toRaw, computed, getCurrentInstance, type PropType } from \"vue\";\n\nimport { useProviderChild } from \"@/composables\";\nimport { toCssDimension } from \"@/utils/helpers\";\n\nimport type { TableColumnComponent } from \"./types\";\n\n/**\n * @displayName Table Column\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTableColumn\",\n    configField: \"table\",\n});\n\nconst props = defineProps({\n    /** Define the column label */\n    label: { type: String, default: undefined },\n    /** Define an object property key if data is an object */\n    field: { type: String, default: undefined },\n    /** Define a column sub heading  */\n    subheading: { type: String, default: undefined },\n    /** Add addtional meta information for the column for custom purpose*/\n    meta: {\n        type: [String, Number, Boolean, Function, Object, Array],\n        default: undefined,\n    },\n    /** Column fixed width */\n    width: { type: [Number, String], default: undefined },\n    /** Define column value as number */\n    numeric: { type: Boolean, default: false },\n    /**\n     * Position of the column content\n     * @values left, centered, right\n     */\n    position: {\n        type: String,\n        default: undefined,\n        validator: (value: string) =>\n            [\"left\", \"centered\", \"right\"].indexOf(value) > -1,\n    },\n    /** Enable an additional searchbar below the column header */\n    searchable: { type: Boolean, default: false },\n    /** Enable column sortability */\n    sortable: { type: Boolean, default: false },\n    /** Define whether the column is visible or not */\n    visible: { type: Boolean, default: true },\n    /** Define a custom sort function */\n    customSort: {\n        type: Function as PropType<\n            (a: unknown, b: unknown, isAsc: boolean) => number\n        >,\n        default: undefined,\n    },\n    /** Define a custom funtion for the filter search */\n    customSearch: {\n        type: Function as PropType<(row: unknown, filter: string) => boolean>,\n        default: undefined,\n    },\n    /** Whether the column is sticky or not */\n    sticky: { type: Boolean, default: false },\n    /** Make header selectable */\n    headerSelectable: { type: Boolean, default: false },\n    /** Adds native attributes to th */\n    thAttrs: {\n        type: Function as PropType<(column: typeof props) => object>,\n        default: () => ({}),\n    },\n    /** Adds native attributes to td */\n    tdAttrs: {\n        type: Function as PropType<\n            (row: unknown, column: typeof props) => object\n        >,\n        default: () => ({}),\n    },\n});\n\nconst style = computed(() => ({\n    width: toCssDimension(props.width),\n}));\n\nconst isHeaderUnselectable = computed(\n    () => !props.headerSelectable && props.sortable,\n);\n\nconst vm = getCurrentInstance();\n\nconst providedData = computed<TableColumnComponent>(() => ({\n    ...toRaw(props),\n    $el: vm.proxy,\n    $slots: vm.slots,\n    style: style.value,\n    isHeaderUnselectable: isHeaderUnselectable.value,\n}));\n\nconst { item } = useProviderChild({ data: providedData });\n</script>\n\n<template>\n    <span :data-id=\"item.identifier\" data-oruga=\"table-column\">\n        {{ label }}\n\n        <!--\n            Do not render these slots here.\n            These are only for documentation purposes.\n            Slots are defined in table component.\n        -->\n        <template v-if=\"false\">\n            <!--\n                @slot Default Slot\n                @binding {unknown} row - row data \n                @binding {Column} column - column definition \n                @binding {number} index - row index \n                @binding {number} colindex - column index \n                @binding {(row): void} toggle-details - toggle details function \n            -->\n            <slot\n                :row=\"null\"\n                :column=\"null\"\n                :index=\"null\"\n                :colindex=\"null\"\n                :toggle-details=\"null\" />\n            <!--\n                @slot Override header label \n                @binding {Column} column - column definition \n                @binding {number} index - column index \n            -->\n            <slot name=\"header\" :column=\"null\" :index=\"null\" />\n            <!--\n                @slot Override subheading label \n                @binding {Column} column - column definition \n                @binding {number} index - column index \n            -->\n            <slot name=\"subheading\" :column=\"null\" :index=\"null\" />\n\n            <!--\n                @slot Override searchable input \n                @binding {Column} column - column definition \n                @binding {number} index - column index \n                @binding {Record<string,string>} filters - active filters object\n            -->\n            <slot\n                name=\"searchable\"\n                :column=\"null\"\n                :index=\"null\"\n                :filters=\"null\" />\n        </template>\n    </span>\n</template>\n","<script setup lang=\"ts\">\nimport type { PropType } from \"vue\";\n\nimport OPagination from \"../pagination/Pagination.vue\";\n\nimport { usePropBinding } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\ndefineOptions({\n    isOruga: true,\n    name: \"OTablePagination\",\n    configField: \"table\",\n});\n\nconst props = defineProps({\n    current: { type: Number, default: undefined },\n    paginated: { type: Boolean, default: false },\n    rootClass: {\n        type: [String, Array, Object] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * current prop two-way binding\n     * @param value {number} updated current prop\n     */\n    (e: \"update:current\", value: number): void;\n    /**\n     * on current change event\n     * @param value {number} current value\n     */\n    (e: \"change\", event: number): void;\n}>();\n\nconst currentPage = usePropBinding(\"current\", props, emits);\n\n/** Paginator change listener. */\nfunction pageChanged(page: number): void {\n    const newPage = page > 0 ? page : 1;\n    currentPage.value = newPage;\n    emits(\"change\", newPage);\n}\n</script>\n\n<template>\n    <div :class=\"rootClass\">\n        <div>\n            <slot />\n        </div>\n        <div>\n            <o-pagination\n                v-if=\"paginated\"\n                v-bind=\"$attrs\"\n                :current=\"currentPage\"\n                @change=\"pageChanged\" />\n        </div>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport {\n    computed,\n    ref,\n    watch,\n    onMounted,\n    nextTick,\n    useSlots,\n    toValue,\n    type PropType,\n} from \"vue\";\n\nimport OCheckbox from \"../checkbox/Checkbox.vue\";\nimport OIcon from \"../icon/Icon.vue\";\nimport OInput from \"../input/Input.vue\";\nimport OLoading from \"../loading/Loading.vue\";\nimport OSlotComponent from \"../utils/SlotComponent\";\n\nimport OTableMobileSort from \"./TableMobileSort.vue\";\nimport OTableColumn from \"./TableColumn.vue\";\nimport OTablePagination from \"./TablePagination.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport {\n    getValueByPath,\n    indexOf,\n    toCssDimension,\n    escapeRegExpChars,\n    removeDiacriticsFromString,\n    uuid,\n} from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    useProviderParent,\n    usePropBinding,\n    useMatchMedia,\n    useDebounce,\n    getActiveClasses,\n} from \"@/composables\";\n\nimport type { Column, TableColumn, TableColumnComponent } from \"./types\";\nimport type { ComponentClass, ClassBind } from \"@/types\";\n\n/**\n * Tabulated data are sometimes needed, it's even better when it's responsive\n * @displayName Table\n * @requires ./TableColumn.vue\n * @style _table.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTable\",\n    configField: \"table\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Table data */\n    data: { type: Array as PropType<unknown[]>, default: () => [] },\n    /** Table columns */\n    columns: { type: Array as PropType<Column[]>, default: () => [] },\n    /** Border to all cells */\n    bordered: {\n        type: Boolean,\n        default: () => getOption(\"table.bordered\", false),\n    },\n    /** Whether table is striped */\n    striped: {\n        type: Boolean,\n        default: () => getOption(\"table.striped\", false),\n    },\n    /** Makes the cells narrower */\n    narrowed: {\n        type: Boolean,\n        default: () => getOption(\"table.narrowed\", false),\n    },\n    /** Rows are highlighted when hovering */\n    hoverable: {\n        type: Boolean,\n        default: () => getOption(\"table.hoverable\", false),\n    },\n    /** Enable loading state */\n    loading: { type: Boolean, default: false },\n    /** Allow row details  */\n    detailed: { type: Boolean, default: false },\n    /** Rows can be checked (multiple) */\n    checkable: { type: Boolean, default: false },\n    /** Show check/uncheck all checkbox in table header when checkable */\n    headerCheckable: { type: Boolean, default: true },\n    /**\n     * Position of the checkbox when checkable\n     * @values left, right\n     */\n    checkboxPosition: {\n        type: String,\n        default: () => getOption(\"table.checkboxPosition\", \"left\"),\n        validator: (value: string) => [\"left\", \"right\"].indexOf(value) >= 0,\n    },\n    /**\n     * Color of the checkbox when checkable\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    checkboxVariant: {\n        type: String,\n        default: () => getOption(\"table.checkboxVariant\"),\n    },\n    /** Set which row is selected, use v-model:selected to make it two-way binding */\n    selected: { type: Object, default: undefined },\n    /** Custom method to verify if a row is selectable, works when is selected. */\n    isRowSelectable: { type: Function, default: () => true },\n    /** Table can be focused and user can navigate with keyboard arrows (require selected) and rows are highlighted when hovering */\n    focusable: { type: Boolean, default: false },\n    /** Custom method to verify if row is checked, works when is checkable. Useful for backend pagination */\n    customIsChecked: {\n        type: Function as PropType<(row: unknown, data: unknown[]) => boolean>,\n        default: undefined,\n    },\n    /** Custom method to verify if a row is checkable, works when is checkable */\n    isRowCheckable: {\n        type: Function as PropType<(row: unknown) => boolean>,\n        default: (row: unknown) =>\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            getOption(\"table.isRowCheckable\", (row) => true)(row),\n    },\n    /** Set which rows are checked, use v-model:checkedRows to make it two-way binding */\n    checkedRows: { type: Array, default: () => [] },\n    /** Rows appears as cards on mobile (collapse rows) */\n    mobileCards: {\n        type: Boolean,\n        default: () => getOption(\"table.mobileCards\", true),\n    },\n    /** Sets the default sort column and order — e.g. ['first_name', 'desc'] */\n    defaultSort: {\n        type: [String, Array] as PropType<string | string[]>,\n        default: () => getOption(\"table.defaultSort\"),\n    },\n    /**\n     * Sets the default sort column direction on the first click\n     * @values asc, desc\n     */\n    defaultSortDirection: {\n        type: String,\n        default: () => getOption(\"table.defaultSortDirection\", \"asc\"),\n    },\n    /** Sets the header sorting icon */\n    sortIcon: {\n        type: String,\n        default: () => getOption(\"table.sortIcon\", \"arrow-up\"),\n    },\n    /**\n     * Sets the size of the sorting icon\n     * @values small, medium, large\n     */\n    sortIconSize: {\n        type: String,\n        default: () => getOption(\"table.sortIconSize\", \"small\"),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"table.iconPack\"),\n    },\n    /** Columns won't be sorted with Javascript, use with sort event to sort in your backend */\n    backendSorting: {\n        type: Boolean,\n        default: () => getOption(\"table.backendSorting\", false),\n    },\n    /** Columns won't be filtered with Javascript, use with searchable prop to the columns to filter in your backend */\n    backendFiltering: {\n        type: Boolean,\n        default: () => getOption(\"table.backendFiltering\", false),\n    },\n    /** Add a class to row based on the return */\n    rowClass: {\n        type: Function as PropType<(row: unknown, index: number) => string>,\n        default: (row: unknown, index: number) =>\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            getOption(\"table.rowClass\", (row, index) => \"\")(row, index),\n    },\n    /** Allow pre-defined opened details. Ideal to open details via vue-router. (A unique key is required; check detail-key prop) */\n    openedDetailed: { type: Array, default: () => [] },\n    /** Controls the visibility of the trigger that toggles the detailed rows. */\n    hasDetailedVisible: {\n        type: Function as PropType<(row: unknown) => boolean>,\n        default: (row: unknown) =>\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            getOption(\"table.hasDetailedVisible\", (row) => true)(row),\n    },\n    /** Use a unique key of your data Object when use detailed or opened detailed. (id recommended) */\n    detailKey: {\n        type: String,\n        default: () => getOption(\"table.detailKey\"),\n    },\n    /** Allow chevron icon and column to be visible */\n    showDetailIcon: {\n        type: Boolean,\n        default: () => getOption(\"table.showDetailIcon\", true),\n    },\n    /** Icon name of detail action */\n    detailIcon: {\n        type: String,\n        default: () => getOption(\"table.detailIcon\", \"chevron-right\"),\n    },\n    /** Custom style on details */\n    customDetailRow: { type: Boolean, default: false },\n    /* Transition name to use when toggling row details. */\n    detailTransition: {\n        type: String,\n        default: () => getOption(\"table.detailTransition\", \"slide\"),\n    },\n    /** Text when nothing is selected */\n    mobileSortPlaceholder: {\n        type: String,\n        default: () => getOption(\"table.mobileSortPlaceholder\"),\n    },\n    /** Use a unique key of your data Object for each row. Useful if your data prop has dynamic indices. (id recommended) */\n    customRowKey: {\n        type: String,\n        default: () => getOption(\"table.customRowKey\"),\n    },\n    /** Allows rows to be draggable */\n    draggable: { type: Boolean, default: false },\n    /** Allows columns to be draggable */\n    draggableColumn: { type: Boolean, default: false },\n    /** Add a horizontal scrollbar when table is too wide */\n    scrollable: { type: Boolean, default: undefined },\n    /** Show a sticky table header */\n    stickyHeader: { type: Boolean, default: false },\n    /** Table fixed height */\n    height: { type: [Number, String], default: undefined },\n    /** Add a native event to filter */\n    filtersEvent: { type: String, default: \"\" },\n    /** Filtering debounce time (in milliseconds) */\n    debounceSearch: { type: Number, default: undefined },\n    /** Show header */\n    showHeader: {\n        type: Boolean,\n        default: () => getOption(\"table.showHeader\", true),\n    },\n    /** Make the checkbox column sticky when checkable */\n    stickyCheckbox: { type: Boolean, default: false },\n    /** Adds pagination to the table */\n    paginated: {\n        type: Boolean,\n        default: () => getOption(\"table.paginated\", false),\n    },\n    /** Rows won't be paginated with Javascript, use with page-change event to paginate in your backend */\n    backendPagination: { type: Boolean, default: false },\n    /** Total number of table data if backend-pagination is enabled */\n    total: { type: Number, default: 0 },\n    /** Current page of table data (if paginated), use v-model:currentPage to make it two-way binding */\n    currentPage: { type: Number, default: 1 },\n    /** How many rows per page (if paginated) */\n    perPage: {\n        type: [Number, String],\n        default: () => getOption(\"table.perPage\", 20),\n    },\n    /**\n     * Pagination position (if paginated)\n     * @values bottom, top, both\n     */\n    paginationPosition: {\n        type: String,\n        default: () => getOption(\"table.paginationPosition\", \"bottom\"),\n        validator: (value: string) =>\n            [\"bottom\", \"top\", \"both\"].indexOf(value) >= 0,\n    },\n    /** Rounded pagination if paginated */\n    paginationRounded: {\n        type: Boolean,\n        default: () => getOption(\"table.paginationRounded\", false),\n    },\n    /** Size of pagination if paginated */\n    paginationSize: {\n        type: String,\n        default: () => getOption(\"table.paginationSize\", \"small\"),\n    },\n    /** Enable simple style pagination if paginated */\n    paginationSimple: {\n        type: Boolean,\n        default: () => getOption(\"table.paginationSimple\", false),\n    },\n    /**\n     * Pagination buttons order if paginated\n     * @values centered, right, left\n     */\n    paginationOrder: {\n        type: String,\n        default: () => getOption(\"table.paginationOrder\"),\n        validator: (value: string) =>\n            [\"centered\", \"right\", \"left\"].indexOf(value) >= 0,\n    },\n    /** Mobile breakpoint as max-width value */\n    mobileBreakpoint: {\n        type: String,\n        default: () => getOption(\"table.mobileBreakpoint\"),\n    },\n    /** Accessibility label for the pagination next page button. */\n    ariaNextLabel: {\n        type: String,\n        default: () => getOption(\"table.ariaNextLabel\"),\n    },\n    /** Accessibility label for the pagination previous page button. */\n    ariaPreviousLabel: {\n        type: String,\n        default: () => getOption(\"table.ariaPreviousLabel\"),\n    },\n    /** Accessibility label for the pagination page button. */\n    ariaPageLabel: {\n        type: String,\n        default: () => getOption(\"table.ariaPageLabel\"),\n    },\n    /** Accessibility label for the pagination current page button. */\n    ariaCurrentLabel: {\n        type: String,\n        default: () => getOption(\"table.ariaCurrentLabel\"),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table */\n    tableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table wrapper */\n    wrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table footer */\n    footerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table when it is empty */\n    emptyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table row detail */\n    detailedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table when is bordered */\n    borderedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table when rows are striped */\n    stripedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table when rows are narrowed */\n    narrowedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table when is hoverable */\n    hoverableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table wrapper when header is sticky */\n    stickyHeaderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table wrapper when its content is scrollable */\n    scrollableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table row when selected */\n    trSelectedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table row when checkable and checked */\n    trCheckedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element */\n    thClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element when component is positioned */\n    thPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element when component is sticky\" */\n    thStickyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element when is checkable */\n    thCheckboxClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element currently sorted */\n    thCurrentSortClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sortable Table `th` element */\n    thSortableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element that is unsortable */\n    thUnselectableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table sort icon in the header */\n    thSortIconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` element of the detail column of triggers */\n    thDetailedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `th` subheading element */\n    thSubheadingClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `td` element */\n    tdClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `td` element when component is positioned */\n    tdPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `td` element when component is sticky */\n    tdStickyClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `td` element when is checkable */\n    tdCheckboxClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table `td` element that contains the chevron to trigger details */\n    tdDetailedChevronClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the sortable form wrapper on mobile */\n    mobileSortClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table pagination wrapper */\n    paginationWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Table component when on mobile */\n    mobileClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * currentPage prop two-way binding\n     * @param value {number} updated currentPage prop\n     */\n    (e: \"update:currentPage\", value: number): void;\n    /**\n     * on pagination page change event\n     * @param page {number} updated page\n     */\n    (e: \"page-change\", page: number): void;\n    /**\n     * select prop two-way binding\n     * @param value {typeof data} updated select prop\n     */\n    (e: \"update:selected\", value: unknown): void;\n    /**\n     * on row select event\n     * @param newRow {typeof data} new select value\n     * @param oldRow {typeof data} old select value\n     */\n    (e: \"select\", newrow: unknown, oldrow: unknown): void;\n    /**\n     * on row checked event\n     * @param value {Array<typeof data>} all checked rows\n     * @param row {typeof data} row data\n     */\n    (e: \"check\", value: Array<unknown>, row?: unknown): void;\n    /**\n     * on all rows checked event\n     * @param value {Array<typeof data>} all checked rows\n     */\n    (e: \"check-all\", value: Array<unknown>): void;\n    /**\n     * checkedRows prop two-way binding\n     * @param value {Array<typeof data>} updated checkedRows prop\n     */\n    (e: \"update:checkedRows\", value: Array<unknown>): void;\n    /**\n     * on column sort change event\n     * @param column {Column} column data\n     * @param direction {string}  'asc' or 'desc'\n     *\n     * @param event {Event} native  event\n     */\n    (e: \"sort\", column: Column, direction: \"asc\" | \"desc\", event: Event): void;\n    /**\n     * on filter change event\n     * @param filters {Record<string, string>} filter object\n     */\n    (e: \"filters-change\", value: Record<string, string>): void;\n    /**\n     * on natvie filter event based on props filtersEvent\n     * @param filtersEvent {string} props filtersEvent value\n     * @param filters {Record<string, string>} filter object\n     * @param event {Event} native  event\n     */\n    (\n        e: \"filters-event\",\n        filtersEvent: string,\n        filters: Record<string, string>,\n        event: Event,\n    ): void;\n    /**\n     * openedDetailed prop two-way binding\n     * @param value {Array<typeof data>} updated openedDetailed prop\n     */\n    (e: \"update:openedDetailed\", value: Array<unknown>): void;\n    /**\n     * on details open event\n     * @param row {typeof data} row data\n     */\n    (e: \"details-open\", row: unknown): void;\n    /**\n     * on details close event\n     * @param row {typeof data} row data\n     */\n    (e: \"details-close\", row: unknown): void;\n    /**\n     * on row click event\n     * @param row {typeof data} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native click event\n     */\n    (e: \"click\", row: unknown, index: number, event: Event): void;\n    /**\n     * on row double click event\n     * @param row {typeof data} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native click event\n     */\n    (e: \"dblclick\", row: unknown, index: number, event: Event): void;\n    /**\n     * on row right click event\n     * @param row {typeof data} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native contextmenu event\n     */\n    (e: \"contextmenu\", row: unknown, index: number, event: Event): void;\n    /**\n     * on row mouseenter event\n     * @param row {typeof data} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native mouseenter event\n     */\n    (e: \"mouseenter\", row: unknown, index: number, event: Event): void;\n    /**\n     * on row mouseleave event\n     * @param row {typeof data} row data\n     * @param index {number} index of clicked row\n     * @param event {Event} native mouseleave event\n     */\n    (e: \"mouseleave\", row: unknown, index: number, event: Event): void;\n    /**\n     * on cell click event\n     * @param row {typeof data} row data\n     * @param column {Column} column data\n     * @param index {number} row index\n     * @param colindex {number} column index\n     * @param event {Event} native click event\n     */\n    (\n        e: \"cell-click\",\n        row: unknown,\n        column: Column,\n        index: number,\n        colindex: number,\n        event: Event,\n    ): void;\n    /**\n     * on row dragstart event\n     * @param row {typeof data} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native dragstart event\n     */\n    (e: \"dragstart\", row: unknown, index: number, event: DragEvent): void;\n    /**\n     * on row dragend event\n     * @param row {typeof data} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native dragend event\n     */\n    (e: \"dragend\", row: unknown, index: number, event: DragEvent): void;\n    /**\n     * on row drop event\n     * @param row {typeof data} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native drop event\n     */\n    (e: \"drop\", row: unknown, index: number, event: DragEvent): void;\n\n    /**\n     * on row dragleave event\n     * @param row {typeof data} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native dragleave event\n     */\n    (e: \"dragleave\", row: unknown, index: number, event: DragEvent): void;\n    /**\n     * on row dragover event\n     * @param row {typeof data} row data\n     * @param index {number} index of draged row\n     * @param event {DragEvent} native dragover event\n     */\n    (e: \"dragover\", row: unknown, index: number, event: DragEvent): void;\n    /**\n     * on column columndragstart event\n     * @param column {Column} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndragstart event\n     */\n    (\n        e: \"columndragstart\",\n        column: Column,\n        index: number,\n        event: DragEvent,\n    ): void;\n    /**\n     * on column columndragend event\n     * @param column {Column} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndragend event\n     */\n    (e: \"columndragend\", column: Column, index: number, event: DragEvent): void;\n    /**\n     * on column columndrop event\n     * @param column {Column} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndrop event\n     */\n    (e: \"columndrop\", column: Column, index: number, event: DragEvent): void;\n    /**\n     * on column columndragleave event\n     * @param column {Column} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndragleave event\n     */\n    (\n        e: \"columndragleave\",\n        column: Column,\n        index: number,\n        event: DragEvent,\n    ): void;\n    /**\n     * on column columndragover event\n     * @param column {Column} column data\n     * @param index {number} index of draged column\n     * @param event {DragEvent} native columndragover event\n     */\n    (\n        e: \"columndragover\",\n        column: Column,\n        index: number,\n        event: DragEvent,\n    ): void;\n}>();\n\nconst { isMobile } = useMatchMedia(props.mobileBreakpoint);\n\nconst isMobileActive = computed(() => props.mobileCards && isMobile.value);\n\nconst rootRef = ref<HTMLElement>();\nconst slotRef = ref<HTMLElement>();\n\n/** Provide functionalities and data to child item components */\nconst provider = useProviderParent<TableColumnComponent>(slotRef);\n\nconst tableColumns = computed<TableColumn[]>(() =>\n    provider.sortedItems.value.map((column) => ({\n        index: column.index,\n        identifier: column.identifier,\n        ...toValue(column.data),\n        thAttrsData: {},\n        tdAttrsData: [],\n    })),\n);\n\nconst tableData = computed(() => {\n    if (!props.data?.length) return [...props.data];\n    // if no customRowKey is given and data are objects, create unique row id for each row\n    return props.data.map((row) =>\n        !props.customRowKey && typeof row === \"object\"\n            ? Object.assign({ __rowKey: uuid() }, row)\n            : row,\n    );\n});\n\nconst tableRows = ref(tableData.value);\nconst dataTotal = ref(\n    props.backendPagination ? props.total : tableData.value.length,\n);\n\nconst tableCurrentPage = usePropBinding<number>(\"currentPage\", props, emits, {\n    passive: true,\n});\n\n/**\n * When table rows data change:\n *   1. Update internal value.\n *   2. Filter data if it's not backend-filtered.\n *   3. Sort again if it's not backend-sorted.\n *   4. Set new total if it's not backend-paginated.\n */\nwatch(\n    () => tableData.value,\n    (value) => {\n        // if not backend filtered, filter rows\n        if (!props.backendFiltering)\n            tableRows.value = value.filter((row) => isRowFiltered(row));\n        else tableRows.value = [...value];\n        // if not backend sorted, sort rows\n        if (!props.backendSorting) sort(currentSortColumn.value, true);\n        // if not backend paginated, set pagination total\n        if (!props.backendPagination) dataTotal.value = tableRows.value.length;\n    },\n    { deep: true },\n);\n\n/**\n * When Pagination total change, update internal total\n * only if it's backend-paginated.\n */\nwatch(\n    () => props.total,\n    (newTotal) => {\n        if (!props.backendPagination) return;\n        dataTotal.value = newTotal;\n    },\n);\n\nconst tableWrapperStyle = computed(() => ({\n    height: toCssDimension(props.height),\n}));\n\n/** Splitted data based on the pagination. */\nconst visibleRows = computed(() => {\n    if (!props.paginated) return tableRows.value;\n\n    const currentPage = tableCurrentPage.value;\n    const perPage = Number(props.perPage);\n\n    if (tableRows.value.length <= perPage) {\n        return tableRows.value;\n    } else {\n        const start = (currentPage - 1) * perPage;\n        const end = start + perPage;\n        return tableRows.value.slice(start, end);\n    }\n});\n\nconst visibleColumns = computed(() => {\n    if (!tableColumns.value) return [];\n    return tableColumns.value.filter(\n        (column) => column.visible || column.visible === undefined,\n    );\n});\n\n/** process thAttrs & tdAttrs when row or columns got changed */\nwatch([visibleRows, visibleColumns], () => {\n    if (visibleColumns.value.length && visibleRows.value.length) {\n        for (let i = 0; i < visibleColumns.value.length; i++) {\n            const col = visibleColumns.value[i];\n            col.thAttrsData =\n                typeof col.thAttrs === \"function\" ? col.thAttrs(col) : {};\n            col.tdAttrsData = visibleRows.value.map((data) =>\n                typeof col.tdAttrs === \"function\" ? col.tdAttrs(data, col) : {},\n            );\n        }\n    }\n});\n\n/** Return total column count based if it's checkable or expanded */\nconst columnCount = computed(() => {\n    let count = visibleColumns.value.length;\n    count += props.checkable ? 1 : 0;\n    count += props.detailed && props.showDetailIcon ? 1 : 0;\n    return count;\n});\n\n/** Check if has any searchable column. */\nconst hasSearchablenewColumns = computed(() =>\n    tableColumns.value.some((column) => column.searchable),\n);\n\n/** return if scrollable table */\nconst isScrollable = computed(() => {\n    if (props.scrollable) return true;\n    if (!tableColumns.value) return false;\n    return tableColumns.value.some((column) => column.sticky);\n});\n\nconst slots = useSlots();\n\nconst hasCustomSubheadings = computed(() => {\n    if (slots.subheading) return true;\n    return tableColumns.value.some((column) => !!column.subheading);\n});\n\n/** Check if footer slot has custom content. */\nfunction hasCustomFooterSlot(): boolean {\n    if (slots.footer) {\n        // [Vue warn]: Slot \"footer\" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.\n        const footer = slots.footer();\n        if (footer.length > 1) return true;\n\n        const tag = footer[0][\"tag\"];\n        if (tag !== \"th\" && tag !== \"td\") return false;\n    }\n    return true;\n}\n\n/** Table arrow keys listener, change selection. */\nfunction onArrowPressed(pos: number, event: KeyboardEvent): void {\n    if (!visibleRows.value.length) return;\n\n    let index = visibleRows.value.indexOf(props.selected) + pos;\n\n    // Prevent from going up from first and down from last\n    index =\n        index < 0\n            ? 0\n            : index > visibleRows.value.length - 1\n              ? visibleRows.value.length - 1\n              : index;\n\n    const row = visibleRows.value[index];\n\n    if (!props.isRowSelectable(row)) {\n        let newIndex = null;\n        if (pos > 0) {\n            for (\n                let i = index;\n                i < visibleRows.value.length && newIndex === null;\n                i++\n            ) {\n                if (props.isRowSelectable(visibleRows.value[i])) newIndex = i;\n            }\n        } else {\n            for (let i = index; i >= 0 && newIndex === null; i--) {\n                if (props.isRowSelectable(visibleRows.value[i])) newIndex = i;\n            }\n        }\n        if (newIndex >= 0) {\n            selectRow(visibleRows.value[newIndex], index, event);\n        }\n    } else {\n        selectRow(row, index, event);\n    }\n}\n\n/**\n * Row click listener.\n * Emit all necessary events.\n */\nfunction selectRow(row: unknown, index: number, event: Event): void {\n    emits(\"click\", row, index, event);\n\n    if (props.selected === row) return;\n    if (!props.isRowSelectable(row)) return;\n\n    // emit new and old row\n    emits(\"select\", row, props.selected);\n\n    // emit new row to update user variable\n    emits(\"update:selected\", row);\n}\n\nfunction isRowSelected(row: unknown, selectedRow: unknown): boolean {\n    return selectedRow ? getRowKey(row) === getRowKey(selectedRow) : false;\n}\n\nfunction getRowKey(row: unknown): unknown {\n    if (props.customRowKey) return row[props.customRowKey];\n    if (typeof row === \"object\") return row[\"__rowKey\"];\n    return row;\n}\n\n// --- Filter Feature ---\n\nconst filters = ref<Record<string, string>>({});\n\nwatch(\n    filters.value,\n    (value) => {\n        if (props.debounceSearch)\n            useDebounce(() => handleFiltersChange(value), props.debounceSearch);\n        else handleFiltersChange(value);\n    },\n    { deep: true },\n);\n\nfunction onFiltersEvent(event: Event): void {\n    emits(\"filters-event\", props.filtersEvent, filters.value, event);\n}\n\nfunction handleFiltersChange(value: Record<string, string>): void {\n    if (props.backendFiltering) {\n        emits(\"filters-change\", value);\n    } else {\n        tableRows.value = props.data.filter((row) => isRowFiltered(row));\n        if (!props.backendPagination) {\n            dataTotal.value = tableRows.value.length;\n        }\n        if (!props.backendSorting) {\n            if (Object.keys(currentSortColumn.value).length > 0) {\n                doSortSingleColumn(currentSortColumn.value);\n            }\n        }\n    }\n}\n\nfunction isRowFiltered(row: unknown): boolean {\n    for (const key in filters.value) {\n        if (!filters.value[key]) continue;\n        const input = filters.value[key];\n        const column = tableColumns.value.filter((c) => c.field === key)[0];\n        if (typeof column?.customSearch === \"function\") {\n            if (!column.customSearch(row, input)) return false;\n        } else {\n            const value = getValueByPath(row, key);\n            if (value == null) return false;\n            if (Number.isInteger(value)) {\n                if (value !== Number(input)) return false;\n            } else {\n                const re = new RegExp(escapeRegExpChars(input), \"i\");\n                if (Array.isArray(value)) {\n                    const valid = value.some(\n                        (val) =>\n                            re.test(removeDiacriticsFromString(val)) ||\n                            re.test(val),\n                    );\n                    if (!valid) return false;\n                } else {\n                    if (\n                        !re.test(removeDiacriticsFromString(value)) &&\n                        !re.test(value)\n                    ) {\n                        return false;\n                    }\n                }\n            }\n        }\n    }\n    return true;\n}\n\n// --- Sort Feature ---\n\nconst currentSortColumn = ref<TableColumn>();\nconst isAsc = ref(true);\n\nonMounted(() => nextTick(() => checkSort()));\n\n/** Check if has any sortable column. */\nconst hasSortablenewColumns = computed(() =>\n    tableColumns.value.some((column) => column.sortable),\n);\n\n/** Check if the column is the current sort column. */\nfunction isColumnSorted(column: TableColumn): boolean {\n    return currentSortColumn.value?.identifier === column.identifier;\n}\n\n/** Call initSort only first time (For example async data). */\nfunction checkSort(): void {\n    if (tableColumns.value.length && !currentSortColumn.value) {\n        // is first time sort\n        initSort();\n    } else if (tableColumns.value.length) {\n        if (\n            currentSortColumn.value &&\n            Object.keys(currentSortColumn.value).length > 0\n        ) {\n            for (let i = 0; i < tableColumns.value.length; i++) {\n                if (\n                    currentSortColumn.value.field ===\n                    tableColumns.value[i].field\n                ) {\n                    currentSortColumn.value = tableColumns.value[i];\n                    break;\n                }\n            }\n        }\n    }\n}\n\n/** Initial sorted column based on the default-sort prop. */\nfunction initSort(): void {\n    if (!props.defaultSort) return;\n    let sortField = \"\";\n    let sortDirection = props.defaultSortDirection;\n    if (Array.isArray(props.defaultSort)) {\n        sortField = props.defaultSort[0];\n        if (props.defaultSort[1]) {\n            sortDirection = props.defaultSort[1];\n        }\n    } else {\n        sortField = props.defaultSort;\n    }\n    const sortColumn = tableColumns.value.filter(\n        (column) => column.field === sortField,\n    )[0];\n    if (sortColumn) {\n        isAsc.value = sortDirection.toLowerCase() !== \"desc\";\n        sort(sortColumn, true);\n    }\n}\n\n/**\n * Sort the column.\n * Toggle current direction on column if it's sortable\n * and not just updating the prop.\n */\nfunction sort(\n    column: TableColumn,\n    updateDirection = false,\n    event?: Event,\n): void {\n    if (!column || !column.sortable) return;\n\n    if (!updateDirection)\n        isAsc.value = isColumnSorted(column)\n            ? !isAsc.value\n            : props.defaultSortDirection.toLowerCase() !== \"desc\";\n\n    // if not first time sort\n    if (currentSortColumn.value)\n        emits(\"sort\", column, isAsc.value ? \"asc\" : \"desc\", event);\n\n    if (!props.backendSorting) doSortSingleColumn(column);\n\n    currentSortColumn.value = column;\n}\n\nfunction doSortSingleColumn(column: Column): void {\n    tableRows.value = sortBy(\n        tableRows.value,\n        column.field,\n        column.customSort,\n        isAsc.value,\n    );\n}\n\n/**\n * Sort an array by key without mutating original data.\n * Call the user sort function if it was passed.\n */\nfunction sortBy(\n    array: unknown[],\n    key: string,\n    fn: (a: unknown, b: unknown, asc: boolean) => number,\n    isAsc: boolean,\n): unknown[] {\n    let sorted = [];\n    // Sorting without mutating original data\n    if (fn && typeof fn === \"function\") {\n        sorted = [...array].sort((a, b) => fn(a, b, isAsc));\n    } else {\n        sorted = [...array].sort((a, b) => {\n            // Get nested values from objects\n            let newA = getValueByPath(a, key);\n            let newB = getValueByPath(b, key);\n\n            // sort boolean type\n            if (typeof newA === \"boolean\" && typeof newB === \"boolean\") {\n                return isAsc ? (newA > newB ? 1 : -1) : newA > newB ? -1 : 1;\n            }\n\n            if (!newA && newA !== 0) return 1;\n            if (!newB && newB !== 0) return -1;\n            if (newA === newB) return 0;\n\n            newA = typeof newA === \"string\" ? newA.toUpperCase() : newA;\n            newB = typeof newB === \"string\" ? newB.toUpperCase() : newB;\n\n            return isAsc ? (newA > newB ? 1 : -1) : newA > newB ? -1 : 1;\n        });\n    }\n\n    return sorted;\n}\n\n// --- Checkable Feature ---\n\nconst newCheckedRows = ref([...props.checkedRows]);\nconst lastCheckedRowIndex = ref(null);\n\n/**\n * When checkedRows prop change, update internal value without\n * mutating original data.\n */\nwatch(\n    () => props.checkedRows,\n    (rows) => {\n        newCheckedRows.value = [...rows];\n    },\n    { deep: true },\n);\n\n/** Check if all rows in the page are checked. */\nconst isAllChecked = computed(() => {\n    const validVisibleData = visibleRows.value.filter((row) =>\n        props.isRowCheckable(row),\n    );\n    if (validVisibleData.length === 0) return false;\n    const isAllChecked = validVisibleData.some(\n        (currentVisibleRow) =>\n            indexOf(\n                newCheckedRows.value,\n                currentVisibleRow,\n                props.customIsChecked,\n            ) < 0,\n    );\n    return !isAllChecked;\n});\n\n/** Check if all rows in the page are checkable. */\nconst isAllUncheckable = computed(() => {\n    const validVisibleData = visibleRows.value.filter((row) =>\n        props.isRowCheckable(row),\n    );\n    return validVisibleData.length === 0;\n});\n\n/** Check if the row is checked (is added to the array). */\nfunction isRowChecked(row: unknown): boolean {\n    return indexOf(newCheckedRows.value, row, props.customIsChecked) >= 0;\n}\n\n/** Remove a checked row from the array. */\nfunction removeCheckedRow(row: unknown): void {\n    const index = indexOf(newCheckedRows.value, row, props.customIsChecked);\n    if (index >= 0) newCheckedRows.value.splice(index, 1);\n}\n\n/**\n * Header checkbox click listener.\n * Add or remove all rows in current page.\n */\nfunction checkAll(): void {\n    const allChecked = isAllChecked.value;\n    visibleRows.value.forEach((currentRow) => {\n        if (props.isRowCheckable(currentRow)) removeCheckedRow(currentRow);\n\n        if (!allChecked) {\n            if (props.isRowCheckable(currentRow))\n                newCheckedRows.value.push(currentRow);\n        }\n    });\n\n    emits(\"check\", newCheckedRows.value);\n    emits(\"check-all\", newCheckedRows.value);\n\n    // Emit checked rows to update user variable\n    emits(\"update:checkedRows\", newCheckedRows.value);\n}\n\n/** Row checkbox click listener. */\nfunction checkRow(row: unknown, index: number): void {\n    if (!props.isRowCheckable(row)) return;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const lastIndex = lastCheckedRowIndex.value;\n    lastCheckedRowIndex.value = index;\n\n    // if (event.shiftKey && lastIndex !== null && index !== lastIndex) {\n    //         shiftCheckRow(row, index, lastIndex);\n\n    if (!isRowChecked(row)) newCheckedRows.value.push(row);\n    else removeCheckedRow(row);\n\n    emits(\"check\", newCheckedRows.value, row);\n\n    // Emit checked rows to update user variable\n    emits(\"update:checkedRows\", newCheckedRows.value);\n}\n\n/** Check row when shift is pressed. */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction shiftCheckRow(\n    row: unknown,\n    index: number,\n    lastCheckedRowIndex: number,\n): void {\n    // Get the subset of the list between the two indicies\n    const subset = visibleRows.value.slice(\n        Math.min(index, lastCheckedRowIndex),\n        Math.max(index, lastCheckedRowIndex) + 1,\n    );\n\n    // Determine the operation based on the state of the clicked checkbox\n    const shouldCheck = !isRowChecked(row);\n\n    subset.forEach((item) => {\n        removeCheckedRow(item);\n        if (shouldCheck && props.isRowCheckable(item))\n            newCheckedRows.value.push(item);\n    });\n}\n\n// --- Detail Row Feature ---\n\nconst visibleDetailRows = ref(props.openedDetailed);\n\n/**\n * return if detailed row tabled\n * will be with chevron column & icon or not\n */\nconst showDetailRowIcon = computed(\n    () => props.detailed && props.showDetailIcon,\n);\n\n/**\n * When the user wants to control the detailed rows via props.\n * Or wants to open the details of certain row with the router for example.\n */\nwatch(\n    () => props.openedDetailed,\n    (expandedRows) => {\n        visibleDetailRows.value = expandedRows;\n    },\n);\n\n/** Toggle to show/hide details slot */\nfunction toggleDetails(row: unknown): void {\n    const found = isVisibleDetailRow(row);\n\n    if (found) {\n        closeDetailRow(row);\n        emits(\"details-close\", row);\n    } else {\n        openDetailRow(row);\n        emits(\"details-open\", row);\n    }\n\n    // Syncs the detailed rows with the parent component\n    emits(\"update:openedDetailed\", visibleDetailRows.value);\n}\n\nfunction openDetailRow(row: unknown): void {\n    const index = handleDetailKey(row);\n    visibleDetailRows.value.push(index);\n}\n\nfunction closeDetailRow(row: unknown): void {\n    const index = handleDetailKey(row);\n    const i = visibleDetailRows.value.indexOf(index);\n    if (i >= 0) visibleDetailRows.value.splice(i, 1);\n}\n\nfunction isVisibleDetailRow(row: unknown): boolean {\n    const index = handleDetailKey(row);\n    return visibleDetailRows.value.indexOf(index) >= 0;\n}\n\nfunction isActiveDetailRow(row: unknown): boolean {\n    return props.detailed && !props.customDetailRow && isVisibleDetailRow(row);\n}\n\nfunction isActiveCustomDetailRow(row: unknown): boolean {\n    return props.detailed && props.customDetailRow && isVisibleDetailRow(row);\n}\n\n/**\n * When the detailKey is defined we use the object[detailKey] as index.\n * If not, use the object reference by default.\n */\nfunction handleDetailKey(row: unknown): string {\n    const key = props.detailKey;\n    return !key?.length || !row ? row : row[key];\n}\n\n// --- Drag&Drop Feature ---\n\nconst isDraggingRow = ref(false);\nconst isDraggingColumn = ref(false);\n\nconst canDragRow = computed(() => props.draggable && !isDraggingColumn.value);\n\nconst canDragColumn = computed(\n    () => props.draggableColumn && !isDraggingRow.value,\n);\n\n/** Emits drag start event*/\nfunction handleDragStart(row: unknown, index: number, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"dragstart\", row, index, event);\n}\n\n/** Emits drag leave event */\nfunction handleDragEnd(row: unknown, index: number, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"dragend\", row, index, event);\n}\n\n/** Emits drop event */\nfunction handleDrop(row: unknown, index: number, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"drop\", row, index, event);\n}\n\n/** Emits drag over event */\nfunction handleDragOver(row: unknown, index: number, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"dragover\", row, index, event);\n}\n\n/** Emits drag leave event */\nfunction handleDragLeave(row: unknown, index: number, event: DragEvent): void {\n    if (!props.draggable) return;\n    emits(\"dragleave\", row, index, event);\n}\n\n/** Emits drag start event (column) */\nfunction handleColumnDragStart(\n    column: Column,\n    index: number,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    isDraggingColumn.value = true;\n    emits(\"columndragstart\", column, index, event);\n}\n\n/** Emits drag leave event (column) */\nfunction handleColumnDragEnd(\n    column: Column,\n    index: number,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    isDraggingColumn.value = false;\n    emits(\"columndragend\", column, index, event);\n}\n\n/** Emits drop event (column) */\nfunction handleColumnDrop(\n    column: Column,\n    index: number,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    emits(\"columndrop\", column, index, event);\n}\n\n/** Emits drag over event (column) */\nfunction handleColumnDragOver(\n    column: Column,\n    index: number,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    emits(\"columndragover\", column, index, event);\n}\n\n/** Emits drag leave event (column) */\nfunction handleColumnDragLeave(\n    column: Column,\n    index: number,\n    event: DragEvent,\n): void {\n    if (!canDragColumn.value) return;\n    emits(\"columndragleave\", column, index, event);\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-table__root\"],\n    [\"mobileClass\", \"o-table__wrapper--mobile\", null, isMobileActive],\n);\n\nconst tableClasses = defineClasses(\n    [\"tableClass\", \"o-table\"],\n    [\n        \"borderedClass\",\n        \"o-table--bordered\",\n        null,\n        computed(() => props.bordered),\n    ],\n    [\"stripedClass\", \"o-table--striped\", null, computed(() => props.striped)],\n    [\n        \"narrowedClass\",\n        \"o-table--narrowed\",\n        null,\n        computed(() => props.narrowed),\n    ],\n    [\n        \"hoverableClass\",\n        \"o-table--hoverable\",\n        null,\n        computed(\n            () =>\n                (props.hoverable || props.focusable) &&\n                !!visibleRows.value.length,\n        ),\n    ],\n    [\n        \"emptyClass\",\n        \"o-table--table__empty\",\n        null,\n        computed(() => !visibleRows.value.length),\n    ],\n);\n\nconst tableWrapperClasses = defineClasses(\n    [\"wrapperClass\", \"o-table__wrapper\"],\n    [\n        \"stickyHeaderClass\",\n        \"o-table__wrapper--sticky-header\",\n        null,\n        computed(() => props.stickyHeader),\n    ],\n    [\"scrollableClass\", \"o-table__wrapper--scrollable\", null, isScrollable],\n    [\"mobileClass\", \"o-table__wrapper--mobile\", null, isMobileActive],\n);\n\nconst footerClasses = defineClasses([\"footerClass\", \"o-table__footer\"]);\n\nconst thBaseClasses = defineClasses([\"thClass\", \"o-table__th\"]);\n\nconst tdBaseClasses = defineClasses([\"tdClass\", \"o-table__td\"]);\n\nconst thCheckboxClasses = defineClasses([\n    \"thCheckboxClass\",\n    \"o-table__th-checkbox\",\n]);\n\nconst thDetailedClasses = defineClasses([\n    \"thDetailedClass\",\n    \"o-table__th--detailed\",\n]);\n\nconst thSubheadingClasses = defineClasses([\"thSubheadingClass\", \"o-table__th\"]);\n\nconst tdCheckboxClasses = defineClasses(\n    [\"tdCheckboxClass\", \"o-table__td-checkbox\"],\n    [\n        \"thStickyClass\",\n        \"o-table__th--sticky\",\n        null,\n        computed(() => props.stickyCheckbox),\n    ],\n);\n\nconst detailedClasses = defineClasses([\"detailedClass\", \"o-table__detail\"]);\n\nconst tdDetailedChevronClasses = defineClasses([\n    \"tdDetailedChevronClass\",\n    \"o-table__td-chevron\",\n]);\n\nconst mobileSortClasses = defineClasses([\n    \"mobileSortClass\",\n    \"o-table__mobile-sort\",\n]);\n\nconst paginationWrapperClasses = defineClasses([\n    \"paginationWrapperClass\",\n    \"o-table__pagination\",\n]);\n\nconst paginationWrapperRootClasses = computed(() =>\n    getActiveClasses(paginationWrapperClasses.value),\n);\n\nconst thSortIconClasses = defineClasses([\n    \"thSortIconClass\",\n    \"o-table__th__sort-icon\",\n]);\n\nfunction thClasses(column: TableColumn): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"thCurrentSortClass\",\n            \"o-table__th-current-sort\",\n            null,\n            isColumnSorted(column),\n        ],\n        [\"thSortableClass\", \"o-table__th--sortable\", null, column.sortable],\n        [\n            \"thUnselectableClass\",\n            \"o-table__th--unselectable\",\n            null,\n            column.isHeaderUnselectable,\n        ],\n        [\n            \"thPositionClass\",\n            \"o-table__th--\",\n            column.position,\n            !!column.position,\n        ],\n        [\"thStickyClass\", \"o-table__th--sticky\", null, column.sticky],\n    );\n\n    return [...thBaseClasses.value, ...classes.value];\n}\n\nfunction rowClasses(row: unknown, index: number): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"trSelectedClass\",\n            \"o-table__tr--selected\",\n            null,\n            isRowSelected(row, props.selected),\n        ],\n        [\"trCheckedClass\", \"o-table__tr--checked\", null, isRowChecked(row)],\n    );\n\n    const rowClass = props.rowClass(row, index);\n\n    return [...classes.value, { [rowClass]: true }];\n}\n\nfunction tdClasses(row: unknown, column: TableColumnComponent): ClassBind[] {\n    const classes = defineClasses(\n        [\n            \"tdPositionClass\",\n            \"o-table__td--\",\n            column.position,\n            !!column.position,\n        ],\n\n        [\"tdStickyClass\", \"o-table__td--sticky\", null, column.sticky],\n    );\n\n    return [...tdBaseClasses.value, ...classes.value];\n}\n</script>\n\n<template>\n    <div ref=\"rootRef\" :class=\"rootClasses\" data-oruga=\"table\">\n        <div ref=\"slotRef\" style=\"display: none\">\n            <!--\n                @slot Place o-table-column here\n            -->\n            <slot>\n                <template v-if=\"columns?.length\">\n                    <o-table-column\n                        v-for=\"(column, idx) in columns\"\n                        :key=\"idx\"\n                        v-slot=\"{ row }\"\n                        v-bind=\"column\">\n                        {{ column.field ? row[column.field] : row }}\n                    </o-table-column>\n                </template>\n            </slot>\n        </div>\n\n        <o-table-mobile-sort\n            v-if=\"isMobileActive && hasSortablenewColumns\"\n            :current-sort-column=\"currentSortColumn\"\n            :columns=\"tableColumns\"\n            :placeholder=\"mobileSortPlaceholder\"\n            :icon-pack=\"iconPack\"\n            :sort-icon=\"sortIcon\"\n            :sort-icon-size=\"sortIconSize\"\n            :is-asc=\"isAsc\"\n            :mobile-sort-classes=\"mobileSortClasses\"\n            @sort=\"(column, event) => sort(column, null, event)\" />\n\n        <template\n            v-if=\"\n                paginated &&\n                (paginationPosition === 'top' || paginationPosition === 'both')\n            \">\n            <!--\n                @slot Override pagination label\n                @binding {number} current - current page\n                @binding {number} per-page - rows per page\n                @binding {number} total - total rows count\n                @binding {(page: number): void } change - on page change event\n            -->\n            <slot\n                name=\"pagination\"\n                :current=\"tableCurrentPage\"\n                :per-page=\"perPage\"\n                :total=\"dataTotal\"\n                :change=\"(page) => (tableCurrentPage = page)\">\n                <o-table-pagination\n                    v-bind=\"$attrs\"\n                    v-model:current=\"tableCurrentPage\"\n                    :paginated=\"paginated\"\n                    :per-page=\"perPage\"\n                    :total=\"dataTotal\"\n                    :rounded=\"paginationRounded\"\n                    :size=\"paginationSize\"\n                    :order=\"paginationOrder\"\n                    :simple=\"paginationSimple\"\n                    :icon-pack=\"iconPack\"\n                    :aria-next-label=\"ariaNextLabel\"\n                    :aria-previous-label=\"ariaPreviousLabel\"\n                    :aria-page-label=\"ariaPageLabel\"\n                    :aria-current-label=\"ariaCurrentLabel\"\n                    :root-class=\"paginationWrapperRootClasses\"\n                    @change=\"(page) => $emit('page-change', page)\">\n                    <!--\n                        @slot Additional slot if table is paginated\n                    -->\n                    <slot name=\"top-left\" />\n                </o-table-pagination>\n            </slot>\n        </template>\n\n        <div :class=\"tableWrapperClasses\" :style=\"tableWrapperStyle\">\n            <table\n                :class=\"tableClasses\"\n                :tabindex=\"!focusable ? null : 0\"\n                @keydown.self.prevent.up=\"onArrowPressed(-1, $event)\"\n                @keydown.self.prevent.down=\"onArrowPressed(1, $event)\">\n                <caption v-if=\"$slots.caption\">\n                    <!--\n                        @slot Define a table caption here\n                    -->\n                    <slot name=\"caption\" />\n                </caption>\n                <thead v-if=\"tableColumns.length && showHeader\">\n                    <!--\n                        @slot Define preheader content here\n                    -->\n                    <slot name=\"preheader\" />\n                    <tr>\n                        <th\n                            v-if=\"showDetailRowIcon\"\n                            :class=\"[...thBaseClasses, ...thDetailedClasses]\" />\n                        <th\n                            v-if=\"checkable && checkboxPosition === 'left'\"\n                            :class=\"[...thBaseClasses, ...thCheckboxClasses]\">\n                            <!--\n                                @slot Override check all checkbox\n                                @binding {boolean} is-all-checked - if all rows are checked\n                                @binding {boolean} is-all-uncheckable - if check all is uncheckable\n                                @binding {(): void} check-all - check all function\n                            -->\n                            <slot\n                                name=\"check-all\"\n                                :is-all-checked=\"isAllChecked\"\n                                :is-all-uncheckable=\"isAllUncheckable\"\n                                :check-all=\"checkAll\">\n                                <o-checkbox\n                                    v-if=\"headerCheckable\"\n                                    :model-value=\"isAllChecked\"\n                                    autocomplete=\"off\"\n                                    :variant=\"checkboxVariant\"\n                                    :disabled=\"isAllUncheckable\"\n                                    @update:model-value=\"checkAll\" />\n                            </slot>\n                        </th>\n                        <th\n                            v-for=\"(column, index) in visibleColumns\"\n                            :key=\"column.identifier + ':' + index + 'header'\"\n                            v-bind=\"column.thAttrsData\"\n                            :class=\"thClasses(column)\"\n                            :style=\"isMobileActive ? {} : column.style\"\n                            :draggable=\"canDragColumn\"\n                            @click.stop=\"sort(column, null, $event)\"\n                            @dragstart=\"\n                                handleColumnDragStart(column, index, $event)\n                            \"\n                            @dragend=\"\n                                handleColumnDragEnd(column, index, $event)\n                            \"\n                            @drop=\"handleColumnDrop(column, index, $event)\"\n                            @dragover=\"\n                                handleColumnDragOver(column, index, $event)\n                            \"\n                            @dragleave=\"\n                                handleColumnDragLeave(column, index, $event)\n                            \">\n                            <template v-if=\"column.$slots?.header\">\n                                <o-slot-component\n                                    :component=\"column.$el\"\n                                    name=\"header\"\n                                    tag=\"span\"\n                                    :props=\"{ column, index }\" />\n                            </template>\n                            <template v-else>\n                                <span>\n                                    {{ column.label }}\n                                    <span\n                                        v-show=\"\n                                            column.sortable &&\n                                            isColumnSorted(column)\n                                        \"\n                                        :class=\"thSortIconClasses\">\n                                        <o-icon\n                                            :icon=\"sortIcon\"\n                                            :pack=\"iconPack\"\n                                            both\n                                            :size=\"sortIconSize\"\n                                            :rotation=\"!isAsc ? 180 : 0\" />\n                                    </span>\n                                </span>\n                            </template>\n                        </th>\n                        <th\n                            v-if=\"checkable && checkboxPosition === 'right'\"\n                            :class=\"[...thBaseClasses, ...thCheckboxClasses]\">\n                            <template v-if=\"headerCheckable\">\n                                <!--\n                                    @slot Override check all checkbox\n                                    @binding {boolean} is-all-checked - if all rows are checked\n                                    @binding {boolean} is-all-uncheckable - if check all is uncheckable\n                                    @binding {(): void} check-all - check all function\n                                -->\n                                <slot\n                                    name=\"check-all\"\n                                    :is-all-checked=\"isAllChecked\"\n                                    :is-all-uncheckable=\"isAllUncheckable\"\n                                    :check-all=\"checkAll\">\n                                    <o-checkbox\n                                        :model-value=\"isAllChecked\"\n                                        autocomplete=\"off\"\n                                        :variant=\"checkboxVariant\"\n                                        :disabled=\"isAllUncheckable\"\n                                        @update:model-value=\"checkAll\" />\n                                </slot>\n                            </template>\n                        </th>\n                    </tr>\n                    <tr v-if=\"hasSearchablenewColumns\">\n                        <th\n                            v-if=\"showDetailRowIcon\"\n                            :class=\"[...thBaseClasses, ...thDetailedClasses]\" />\n                        <th v-if=\"checkable && checkboxPosition === 'left'\" />\n                        <th\n                            v-for=\"(column, index) in visibleColumns\"\n                            :key=\"\n                                column.identifier + ':' + index + 'searchable'\n                            \"\n                            v-bind=\"column.thAttrsData\"\n                            :class=\"thClasses(column)\"\n                            :style=\"isMobileActive ? {} : column.style\">\n                            <template v-if=\"column.searchable\">\n                                <template v-if=\"column.$slots?.searchable\">\n                                    <o-slot-component\n                                        :component=\"column.$el\"\n                                        name=\"searchable\"\n                                        tag=\"span\"\n                                        :props=\"{ column, index, filters }\" />\n                                </template>\n                                <o-input\n                                    v-else\n                                    v-model=\"filters[column.field]\"\n                                    :type=\"column.numeric ? 'number' : 'text'\"\n                                    @[filtersEvent]=\"onFiltersEvent\" />\n                            </template>\n                        </th>\n                        <th v-if=\"checkable && checkboxPosition === 'right'\" />\n                    </tr>\n                    <tr v-if=\"hasCustomSubheadings\">\n                        <th\n                            v-if=\"showDetailRowIcon\"\n                            :class=\"[...thBaseClasses, ...thDetailedClasses]\" />\n                        <th v-if=\"checkable && checkboxPosition === 'left'\" />\n                        <th\n                            v-for=\"(column, index) in visibleColumns\"\n                            :key=\"\n                                column.identifier + ':' + index + 'subheading'\n                            \"\n                            :style=\"isMobileActive ? {} : column.style\"\n                            :class=\"[...thBaseClasses, ...thSubheadingClasses]\">\n                            <template v-if=\"column.$slots?.subheading\">\n                                <o-slot-component\n                                    :component=\"column.$el\"\n                                    name=\"subheading\"\n                                    tag=\"span\"\n                                    :props=\"{ column, index }\" />\n                            </template>\n                            <template v-else>\n                                {{ column.subheading }}\n                            </template>\n                        </th>\n                        <th v-if=\"checkable && checkboxPosition === 'right'\" />\n                    </tr>\n                </thead>\n                <tbody>\n                    <template\n                        v-for=\"(row, index) in visibleRows\"\n                        :key=\"getRowKey(row) + 'row'\">\n                        <tr\n                            :class=\"rowClasses(row, index)\"\n                            :draggable=\"canDragRow\"\n                            @click=\"selectRow(row, index, $event)\"\n                            @dblclick=\"$emit('dblclick', row, index, $event)\"\n                            @mouseenter=\"\n                                $emit('mouseenter', row, index, $event)\n                            \"\n                            @mouseleave=\"\n                                $emit('mouseleave', row, index, $event)\n                            \"\n                            @contextmenu=\"\n                                $emit('contextmenu', row, index, $event)\n                            \"\n                            @dragstart=\"handleDragStart(row, index, $event)\"\n                            @dragend=\"handleDragEnd(row, index, $event)\"\n                            @drop=\"handleDrop(row, index, $event)\"\n                            @dragover=\"handleDragOver(row, index, $event)\"\n                            @dragleave=\"handleDragLeave(row, index, $event)\">\n                            <!-- detailed toggle column -->\n                            <td\n                                v-if=\"showDetailRowIcon\"\n                                :class=\"[\n                                    ...tdBaseClasses,\n                                    ...tdDetailedChevronClasses,\n                                ]\">\n                                <o-icon\n                                    v-if=\"hasDetailedVisible(row)\"\n                                    :icon=\"detailIcon\"\n                                    :pack=\"iconPack\"\n                                    :rotation=\"isVisibleDetailRow(row) ? 90 : 0\"\n                                    role=\"button\"\n                                    clickable\n                                    both\n                                    @click.stop=\"toggleDetails(row)\" />\n                            </td>\n\n                            <!-- checkable column left -->\n                            <td\n                                v-if=\"checkable && checkboxPosition === 'left'\"\n                                :class=\"[\n                                    ...thBaseClasses,\n                                    ...tdCheckboxClasses,\n                                ]\">\n                                <o-checkbox\n                                    :model-value=\"isRowChecked(row)\"\n                                    autocomplete=\"off\"\n                                    :variant=\"checkboxVariant\"\n                                    :disabled=\"!isRowCheckable(row)\"\n                                    @update:model-value=\"\n                                        checkRow(row, index)\n                                    \" />\n                            </td>\n\n                            <!-- row data columns -->\n                            <o-slot-component\n                                v-for=\"(column, colindex) in visibleColumns\"\n                                :key=\"\n                                    column.identifier + index + ':' + colindex\n                                \"\n                                v-bind=\"column.tdAttrsData[index]\"\n                                :component=\"column.$el\"\n                                name=\"default\"\n                                tag=\"td\"\n                                :class=\"tdClasses(row, column)\"\n                                :style=\"isMobileActive ? {} : column.style\"\n                                :data-label=\"column.label\"\n                                :props=\"{\n                                    row,\n                                    column,\n                                    index,\n                                    colindex,\n                                    toggleDetails,\n                                }\"\n                                @click=\"\n                                    $emit(\n                                        'cell-click',\n                                        row,\n                                        column,\n                                        index,\n                                        colindex,\n                                        $event,\n                                    )\n                                \" />\n\n                            <!-- checkable column right -->\n                            <td\n                                v-if=\"checkable && checkboxPosition === 'right'\"\n                                :class=\"[\n                                    ...thBaseClasses,\n                                    ...tdCheckboxClasses,\n                                ]\">\n                                <o-checkbox\n                                    :model-value=\"isRowChecked(row)\"\n                                    autocomplete=\"off\"\n                                    :variant=\"checkboxVariant\"\n                                    :disabled=\"!isRowCheckable(row)\"\n                                    @update:model-value=\"\n                                        checkRow(row, index)\n                                    \" />\n                            </td>\n                        </tr>\n\n                        <transition :name=\"detailTransition\">\n                            <tr\n                                v-if=\"isActiveDetailRow(row)\"\n                                :key=\"getRowKey(row) + 'detail'\"\n                                :class=\"detailedClasses\">\n                                <td :colspan=\"columnCount\">\n                                    <!--\n                                        @slot Place row detail content here\n                                        @binding {unknown} row - row conent\n                                        @binding {number} index - row index\n                                    -->\n                                    <slot\n                                        name=\"detail\"\n                                        :row=\"row\"\n                                        :index=\"index\" />\n                                </td>\n                            </tr>\n                        </transition>\n                        <!--\n                            @slot Place row detail content here\n                            @binding {unknown} row - row conent\n                            @binding {number} index - row index\n                        -->\n                        <slot\n                            v-if=\"isActiveCustomDetailRow(row)\"\n                            name=\"detail\"\n                            :row=\"row\"\n                            :index=\"index\" />\n                    </template>\n\n                    <tr v-if=\"!visibleRows.length\">\n                        <td :colspan=\"columnCount\">\n                            <!--\n                                @slot Define content if table is empty\n                            -->\n                            <slot name=\"empty\" />\n                        </td>\n                    </tr>\n                </tbody>\n\n                <tfoot v-if=\"$slots.footer\">\n                    <tr :class=\"footerClasses\">\n                        <!--\n                            @slot Define a custom footer\n                            @binding {number} column-count - counts of visible columns\n                            @binding {number} row-count - counts of visible rows\n                        -->\n                        <slot\n                            v-if=\"hasCustomFooterSlot()\"\n                            name=\"footer\"\n                            :column-count=\"columnCount\"\n                            :row-count=\"visibleRows?.length\" />\n                        <th v-else :colspan=\"columnCount\">\n                            <!--\n                                @slot Define a custom footer\n                                @binding {number} column-count - counts of visible columns\n                                @binding {number} row-count - counts of visible rows\n                            -->\n                            <slot\n                                name=\"footer\"\n                                :column-count=\"columnCount\"\n                                :row-count=\"visibleRows?.length\" />\n                        </th>\n                    </tr>\n                </tfoot>\n            </table>\n            <!--\n                @slot Override loading component\n                @binding {boolean} loading - is loading enabled\n            -->\n            <slot name=\"loading\" :loading=\"loading\">\n                <o-loading :full-page=\"false\" :active=\"loading\" />\n            </slot>\n        </div>\n\n        <template\n            v-if=\"\n                (checkable && $slots['bottom-left']) ||\n                (paginated &&\n                    (paginationPosition === 'bottom' ||\n                        paginationPosition === 'both'))\n            \">\n            <!--\n                @slot Override pagination label\n                @binding {number} current - current page\n                @binding {number} per-page - rows per page\n                @binding {number} total - total rows count\n                @binding {(page: number): void } change - on page change event\n            -->\n            <slot\n                name=\"pagination\"\n                :current=\"tableCurrentPage\"\n                :per-page=\"perPage\"\n                :total=\"dataTotal\"\n                :change=\"(page) => (tableCurrentPage = page)\">\n                <o-table-pagination\n                    v-bind=\"$attrs\"\n                    v-model:current=\"tableCurrentPage\"\n                    :paginated=\"paginated\"\n                    :per-page=\"perPage\"\n                    :total=\"dataTotal\"\n                    :rounded=\"paginationRounded\"\n                    :size=\"paginationSize\"\n                    :order=\"paginationOrder\"\n                    :simple=\"paginationSimple\"\n                    :icon-pack=\"iconPack\"\n                    :aria-next-label=\"ariaNextLabel\"\n                    :aria-previous-label=\"ariaPreviousLabel\"\n                    :aria-page-label=\"ariaPageLabel\"\n                    :aria-current-label=\"ariaCurrentLabel\"\n                    :root-class=\"paginationWrapperRootClasses\"\n                    @change=\"(page) => $emit('page-change', page)\">\n                    <!--\n                        @slot Additional slot if table is paginated\n                    -->\n                    <slot name=\"bottom-left\" />\n                </o-table-pagination>\n            </slot>\n        </template>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Table from \"./Table.vue\";\nimport TableColumn from \"./TableColumn.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export table specific types */\nexport type { Column } from \"./types\";\n\n/** export table plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Table);\n        registerComponent(app, TableColumn);\n    },\n} as Plugin;\n\n/** export table components */\nexport { Table as OTable, TableColumn as OTableColumn };\n","<script setup lang=\"ts\">\nimport { computed, ref, watch, toValue, nextTick, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\nimport OSlotComponent from \"../utils/SlotComponent\";\n\nimport { getOption } from \"@/utils/config\";\nimport { mod, isDefined } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    getActiveClasses,\n    useProviderParent,\n} from \"@/composables\";\n\nimport type { TabsComponent, TabItem, TabItemComponent } from \"./types\";\nimport type { ComponentClass, ClassBind } from \"@/types\";\n\n/**\n * Responsive horizontal navigation tabs, switch between contents with ease\n * @displayName Tabs\n * @requires ./TabItem.vue\n * @style _tabs.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTabs\",\n    configField: \"tabs\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: [String, Number], default: 0 },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"tabs.variant\"),\n    },\n    /**\n     * Tab size\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"tabs.size\"),\n    },\n    /** Show tab in vertical layout */\n    vertical: {\n        type: Boolean,\n        default: () => getOption(\"tabs.vertical\", false),\n    },\n    /**\n     * Position of the tabs\n     * @values left, centered, right\n     */\n    position: {\n        type: String,\n        default: undefined,\n        validator: (value: string) =>\n            [\"left\", \"centered\", \"right\"].indexOf(value) >= 0,\n    },\n    /**\n     * Tab type\n     * @values boxed, toggle\n     */\n    type: { type: String, default: () => getOption(\"tabs.type\", \"default\") },\n    /** Tabs will be expanded (full-width) */\n    expanded: { type: Boolean, default: false },\n    /** Tab will have an animation */\n    animated: {\n        type: Boolean,\n        default: () => getOption(\"tabs.animated\", true),\n    },\n    /**\n     * Transition animation name\n     * @values [next, prev], [right, left, down, up]\n     */\n    animation: {\n        type: Array as PropType<Array<string>>,\n        default: () =>\n            getOption(\"tabs.animation\", [\n                \"slide-next\",\n                \"slide-prev\",\n                \"slide-down\",\n                \"slide-up\",\n            ]),\n        validator: (value: Array<string>) =>\n            value.length === 2 || value.length === 4,\n    },\n    /** Apply animation on the initial render */\n    animateInitially: {\n        type: Boolean,\n        default: () => getOption(\"tabs.animateInitially\", false),\n    },\n    /** Show tab items multiline when there is no space */\n    multiline: { type: Boolean, default: false },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Tabs component when when is vertical and its position changes */\n    positionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Tabs component when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Tabs component when vertical */\n    verticalClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of Tabs component when multiline */\n    multilineClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Tabs component nav tabs */\n    navTabsClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Size of the navigation */\n    navSizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Tabs component nav position */\n    navPositionClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Type of the navigation */\n    navTypeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab content */\n    contentClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab content when transitioning */\n    transitioningClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item wrapper */\n    itemWrapperClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {string | number} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: string | number): void;\n    /**\n     * on tab change event\n     * @param value {string | number} new tab value\n     * @param value {string | number} old tab value\n     */\n    (e: \"change\", newValue: string | number, oldValue: string | number): void;\n}>();\n\nconst rootRef = ref();\n\n// Provided data is a computed ref to enjure reactivity.\nconst provideData = computed<TabsComponent>(() => ({\n    activeValue: vmodel.value,\n    type: props.type,\n    vertical: props.vertical,\n    animated: props.animated,\n    animation: props.animation,\n    animateInitially: props.animateInitially,\n}));\n\n/** Provide functionalities and data to child item components */\nconst { sortedItems } = useProviderParent<TabItemComponent>(rootRef, {\n    data: provideData,\n});\n\nconst items = computed<TabItem[]>(() =>\n    sortedItems.value.map((column) => ({\n        index: column.index,\n        identifier: column.identifier,\n        ...toValue(column.data),\n    })),\n);\n\nconst vmodel = defineModel<string | number>();\n\n/**  When v-model is changed set the new active tab. */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        if (vmodel.value !== value) performAction(value);\n    },\n);\n\nconst activeItem = computed(() =>\n    isDefined(vmodel.value)\n        ? items.value.find((item) => item.value === vmodel.value) ||\n          items.value[0]\n        : items.value[0],\n);\n\nconst activeIndex = computed(() => activeItem.value.index);\n\nfunction isActive(item: TabItem): boolean {\n    return item.value === activeItem.value.value;\n}\n\nconst isTransitioning = computed(() =>\n    items.value.some((item) => item.isTransitioning),\n);\n\n/** Item click listener, emit input event and change active child. */\nfunction itemClick(item: TabItem): void {\n    if (vmodel.value !== item.value) performAction(item.value);\n}\n\n/** Go to the next item or wrap around */\nfunction next(): void {\n    const newIndex = mod(activeIndex.value + 1, items.value.length);\n    clickFirstViableChild(newIndex, true);\n}\n\n/** Go to the previous item or wrap around */\nfunction prev(): void {\n    const newIndex = mod(activeIndex.value - 1, items.value.length);\n    clickFirstViableChild(newIndex, false);\n}\n\n/** Go to the first viable item */\nfunction homePressed(): void {\n    if (items.value.length < 1) return;\n    clickFirstViableChild(0, true);\n}\n\n/** Go to the last viable item */\nfunction endPressed(): void {\n    if (items.value.length < 1) return;\n    clickFirstViableChild(items.value.length - 1, false);\n}\n\n/**\n * Select the first 'viable' child, starting at startingIndex and in the direction specified\n * by the boolean parameter forward. In other words, first try to select the child at index\n * startingIndex, and if it is not visible or it is disabled, then go to the index in the\n * specified direction until either returning to startIndex or finding a viable child item.\n */\nfunction clickFirstViableChild(startingIndex: number, forward: boolean): void {\n    const direction = forward ? 1 : -1;\n    let newIndex = startingIndex;\n    for (\n        ;\n        newIndex !== activeIndex.value;\n        newIndex = mod(newIndex + direction, items.value.length)\n    ) {\n        // Break if the item at this index is viable (not disabled and is visible)\n        if (items.value[newIndex].visible && !items.value[newIndex].disabled)\n            break;\n    }\n    itemClick(items.value[newIndex]);\n}\n\n/** Activate next child and deactivate prev child */\nfunction performAction(newId: number | string): void {\n    const oldId = vmodel.value;\n    const oldItem = activeItem.value;\n    const newItem =\n        items.value.find((item) => item.value === newId) || items.value[0];\n\n    if (oldItem && newItem) {\n        oldItem.deactivate(newItem.index);\n        newItem.activate(oldItem.index);\n    }\n\n    nextTick(() => {\n        vmodel.value = newId;\n        emits(\"change\", newId, oldId);\n    });\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-tabs\"],\n    [\n        \"positionClass\",\n        \"o-tabs--\",\n        computed(() => props.position),\n        computed(() => props.position && props.vertical),\n    ],\n    [\n        \"expandedClass\",\n        \"o-tabs--fullwidth\",\n        null,\n        computed(() => props.expanded),\n    ],\n    [\"verticalClass\", \"o-tabs--vertical\", null, computed(() => props.vertical)],\n    [\n        \"multilineClass\",\n        \"o-tabs--multiline\",\n        null,\n        computed(() => props.multiline),\n    ],\n);\n\nconst itemWrapperClasses = defineClasses([\n    \"itemWrapperClass\",\n    \"o-tabs__nav-item-wrapper\",\n]);\n\nconst navClasses = defineClasses(\n    [\"navTabsClass\", \"o-tabs__nav\"],\n    [\n        \"navSizeClass\",\n        \"o-tabs__nav--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n    [\n        \"navPositionClass\",\n        \"o-tabs__nav--\",\n        computed(() => props.position),\n        computed(() => props.position && !props.vertical),\n    ],\n    [\n        \"navTypeClass\",\n        \"o-tabs__nav--\",\n        computed(() => props.type),\n        computed(() => !!props.type),\n    ],\n);\n\nconst contentClasses = defineClasses(\n    [\"contentClass\", \"o-tabs__content\"],\n    [\n        \"transitioningClass\",\n        \"o-tabs__content--transitioning\",\n        null,\n        isTransitioning,\n    ],\n);\n\nfunction itemHeaderClasses(\n    childItem: (typeof items.value)[number],\n): ClassBind[] {\n    const classes = defineClasses(\n        [\"itemHeaderClass\", \"o-tabs__nav-item\"],\n        [\"itemHeaderTypeClass\", \"o-tabs__nav-item-\", props.type, !!props.type],\n        [\n            \"itemHeaderActiveClass\",\n            \"o-tabs__nav-item-{*}--active\",\n            props.type,\n            isActive(childItem),\n        ],\n        [\n            \"itemHeaderDisabledClass\",\n            \"o-tabs__nav-item-{*}--disabled\",\n            props.type,\n            childItem.disabled,\n        ],\n    );\n    const headerClass = { [childItem.headerClass || \"\"]: true };\n\n    return [headerClass, ...classes.value];\n}\n</script>\n\n<template>\n    <div ref=\"rootRef\" :class=\"rootClasses\" data-oruga=\"tabs\">\n        <nav\n            :class=\"navClasses\"\n            role=\"tablist\"\n            :aria-orientation=\"vertical ? 'vertical' : 'horizontal'\">\n            <!--\n                @slot Additional slot before tabs\n            -->\n            <slot name=\"start\" />\n            <div\n                v-for=\"childItem in items\"\n                v-show=\"childItem.visible\"\n                :key=\"childItem.value\"\n                :class=\"itemWrapperClasses\"\n                role=\"tab\"\n                :aria-controls=\"`${childItem.value}-content`\"\n                :aria-selected=\"isActive(childItem) ? 'true' : 'false'\">\n                <o-slot-component\n                    v-if=\"childItem.$slots.header\"\n                    :component=\"childItem\"\n                    :tag=\"childItem.tag\"\n                    name=\"header\"\n                    :class=\"itemHeaderClasses(childItem)\"\n                    @click=\"itemClick(childItem)\"\n                    @keydown.enter=\"itemClick(childItem)\"\n                    @keydown.left.prevent=\"prev\"\n                    @keydown.right.prevent=\"next\"\n                    @keydown.up.prevent=\"prev\"\n                    @keydown.down.prevent=\"next\"\n                    @keydown.home.prevent=\"homePressed\"\n                    @keydown.end.prevent=\"endPressed\" />\n\n                <component\n                    :is=\"childItem.tag\"\n                    v-else\n                    role=\"button\"\n                    :tabindex=\"0\"\n                    :class=\"itemHeaderClasses(childItem)\"\n                    @click=\"itemClick(childItem)\"\n                    @keydown.enter=\"itemClick(childItem)\"\n                    @keydown.left.prevent=\"prev\"\n                    @keydown.right.prevent=\"next\"\n                    @keydown.up.prevent=\"prev\"\n                    @keydown.down.prevent=\"next\"\n                    @keydown.home.prevent=\"homePressed\"\n                    @keydown.end.prevent=\"endPressed\">\n                    <o-icon\n                        v-if=\"childItem.icon\"\n                        :root-class=\"\n                            getActiveClasses(childItem.headerIconClasses)\n                        \"\n                        :icon=\"childItem.icon\"\n                        :pack=\"childItem.iconPack\"\n                        :size=\"size\" />\n                    <span :class=\"childItem.headerTextClasses\">\n                        {{ childItem.label }}\n                    </span>\n                </component>\n            </div>\n            <!--\n                @slot Additional slot after tabs\n            -->\n            <slot name=\"end\" />\n        </nav>\n\n        <section :class=\"contentClasses\">\n            <!--\n                @slot Place tab items here\n            -->\n            <slot />\n        </section>\n    </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, toRaw, ref, useSlots, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { isEqual, uuid } from \"@/utils/helpers\";\nimport { defineClasses, useProviderChild } from \"@/composables\";\n\nimport type { TabsComponent, TabItemComponent } from \"./types\";\nimport type { ComponentClass, DynamicComponent } from \"@/types\";\n\n/**\n * @displayName Tab Item\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTabItem\",\n    configField: \"tabs\",\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** Item value (it will be used as v-model of wrapper component) */\n    value: { type: [String, Number], default: () => uuid() },\n    /** Item label */\n    label: { type: String, default: undefined },\n    /** Item will be disabled */\n    disabled: { type: Boolean, default: false },\n    /** Icon on the left */\n    icon: {\n        type: String,\n        default: () => getOption(\"tabs.icon\"),\n    },\n    /** Icon pack */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"tabs.iconPack\"),\n    },\n    /** Show/hide item */\n    visible: { type: Boolean, default: true },\n    /** Tabs item tag name */\n    tag: {\n        type: [String, Object, Function] as PropType<DynamicComponent>,\n        default: () => getOption<DynamicComponent>(\"tabs.itemTag\", \"button\"),\n    },\n    /** Role attribute to be passed to the div wrapper for better accessibility. */\n    ariaRole: {\n        type: String,\n        default: () => getOption(\"tabs.ariaRole\", \"tab\"),\n    },\n    /** Sets a class to the item header */\n    headerClass: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the tab item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header */\n    itemHeaderClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header when active */\n    itemHeaderActiveClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header when disabled */\n    itemHeaderDisabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header type */\n    itemHeaderTypeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header icon */\n    itemHeaderIconClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the tab item header text */\n    itemHeaderTextClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /** on tab item activate event */\n    (e: \"activate\"): void;\n    /** on tab item deactivate event */\n    (e: \"deactivate\"): void;\n}>();\n\nconst slots = useSlots();\n\nconst providedData = computed<TabItemComponent>(() => ({\n    ...toRaw(props),\n    $slots: slots,\n    headerIconClasses: headerIconClasses.value,\n    headerTextClasses: headerTextClasses.value,\n    isTransitioning: isTransitioning.value,\n    activate,\n    deactivate,\n}));\n\n// Inject functionalities and data from the parent component\nconst { parent, item } = useProviderChild<TabsComponent>({\n    data: providedData,\n});\n\nconst transitionName = ref();\n\nconst isActive = computed(() => isEqual(props.value, parent.value.activeValue));\n\nconst isTransitioning = ref(false);\n\nconst nextAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 2 : 0;\n    return parent.value.animation[idx];\n});\n\nconst prevAnimation = computed(() => {\n    const idx =\n        parent.value.vertical && parent.value.animation.length === 4 ? 3 : 1;\n    return parent.value.animation[idx];\n});\n\n/** Activate element, alter animation name based on the index. */\nfunction activate(oldIndex: number): void {\n    transitionName.value =\n        item.value.index < oldIndex ? nextAnimation.value : prevAnimation.value;\n\n    // emit event\n    emits(\"activate\");\n}\n\n/** Deactivate element, alter animation name based on the index. */\nfunction deactivate(newIndex: number): void {\n    transitionName.value =\n        newIndex < item.value.index ? nextAnimation.value : prevAnimation.value;\n\n    // emit event\n    emits(\"deactivate\");\n}\n\n/** Transition after-enter hook */\nfunction afterEnter(): void {\n    isTransitioning.value = true;\n}\n\n/** Transition before-leave hook */\nfunction beforeLeave(): void {\n    isTransitioning.value = true;\n}\n\n// --- Computed Component Classes ---\n\nconst elementClasses = defineClasses([\"itemClass\", \"o-tab-item__content\"]);\n\nconst headerIconClasses = defineClasses([\n    \"itemHeaderIconClass\",\n    \"o-tabs__nav-item-icon\",\n]);\n\nconst headerTextClasses = defineClasses([\n    \"itemHeaderTextClass\",\n    \"o-tabs__nav-item-text\",\n]);\n</script>\n\n<template>\n    <Transition\n        :disabled=\"!parent.animated\"\n        :name=\"transitionName\"\n        :appear=\"parent.animateInitially\"\n        @after-enter=\"afterEnter\"\n        @before-leave=\"beforeLeave\">\n        <div\n            v-show=\"isActive && visible\"\n            ref=\"rootRef\"\n            :class=\"elementClasses\"\n            :data-id=\"`tabs-${item.identifier}`\"\n            data-oruga=\"tabs-item\"\n            :tabindex=\"isActive ? 0 : -1\"\n            :role=\"ariaRole\"\n            aria-roledescription=\"item\">\n            <!-- \n                @slot Tab item content\n            -->\n            <slot />\n        </div>\n    </Transition>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Tabs from \"./Tabs.vue\";\nimport TabItem from \"./TabItem.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export tabs specific types */\nexport type * from \"./types\";\n\n/** export tabs plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Tabs);\n        registerComponent(app, TabItem);\n    },\n} as Plugin;\n\n/** export tabs components */\nexport { Tabs as OTabs, TabItem as OTabItem };\n","<script setup lang=\"ts\">\nimport { computed, nextTick, ref, useAttrs, watch, type PropType } from \"vue\";\n\nimport OIcon from \"../icon/Icon.vue\";\nimport OAutocomplete from \"../autocomplete/Autocomplete.vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { getValueByPath } from \"@/utils/helpers\";\nimport {\n    defineClasses,\n    getActiveClasses,\n    useVModelBinding,\n    useInputHandler,\n} from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * A simple tag input field that can have autocomplete functionality\n * @displayName Taginput\n * @style _taginput.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OTaginput\",\n    configField: \"taginput\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: { type: Array, default: () => [] },\n    /** Items data */\n    data: { type: Array, default: () => [] },\n    /** Property of the object (if data is array of objects) to use as display text */\n    field: { type: String, default: \"value\" },\n    /** Property of the object (if `data` is array of objects) to use as display text of group */\n    groupField: { type: String, default: undefined },\n    /** Property of the object (if `data` is array of objects) to use as key to get items array of each group */\n    groupOptions: { type: String, default: undefined },\n    /**\n     * Vertical size of the input control\n     * @values small, medium, large\n     */\n    size: {\n        type: String,\n        default: () => getOption(\"taginput.size\"),\n    },\n    /**\n     * Color of the each item\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"taginput.variant\"),\n    },\n    /** Limits the number of items, plus item counter */\n    maxitems: { type: Number, default: undefined },\n    /** Same as native maxlength, plus character counter */\n    maxlength: { type: Number, default: undefined },\n    /** Show counter when maxlength or maxtags props are passed */\n    counter: {\n        type: Boolean,\n        default: () => getOption(\"taginput.counter\", true),\n    },\n    /** Opens a dropdown with choices when the input field is focused */\n    openOnFocus: { type: Boolean, default: false },\n    /** Keep open dropdown list after select */\n    keepOpen: {\n        type: Boolean,\n        default: () => getOption(\"autocomplete.keepOpen\", false),\n    },\n    /** Input placeholder */\n    placeholder: { type: String, default: undefined },\n    /** Makes input full width when inside a grouped or addon field */\n    expanded: { type: Boolean, default: false },\n    /** Same as native input disabled */\n    disabled: { type: Boolean, default: false },\n    /**\n     * Array of keys\n     * (https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)\n     * which will add a item when typing\n     */\n    confirmKeys: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"taginput.confirmKeys\", [\",\", \"Tab\", \"Enter\"]),\n    },\n    /** Array of chars used to split when pasting a new string */\n    separators: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"taginput.separators\", [\",\"]),\n    },\n    /** The first option will always be pre-selected (easier to just hit enter or tab) */\n    keepFirst: { type: Boolean, default: false },\n    /** When autocomplete, it allow to add new items */\n    allowNew: { type: Boolean, default: false },\n    /** Allows adding the same item multiple time */\n    allowDuplicates: { type: Boolean, default: false },\n    /** Add autocomplete feature (if true, any Autocomplete props may be used too) */\n    allowAutocomplete: { type: Boolean, default: false },\n    /** Allow removing last item when pressing given keys, if input is empty */\n    removeOnKeys: {\n        type: Array as PropType<string[]>,\n        default: () => getOption(\"taginput.removeOnKeys\", [\"Backspace\"]),\n    },\n    /** Function to validate the value of the item before adding */\n    beforeAdding: {\n        type: Function as PropType<(value: string) => boolean>,\n        default: () => true,\n    },\n    /** Function to create a new item to push into v-model (items) */\n    createItem: {\n        type: Function as PropType<(value: any) => any>,\n        default: (item: any) => item,\n    },\n    /** Makes the component check if list reached scroll start or end and emit scroll events. */\n    checkScroll: {\n        type: Boolean,\n        default: () => getOption(\"taginput.checkScroll\", false),\n    },\n    /** Add close/delete button to the item */\n    closable: {\n        type: Boolean,\n        default: () => getOption(\"taginput.closable\", true),\n    },\n    /**\n     * Icon pack to use\n     * @values mdi, fa, fas and any other custom icon pack\n     */\n    iconPack: {\n        type: String,\n        default: () => getOption(\"taginput.iconPack\"),\n    },\n    /** Icon to be shown */\n    icon: {\n        type: String,\n        default: () => getOption(\"taginput.icon\"),\n    },\n    /** Icon name of close icon on selected item */\n    closeIcon: {\n        type: String,\n        default: () => getOption(\"taginput.closeIcon\", \"close\"),\n    },\n    /** Accessibility label for the close button */\n    ariaCloseLabel: {\n        type: String,\n        default: () => getOption(\"taginput.ariaCloseLabel\"),\n    },\n    /** Native options to use in HTML5 validation */\n    autocomplete: {\n        type: String,\n        default: () => getOption(\"taginput.autocomplete\", \"off\"),\n    },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    /**\n     * Append the component to another part of the DOM.\n     * Set `true` to append the component to the body.\n     * In addition, any CSS selector string or an actual DOM node can be used.\n     */\n    teleport: {\n        type: [Boolean, String, Object],\n        default: () => getOption(\"taginput.teleport\", false),\n    },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of input when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the input container */\n    containerClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the input container size */\n    sizeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the entered item variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the close button of entered item */\n    closeClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the entered item */\n    itemClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the counter element */\n    counterClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /**\n     * Class configuration for the underlying autocomplete component\n     * @ignore\n     */\n    autocompleteClasses: {\n        type: Object,\n        default: () => getOption(\"taginput.autocompleteClasses\", {}),\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {any[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: any[]): void;\n    /**\n     * on input change event\n     * @param value {any} input value\n     */\n    (e: \"input\", value: any): void;\n    /**\n     * new item got added\n     * @param value {any} added item\n     */\n    (e: \"add\", value: any): void;\n    /**\n     * item got removed\n     * @param value {any} removed item\n     */\n    (e: \"remove\", value: any): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n    /**\n     * on icon click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-click\", event: Event): void;\n    /**\n     * on icon right click event\n     * @param event {Event} native event\n     */\n    (e: \"icon-right-click\", event: Event): void;\n    /** the list inside the dropdown reached the start */\n    (e: \"scroll-start\"): void;\n    /** the list inside the dropdown reached it's end */\n    (e: \"scroll-end\"): void;\n}>();\n\nconst autocompleteRef = ref<InstanceType<typeof OAutocomplete>>();\n\nconst items = useVModelBinding<any[]>(props, emits, {\n    passive: true,\n    deep: true,\n});\n\n// use form input functionalities\nconst { setFocus, onFocus, onBlur, onInvalid } = useInputHandler(\n    autocompleteRef,\n    emits,\n    props,\n);\n\nconst newItem = ref(\"\");\nconst isComposing = ref(false);\n\nconst valueLength = computed(() => newItem.value.trim().length);\nconst itemsLength = computed(() => items.value.length);\n\n/** When modelValue is changed set internal value. */\nwatch(\n    () => props.modelValue,\n    (value) => {\n        items.value = Array.isArray(value) ? value.slice(0) : value || [];\n    },\n);\n\n/** Show the input field if a maxitems hasn't been set or reached. */\nconst hasInput = computed(\n    () => props.maxitems == null || itemsLength.value < props.maxitems,\n);\n\nwatch(\n    () => hasInput.value,\n    () => {\n        // blur if input is empty\n        if (!hasInput.value) onBlur();\n    },\n);\n\n/**\n * If input has pasteSeparators prop,\n * returning new RegExp used to split pasted string.\n */\nconst separatorsAsRegExp = computed(() =>\n    props.separators.length\n        ? new RegExp(\n              props.separators\n                  .map((s) =>\n                      s ? s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\") : null,\n                  )\n                  .join(\"|\"),\n              \"g\",\n          )\n        : null,\n);\n\nfunction getNormalizedItemText(item: any): string {\n    if (typeof item === \"object\") item = getValueByPath(item, props.field);\n    return `${item}`;\n}\n\nfunction addItem(item?: string): void {\n    item = item || newItem.value.trim();\n\n    if (item) {\n        if (!props.allowAutocomplete) {\n            const reg = separatorsAsRegExp.value;\n            if (reg && item.match(reg)) {\n                item.split(reg)\n                    .map((t) => t.trim())\n                    .filter((t) => t.length !== 0)\n                    .map(addItem);\n                return;\n            }\n        }\n        // Add the item input if it is not blank\n        // or previously added (if not allowDuplicates).\n        const itemToAdd = props.createItem(item);\n        const add = !props.allowDuplicates\n            ? items.value.indexOf(itemToAdd) === -1\n            : true;\n        if (add && props.beforeAdding(item)) {\n            items.value.push(itemToAdd);\n            emits(\"add\", itemToAdd);\n        }\n    }\n\n    // after autocomplete events\n    requestAnimationFrame(() => {\n        newItem.value = \"\";\n        emits(\"input\", newItem.value);\n    });\n}\n\nfunction removeItem(index: number, event?: Event): void {\n    const item = items.value.splice(index, 1)[0];\n    emits(\"remove\", item);\n    if (event) event.stopPropagation();\n    if (props.openOnFocus && autocompleteRef.value) setFocus();\n}\n\n// --- Event Handler ---\n\nfunction onSelect(option?: string): void {\n    if (!option) return;\n    addItem(option);\n    nextTick(() => (newItem.value = \"\"));\n}\n\nfunction onKeydown(event: KeyboardEvent): void {\n    if (\n        props.removeOnKeys.indexOf(event.key) !== -1 &&\n        !newItem.value?.length &&\n        itemsLength.value > 0\n    ) {\n        // remove last item\n        removeItem(itemsLength.value - 1);\n    }\n    // Stop if is to accept select only\n    if (props.allowAutocomplete && !props.allowNew) return;\n\n    if (props.confirmKeys.indexOf(event.key) >= 0) {\n        // Allow Tab to advance to next field regardless\n        if (event.key !== \"Tab\") event.preventDefault();\n        if (event.key === \"Enter\" && isComposing.value) return;\n        addItem();\n    }\n}\n\nfunction onInput(value: string | number): void {\n    emits(\"input\", String(value).trim());\n}\n\nfunction handleOnBlur(event: Event): void {\n    // Add item on-blur if not select only\n    if (!props.allowAutocomplete) addItem();\n    onBlur(event);\n}\n\n// --- Computed Component Classes ---\n\nconst attrs = useAttrs();\n\nconst autocompleteRootClasses = defineClasses([\n    \"autocompleteClasses.rootClass\",\n    \"o-taginput__autocomplete\",\n]);\n\nconst autocompleteInputClasses = defineClasses([\n    \"autocompleteClasses.inputClasses.inputClass\",\n    \"o-taginput__input\",\n]);\n\nconst autocompleteBind = computed(() => ({\n    ...attrs,\n    \"root-class\": getActiveClasses(autocompleteRootClasses.value),\n    \"input-classes\": {\n        \"input-class\": getActiveClasses(autocompleteInputClasses.value),\n    },\n    ...props.autocompleteClasses,\n}));\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-taginput\"],\n    [\n        \"expandedClass\",\n        \"o-taginput--expanded\",\n        null,\n        computed(() => props.expanded),\n    ],\n);\n\nconst containerClasses = defineClasses(\n    [\"containerClass\", \"o-taginput__container\"],\n    [\n        \"sizeClass\",\n        \"o-taginput__container--\",\n        computed(() => props.size),\n        computed(() => !!props.size),\n    ],\n);\n\nconst itemClasses = defineClasses(\n    [\"itemClass\", \"o-taginput__item\"],\n    [\n        \"variantClass\",\n        \"o-taginput__item--\",\n        computed(() => props.variant),\n        computed(() => !!props.variant),\n    ],\n);\n\nconst closeClasses = defineClasses([\"closeClass\", \"o-taginput__item__close\"]);\n\nconst counterClasses = defineClasses([\"counterClass\", \"o-taginput__counter\"]);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <div data-oruga=\"taginput\" :class=\"rootClasses\">\n        <div :class=\"containerClasses\" @focus=\"onFocus\" @blur=\"onBlur\">\n            <!--\n                @slot Override selected items\n                @binding {unknown[]} items - selected items\n            -->\n            <slot name=\"selected\" :items=\"items\">\n                <span\n                    v-for=\"(item, index) in items\"\n                    :key=\"getNormalizedItemText(item) + index\"\n                    :class=\"itemClasses\">\n                    <span>{{ getNormalizedItemText(item) }}</span>\n                    <o-icon\n                        v-if=\"closable\"\n                        :class=\"closeClasses\"\n                        clickable\n                        :pack=\"iconPack\"\n                        :icon=\"closeIcon\"\n                        :aria-label=\"ariaCloseLabel\"\n                        both\n                        @click=\"removeItem(index, $event)\" />\n                </span>\n            </slot>\n\n            <o-autocomplete\n                v-show=\"hasInput\"\n                ref=\"autocompleteRef\"\n                v-model=\"newItem\"\n                v-bind=\"autocompleteBind\"\n                :data=\"data\"\n                :field=\"field\"\n                :icon=\"icon\"\n                :icon-pack=\"iconPack\"\n                :maxlength=\"maxlength\"\n                :size=\"size\"\n                :disabled=\"disabled\"\n                :autocomplete=\"autocomplete\"\n                :open-on-focus=\"openOnFocus\"\n                :keep-first=\"keepFirst\"\n                :keep-open=\"keepOpen\"\n                :group-field=\"groupField\"\n                :group-options=\"groupOptions\"\n                :has-counter=\"false\"\n                :use-html5-validation=\"useHtml5Validation\"\n                :check-scroll=\"checkScroll\"\n                :teleport=\"teleport\"\n                :confirm-keys=\"confirmKeys\"\n                :placeholder=\"placeholder\"\n                :validation-message=\"validationMessage\"\n                :expanded=\"expanded\"\n                @input=\"onInput\"\n                @focus=\"onFocus\"\n                @blur=\"handleOnBlur\"\n                @invalid=\"onInvalid\"\n                @keydown=\"onKeydown\"\n                @compositionstart=\"isComposing = true\"\n                @compositionend=\"isComposing = false\"\n                @select=\"onSelect($event as string)\"\n                @scroll-start=\"$emit('scroll-start')\"\n                @scroll-end=\"$emit('scroll-end')\"\n                @icon-click=\"$emit('icon-click', $event)\"\n                @icon-right-click=\"$emit('icon-right-click', $event)\">\n                <template v-if=\"$slots.header\" #header>\n                    <!--\n                        @slot Define an additional header\n                    -->\n                    <slot name=\"header\" />\n                </template>\n\n                <template v-if=\"$slots.default\" #default=\"props\">\n                    <!--\n                        @slot Override the select option\n                        @binding {object} option - option object\n                        @binding {number} index - option index\n                        @binding {unknown} value - option value\n                    -->\n                    <slot\n                        :option=\"props.option\"\n                        :index=\"props.index\"\n                        :value=\"props.value\" />\n                </template>\n\n                <template v-if=\"$slots.empty\" #empty>\n                    <!--\n                        @slot Define content for empty state \n                    -->\n                    <slot name=\"empty\" />\n                </template>\n\n                <template v-if=\"$slots.footer\" #footer>\n                    <!--\n                        @slot Define an additional footer\n                    -->\n                    <slot name=\"footer\" />\n                </template>\n            </o-autocomplete>\n        </div>\n\n        <small\n            v-if=\"counter && (maxitems || maxlength)\"\n            :class=\"counterClasses\">\n            <template v-if=\"maxlength && valueLength > 0\">\n                <!--\n                    @slot Override the counter\n                    @binding {number} items - items count\n                    @binding {number} total - total count\n                -->\n                <slot name=\"counter\" :items=\"valueLength\" :total=\"maxlength\">\n                    {{ valueLength }} / {{ maxlength }}\n                </slot>\n            </template>\n\n            <template v-else-if=\"maxitems\">\n                <!--\n                    @slot Override the counter\n                    @binding {number} items - items count\n                    @binding {number} total - total count\n                -->\n                <slot name=\"counter\" :items=\"itemsLength\" :total=\"maxitems\">\n                    {{ itemsLength }} / {{ maxitems }}\n                </slot>\n            </template>\n        </small>\n    </div>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Taginput from \"./Taginput.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export taginput plugin */\nexport default {\n    install(Vue: App) {\n        registerComponent(Vue, Taginput);\n    },\n} as Plugin;\n\n/** export taginput components */\nexport { Taginput as OTaginput };\n","import type { App, Plugin } from \"vue\";\n\nimport Timepicker from \"./Timepicker.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export timepicker plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Timepicker);\n    },\n} as Plugin;\n\n/** export timepicker components */\nexport { Timepicker as OTimepicker };\n","import type { App, Plugin } from \"vue\";\n\nimport Tooltip from \"./Tooltip.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export tooltip plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Tooltip);\n    },\n} as Plugin;\n\n/** export tooltip components */\nexport { Tooltip as OTooltip };\n","<script setup lang=\"ts\">\nimport { computed, ref, watch, type PropType } from \"vue\";\n\nimport { getOption } from \"@/utils/config\";\nimport { File } from \"@/utils/ssr\";\nimport { uuid } from \"@/utils/helpers\";\nimport { defineClasses, useInputHandler } from \"@/composables\";\n\nimport type { ComponentClass } from \"@/types\";\n\n/**\n * Upload one or more files\n * @displayName Upload\n * @style _upload.scss\n */\ndefineOptions({\n    isOruga: true,\n    name: \"OUpload\",\n    configField: \"upload\",\n    inheritAttrs: false,\n});\n\nconst props = defineProps({\n    /** Override existing theme classes completely */\n    override: { type: Boolean, default: undefined },\n    /** @model */\n    modelValue: {\n        type: [Object, Array] as PropType<\n            object | typeof File | object[] | (typeof File)[]\n        >,\n        default: undefined,\n    },\n    /** Same as native, also push new item to v-model instead of replacing */\n    multiple: { type: Boolean, default: false },\n    /**\n     * Color of the control\n     * @values primary, info, success, warning, danger, and any other custom color\n     */\n    variant: {\n        type: String,\n        default: () => getOption(\"upload.variant\"),\n    },\n    /** Same as native disabled */\n    disabled: { type: Boolean, default: false },\n    /** Same as native accept */\n    accept: { type: String, default: undefined },\n    /** Accepts drag & drop and change its style */\n    dragDrop: { type: Boolean, default: false },\n    /** Upload will be expanded (full-width) */\n    expanded: { type: Boolean, default: false },\n    /** Replace last chosen files every time (like native file input element) */\n    native: { type: Boolean, default: true },\n    /** Accessibility label to establish relationship between the input and control label */\n    ariaLabelledby: { type: String, default: () => uuid() },\n    /** Enable html 5 native validation */\n    useHtml5Validation: {\n        type: Boolean,\n        default: () => getOption(\"useHtml5Validation\", true),\n    },\n    /** The message which is shown when a validation error occurs */\n    validationMessage: { type: String, default: undefined },\n    // class props (will not be displayed in the docs)\n    /** Class of the root element */\n    rootClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload when draggable */\n    draggableClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload variant */\n    variantClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload when expanded */\n    expandedClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload when disabled */\n    disabledClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n    /** Class of the Upload when hovered */\n    hoveredClass: {\n        type: [String, Array, Function] as PropType<ComponentClass>,\n        default: undefined,\n    },\n});\n\nconst emits = defineEmits<{\n    /**\n     * modelValue prop two-way binding\n     * @param value {Object | Object[] | File | File[]} updated modelValue prop\n     */\n    (e: \"update:modelValue\", value: object | object[] | File | File[]): void;\n    /**\n     * on input focus event\n     * @param event {Event} native event\n     */\n    (e: \"focus\", event: Event): void;\n    /**\n     * on input blur event\n     * @param event {Event} native event\n     */\n    (e: \"blur\", event: Event): void;\n    /**\n     * on input invalid event\n     * @param event {Event} native event\n     */\n    (e: \"invalid\", event: Event): void;\n}>();\n\nconst inputRef = ref<HTMLInputElement>();\n\nconst vmodel = defineModel<object | object[] | File | File[]>();\n\n// use form input functionality\nconst { checkHtml5Validity, onFocus, onBlur, isValid, setFocus } =\n    useInputHandler(inputRef, emits, props);\n\nconst dragDropFocus = ref(false);\n\n/**\n * When v-model is changed:\n * 1. Reset interna input file value\n * 2. If it's invalid, validate again.\n */\nwatch(vmodel, (value) => {\n    if (!value || (Array.isArray(value) && value.length === 0))\n        inputRef.value.value = null;\n    if (!isValid.value && !props.dragDrop) checkHtml5Validity();\n});\n\n/**\n * Listen change event on input type 'file',\n * emit 'input' event and validate\n */\nfunction onFileChange(event: Event | DragEvent): void {\n    if (props.disabled) return;\n    if (props.dragDrop) updateDragDropFocus(false);\n    const value =\n        (event.target as HTMLInputElement).files ||\n        (event as DragEvent).dataTransfer.files;\n    // no file selected\n    if (value.length === 0) {\n        if (!vmodel.value) return;\n        if (props.native) vmodel.value = null;\n    }\n\n    // multiple upload\n    if (props.multiple) {\n        // always new values if native or undefined local\n        const values =\n            props.native || !vmodel.value || !Array.isArray(vmodel.value)\n                ? []\n                : [...vmodel.value];\n\n        for (let i = 0; i < value.length; i++) {\n            const file = value[i];\n            // add file when type is valid\n            if (checkType(file)) values.push(file);\n        }\n        vmodel.value = values;\n    }\n    // single uplaod\n    else {\n        // only one element in case drag drop mode and isn't multiple\n        if (props.dragDrop && value.length !== 1) return;\n        else {\n            const file = value[0];\n            // add file when type is valid\n            if (checkType(file)) vmodel.value = file;\n            // else clear input\n            else if (vmodel.value) {\n                vmodel.value = null;\n                clearInput();\n            } else {\n                // Force input back to empty state and recheck validity\n                clearInput();\n                checkHtml5Validity();\n                return;\n            }\n        }\n    }\n\n    if (!props.dragDrop) checkHtml5Validity();\n}\n\n/** Reset file input value */\nfunction clearInput(): void {\n    inputRef.value.value = null;\n}\n\n/** Listen drag-drop to update internal variable */\nfunction updateDragDropFocus(focus: boolean): void {\n    if (!props.disabled) dragDropFocus.value = focus;\n}\n\n/** Check mime type of file s*/\nfunction checkType(file: File): boolean {\n    if (!props.accept) return true;\n    const types = props.accept.split(\",\");\n    if (types.length === 0) return true;\n    for (let i = 0; i < types.length; i++) {\n        const type = types[i].trim();\n        if (type) {\n            if (type.substring(0, 1) === \".\") {\n                const extension = file.name.toLowerCase().slice(-type.length);\n                if (extension === type.toLowerCase()) return true;\n            } else {\n                // check mime type\n                if (file.type.match(type)) return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction onClick(event: Event): void {\n    if (props.disabled) return;\n\n    // click input if not drag and drop is used\n    if (!props.dragDrop) {\n        event.preventDefault();\n        inputRef.value.click();\n    }\n}\n\n// --- Computed Component Classes ---\n\nconst rootClasses = defineClasses(\n    [\"rootClass\", \"o-upl\"],\n    [\"expandedClass\", \"o-upl--expanded\", null, computed(() => props.expanded)],\n    [\"disabledClass\", \"o-upl--disabled\", null, computed(() => props.disabled)],\n);\n\nconst draggableClasses = defineClasses(\n    [\"draggableClass\", \"o-upl__draggable\"],\n    [\n        \"hoveredClass\",\n        \"o-upl__draggable--hovered\",\n        null,\n        computed(() => !props.variant && dragDropFocus.value),\n    ],\n    [\n        \"variantClass\",\n        \"o-upl__draggable--hovered-\",\n        computed(() => props.variant),\n        computed(() => props.variant && dragDropFocus.value),\n    ],\n);\n\n// --- Expose Public Functionalities ---\n\n/** expose functionalities for programmatic usage */\ndefineExpose({ focus: setFocus });\n</script>\n\n<template>\n    <label :id=\"ariaLabelledby\" :class=\"rootClasses\" data-oruga=\"upload\">\n        <template v-if=\"!dragDrop\">\n            <!--\n                @slot Default content\n                @binding {(event:Event): void} onclick - click handler, only needed if a button is used\n            -->\n            <slot :onclick=\"onClick\" />\n        </template>\n\n        <div\n            v-else\n            :class=\"draggableClasses\"\n            role=\"button\"\n            tabindex=\"0\"\n            @mouseenter=\"updateDragDropFocus(true)\"\n            @mouseleave=\"updateDragDropFocus(false)\"\n            @dragover.prevent=\"updateDragDropFocus(true)\"\n            @dragleave.prevent=\"updateDragDropFocus(false)\"\n            @dragenter.prevent=\"updateDragDropFocus(true)\"\n            @drop.prevent=\"onFileChange\">\n            <!--\n                @slot Default content\n            -->\n            <slot />\n        </div>\n\n        <input\n            v-bind=\"$attrs\"\n            ref=\"inputRef\"\n            type=\"file\"\n            data-oruga-input=\"file\"\n            :multiple=\"multiple\"\n            :accept=\"accept\"\n            :disabled=\"disabled\"\n            :aria-labelledby=\"ariaLabelledby\"\n            @change=\"onFileChange\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\" />\n    </label>\n</template>\n","import type { App, Plugin } from \"vue\";\n\nimport Upload from \"./Upload.vue\";\n\nimport { registerComponent } from \"@/utils/plugins\";\n\n/** export upload plugin */\nexport default {\n    install(app: App) {\n        registerComponent(app, Upload);\n    },\n} as Plugin;\n\n/** export upload components */\nexport { Upload as OUpload };\n","import type { App, Plugin } from \"vue\";\nimport type { OrugaOptions } from \"./types\";\n\nimport * as plugins from \"./components/plugins\";\n\nimport { ConfigProgrammatic, ConfigPlugin } from \"./utils/config\";\nimport { registerPlugin, registerComponentProgrammatic } from \"./utils/plugins\";\n\n// export all types\nexport * from \"./types\";\nexport * from \"./components/types\";\n\n// export all vue components\nexport * from \"./components\";\n// export all components as vue plugin\nexport * from \"./components/plugins\";\n\n// export programmatic components\nexport { LoadingProgrammatic } from \"./components/loading\";\nexport { ModalProgrammatic } from \"./components/modal\";\nexport { NotificationProgrammatic } from \"./components/notification\";\nexport { ConfigProgrammatic } from \"./utils/config\";\n// export programmatic plugins\nexport { ConfigPlugin } from \"./utils/config\";\n\n// export programmatic composable\nexport { useOruga } from \"./utils/programmatic\";\n\n// default export main oruga vue plugin\nconst plugin: Plugin = {\n    install(app: App, options: OrugaOptions = {}) {\n        // enable programmatic config registering\n        app.use(ConfigPlugin, options);\n\n        // add components\n        for (const componentKey in plugins) {\n            registerPlugin(app, plugins[componentKey]);\n        }\n\n        // add programmatic config component\n        registerComponentProgrammatic(app, \"config\", ConfigProgrammatic);\n    },\n};\n\nexport { plugin as Oruga };\nexport default plugin;\n\ndeclare module \"./index\" {\n    interface OrugaProgrammatic {\n        config: typeof ConfigProgrammatic;\n    }\n}\n"],"names":["uuid","signPoly","value","sign","mod","n","bound","val","min","max","isObject","obj","isDefined","d","blankIfUndefined","toCssDimension","width","indexOf","array","fn","index","arr","isEqual","valueA","valueB","keys1","keys2","key","val1","val2","areObjects","clone","merge","target","source","deep","mergeDeep","targetValue","sourceValue","getValueByPath","path","defaultValue","setValueByPath","p","field","removeElement","el","escapeRegExpChars","removeDiacriticsFromString","isMobileAgent","oruga","ref","addProgrammatic","property","component","useOruga","VueInstance","setVueInstance","Vue","registerPlugin","app","plugin","registerComponent","registerComponentProgrammatic","globalOptions","setOptions","options","getOptions","toRaw","getOption","ConfigProgrammatic","ConfigPlugin","mdiIcons","faIcons","faIconPrefix","getIcons$1","icons","customIconPacks","unrefElement","elRef","plain","toValue","getActiveClasses","classes","bind","defineClasses","classDefinitions","vm","getCurrentInstance","scope","effectScope","defintion","className","defaultClass","suffix","apply","getClassBind","computedClass","computeClass","applied","isRef","watch","oldValue","classBind","getCurrentScope","onScopeDispose","props","configField","_a","config","globalOverride","localOverride","overrideClass","globalTransformClasses","localTransformClasses","globalClass","currentClass","getProps","suffixProcessor","appliedClasses","input","cls","usePropBinding","name","emit","event","proxy","isUpdating","nextTick","computed","useVModelBinding","useEventListener","listener","cleanup","register","optionsClone","stop","onMounted","onBeforeUnmount","isClient","isSSR","useMatchMedia","mobileBreakpoint","isMobile","mediaQuery","defaultWidth","onMatchMedia","_sfc_main$K","defineComponent","parentField","injectField","slots","useSlots","first","slot","children","h","element","message","Comment","Text","resolveComponent","__props","fieldVariant","v","fieldMessage","isFocused","isFilled","hasLabel","hasMessage","hasInnerField","hasAddons","renderedNode","rootRef","setFocus","setFilled","setVariant","setMessage","provideData","provideField","rootClasses","messageClasses","labelClasses","labelHorizontalClasses","bodyClasses","bodyHorizontalClasses","innerFieldClasses","$field","data","provide","inject","statusVariant","statusMessage","statusVariantIcon","validatableFormElementTypes","asValidatableFormElement","t","useInputHandler","inputRef","emits","inputs","doClick","onBlur","checkHtml5Validity","onFocus","isValid","setFieldValidity","variant","setInvalid","onInvalid","validatable","isFirstInvalid","formElements","i","fieldElement","invalidHandler","canScrollToField","useDebounce","func","wait","immediate","timeout","args","later","callNow","useProviderParent","childItems","sequence","sortedItems","a","b","registerItem","identifier","nextSequence","item","ids","elements","sortedIds","unregisterItem","useProviderChild","parent","needParent","onUnmounted","useProgrammaticComponent","elementRef","isActive","cancelOptions","getElement","container","onKeyPress","cancel","method","close","useClickOutside","handler","ignore","shouldIgnore","getScrollingParent","isScrollingParent","nextParent","overflow","overflowY","scrollHeight","clientHeight","rootStyle","style","iconConfig","getIcons","iconPrefix","customSizeByPack","computedIcon","getEquivalentIconOf","computedSize","computedVariant","newVariant","_b","__emit","textareaRef","vmodel","valueLength","resize","height","computedStyles","onInput","hasIconRight","computedIconRight","passwordVisibleIcon","computedIconRightVariant","iconClick","rightIconClick","togglePasswordVisibility","isPasswordVisible","inputType","inputClasses","iconLeftClasses","iconRightClasses","counterClasses","__expose","opposites","to","disabled","initialPosition","scrollingParent","resizeObserver","updatePositioning","removeHandler","addHandler","position","getAutoPosition","content","trigger","rect","top","left","bestPosition","viewRect","contentRect","triggerRect","triggerAnchors","anchors","contentAnchors","contentRectAtAnchor","pos","triggerAnchor","contentAnchor","defaultOpposite","crossPosition","crossOpposite","positions","maxOverlap","overlap","intersectionArea","right","bottom","findFocusable","programmatic","onKeyDown","vTrapFocus","focusable","focusableProg","firstFocusable","lastFocusable","_useModel","autoPosition","isMobileModal","isMobileNative","menuStyle","hoverable","contentRef","triggerRef","eventCleanups","timer","onClickedOutside","onClick","toggle","onContextMenu","open","isHovered","onHover","onHoverLeave","onClose","checkDropdownScroll","dropdown","selectItem","triggerClasses","positionWrapperClasses","menuMobileOverlayClasses","menuClasses","itemValue","isClickable","selected","SpecialOption","SpecialOption2","isSpecialOption","option","dropdownRef","footerRef","headerRef","itemRefs","setItemRef","groupIndex","itemIndex","selectedOption","hoveredOption","headerHovered","footerHovered","hoveredId","menuId","currentValue","getValue","setSelected","isEmpty","selectFirstOption","setHovered","hoveredValue","computedData","setHoveredIdToIndex","group","items","empty","closeableOptions","onDropdownClose","closeDropdown","nonEmptyElements","selectHeaderOrFooterByClick","origin","navigateItem","direction","dropdownMenu","visMin","visMax","onKeydown","handleFocus","handleBlur","debouncedInput","emitInput","computedIconRightClickable","trashhold","headerHeight","footerHeight","attrs","useAttrs","inputBind","itemClasses","itemEmptyClasses","itemGroupClasses","itemHeaderClasses","itemFooterClasses","itemOptionClasses","optionClasses","index$s","Autocomplete","computedTag","computedNativeType","computedDisabled","iconClasses","wrapperClasses","index$r","Button","restartTimer","pauseTimer","startTimer","itemWidth","scrollIndex","switchTo","activeIndex","windowWidth","refresh_","settings","onRefresh","onResized","dragEnd","breakpoint","readonly","translation","delta","total","indicatorCount","indicatorIndex","hasArrows","hasPrev","onPrev","hasNext","onNext","onlyMove","onModeChange","isPaused","onMouseEnter","checkPause","onMouseLeave","status","isTouch","dragX","hold","isDragging","onDragStart","dragMove","dragEndX","signCheck","results","itemsClasses","arrowIconClasses","arrowIconPrevClasses","arrowIconNextClasses","indicatorItemClasses","indicatorsClasses","indicatorClasses","itemStyle","index$q","Carousel","CarouselItem","isIndeterminate","isChecked","index$p","Checkbox","isOpen","contentClasses","index$o","Collapse","selectRef","placeholderVisible","selectOptions","rightIcon","rightIconVariant","selectClasses","picker","nativeInputRef","togglePicker","onActiveChange","ariaRole","triggers","active","onInputClick","dropdownBind","getMonthNames","locale","format","dates","dtf","getWeekdayNames","firstDayOfWeek","j","matchWithGroups","pattern","str","matches","groupMatches","acc","curr","weekBuilder","startingDate","month","year","thisMonth","thisWeek","dayOfWeek","end","daysAgo","daysForward","firstWeekOffset","dow","doy","fwd","daysInYear","weeksInYear","weekOffset","weekOffsetNext","useDatepickerMixins","isDateSelectable","date","validity","enabledDate","disabledDate","isTypeMonth","localeOptions","dtfMonth","sampleTime","formatRegex","part","dateGroups","s","datepicker","hasEvents","dayRefs","setDayRef","refKey","day","clickWeekNumber","week","getDayOfYear","getWeekNumber","mom","resWeek","resYear","eventsDateMatch","weekDay","preventDefault","selectDate","changeFocus","inc","nextDay","setRangeHoverEndDate","dateMatch","dateOne","dateTwo","multiple","dateWithin","cellClasses","tableCellClasses","cellEventsClass","eventClasses","tableRowClasses","tableEventsClasses","focusedDateModel","selectedBeginDate","selectedEndDate","hoveredEndDate","visibleDayNames","currentDayName","eventsInThisMonth","weeksInThisMonth","validateFocusedDay","startingDay","newWeek","eventsInThisWeek","stripped","timed","weekDate","hoveredDateRange","currentDate","monthDays","onSelectedDate","handleSelectRangeDate","handleSelectMultipleDates","multipleSelectedDates","selectedDate","onRangeHoverEndDate","onChangeFocus","tableClasses","tableHeadClasses","tableHeadCellClasses","tableBodyClasses","monthRefs","setMonthRef","eventsInThisYear","monthDates","months","focused","dateMultipleSelected","monthClasses","monthBodyClasses","monthTableClasses","monthCellClasses","defaultDateFormatter","defaultDateParser","pickerRef","formattedValue","isArray","focusedDateData","_initialDate","computedMonthNames","listOfMonths","minMonth","maxMonth","computedDayNames","listOfYears","latestYear","earliestYear","showPrev","dateToCheck","prev","showNext","next","formatNative","onChange","onChangeNativePicker","headerClasses","headerButtonsClasses","prevButtonClasses","nextButtonClasses","listsClasses","footerClasses","dropdownClass","boxClasses","boxClassBind","index$n","Datepicker","AM","PM","HOUR_FORMAT_24","HOUR_FORMAT_12","useTimepickerMixins","isHourFormat24","computedHourFormat","amString","dayPeriod","pmString","meridiens","hourLiteral","parts","literal","idx","minuteLiteral","secondLiteral","defaultTimeFormatter","time","defaultTimeParser","timeGroups","am","dateString12","timeSplit","hours","minutes","seconds","hoursSelected","minutesSelected","secondsSelected","meridienSelected","nativeStep","formatNumber","prependZero","pad","numberOfHours","label","isHourDisabled","hour","minHours","noMinutesAvailable","minute","isMinuteDisabledForHour","maxHours","minMinutes","maxMinutes","isMinuteDisabled","isSecondDisabled","second","minSeconds","maxSeconds","isMeridienDisabled","meridienString","offset","updateDateSelected","onMeridienChange","onHoursChange","onMinutesChange","onSecondsChange","selectSelectClasses","selectPlaceholderClasses","selectBind","separatorClasses","datepickerRef","timepickerRef","updateVModel","minDate","maxDate","minTime","maxTime","datepickerSize","timepickerSize","timepickerDisabled","enableSeconds","defaultDatetimeParser","defaultParser","dayPeriods","datetimeGroups","defaultDatetimeFormatter","datepickerWrapperClasses","timepickerWrapperClasses","index$m","Datetimepicker","index$l","Dropdown","DropdownItem","index$k","Field","index$j","Icon","index$i","Input","displayInFullPage","overlayClasses","InstanceRegistry","__publicField","entry","callback","e","instances","LoadingProgrammatic$1","params","componentParams","propsData","p1","p2","defaultSlot","vnode","createVNode","Loading","render","index$h","LoadingProgrammatic","resetMenu","excludedItems","listClasses","providedData","reset","providedItem","itemParent","isExpanded","triggerReset","child","submenuClasses","index$g","Menu","MenuItem","_teleport","savedScrollTop","isAnimating","handleScroll","showX","customStyle","scrollto","scrollClass","afterEnter","beforeLeave","closeClasses","scrollClasses","noScrollClasses","ModalProgrammatic$1","Modal","index$f","ModalProgrammatic","notificationRef","parentTop","parentBottom","setAutoClose","onBeforeMount","noticeClasses","positionBottomClasses","positionTopClasses","topClasses","bottomClasses","noticeCustomContainerClasses","c","showNotice","correctParent","shouldQueue","handleClose","NotificationProgrammatic$1","defaultParams","notificationParams","NotificationNotice","index$e","Notification","NotificationProgrammatic","linkClasses","current","pageCount","last","firstItem","perPage","hasFirst","hasFirstEllipsis","hasLast","hasLastEllipsis","pagesInRange","pages","getPage","num","ariaLabel","changePage","getAriaPageLabel","pageNumber","isCurrent","page","prevBtnClasses","nextBtnClasses","infoClasses","ellipsisClasses","linkCurrentClasses","listItemClasses","index$d","Pagination","index$c","Radio","index$b","Select","index$a","Skeleton","sidebarContent","transitionName","vertical","hideOnMobile","removeOutsideListener","clickedOutside","SidebarProgrammatic$1","Sidebar","index$9","SidebarProgrammatic","arrowClasses","slider","dragging","startX","startPosition","newPosition","tooltip","tooltipAlways","step","indicator","precision","precisions","decimal","computedTooltipVariant","currentPosition","wrapperStyle","onButtonDown","onDragging","onDragEnd","onLeftKeyDown","setPosition","onRightKeyDown","onHomeKeyDown","onEndKeyDown","diff","percent","stepLength","hidden","tickStyle","tickLabelClasses","emitValue","isRange","minValue","maxValue","valueStart","sliderRef","thumbStartRef","thumbEndRef","valueEnd","isThumbReversed","isTrackClickDisabled","setValues","onInternalValueUpdate","tickValues","result","barSize","barStart","barStyle","newValue","smallValue","largeValue","sliderSize","onSliderClick","sliderOffsetLeft","diffFirst","diffSecond","trackClasses","fillClasses","thumbClasses","thumbWrapperClasses","index$8","Slider","SliderTick","column","performAction","activeItem","isTransitioning","prevItem","nextItem","isItemClickable","itemClick","newId","oldId","oldItem","newItem","stepDividerClasses","stepMarkerClasses","stepContentClasses","stepNavigationClasses","stepLinkLabelClasses","stepLinkClasses","childItem","activate","deactivate","nextAnimation","prevAnimation","oldIndex","newIndex","elementClasses","index$7","Steps","StepItem","switchClasses","switchCheckClasses","index$6","Switch","OSlotComponent","mobileSort","showPlaceholder","sortableColumns","isCurrentSort","sort","isHeaderUnselectable","currentPage","pageChanged","newPage","isMobileActive","slotRef","provider","tableColumns","tableData","row","tableRows","dataTotal","tableCurrentPage","isRowFiltered","currentSortColumn","newTotal","tableWrapperStyle","visibleRows","start","visibleColumns","col","columnCount","count","hasSearchablenewColumns","isScrollable","hasCustomSubheadings","hasCustomFooterSlot","footer","tag","onArrowPressed","selectRow","isRowSelected","selectedRow","getRowKey","filters","handleFiltersChange","onFiltersEvent","doSortSingleColumn","re","isAsc","checkSort","hasSortablenewColumns","isColumnSorted","initSort","sortField","sortDirection","sortColumn","updateDirection","sortBy","sorted","newA","newB","newCheckedRows","lastCheckedRowIndex","rows","isAllChecked","validVisibleData","currentVisibleRow","isAllUncheckable","isRowChecked","removeCheckedRow","checkAll","allChecked","currentRow","checkRow","visibleDetailRows","showDetailRowIcon","expandedRows","toggleDetails","isVisibleDetailRow","closeDetailRow","openDetailRow","handleDetailKey","isActiveDetailRow","isActiveCustomDetailRow","isDraggingRow","isDraggingColumn","canDragRow","canDragColumn","handleDragStart","handleDragEnd","handleDrop","handleDragOver","handleDragLeave","handleColumnDragStart","handleColumnDragEnd","handleColumnDrop","handleColumnDragOver","handleColumnDragLeave","tableWrapperClasses","thBaseClasses","tdBaseClasses","thCheckboxClasses","thDetailedClasses","thSubheadingClasses","tdCheckboxClasses","detailedClasses","tdDetailedChevronClasses","mobileSortClasses","paginationWrapperClasses","paginationWrapperRootClasses","thSortIconClasses","thClasses","rowClasses","rowClass","tdClasses","index$5","Table","TableColumn","clickFirstViableChild","homePressed","endPressed","startingIndex","forward","itemWrapperClasses","navClasses","headerIconClasses","headerTextClasses","index$4","Tabs","TabItem","autocompleteRef","isComposing","itemsLength","hasInput","separatorsAsRegExp","getNormalizedItemText","addItem","reg","itemToAdd","removeItem","onSelect","handleOnBlur","autocompleteRootClasses","autocompleteInputClasses","autocompleteBind","containerClasses","index$3","Taginput","index$2","Timepicker","index$1","Tooltip","dragDropFocus","onFileChange","updateDragDropFocus","values","file","checkType","clearInput","focus","types","type","draggableClasses","Upload","componentKey","plugins"],"mappings":"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"}